{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\centerExamSessionSpecialty\\\\CenterSpecialtyDistribution.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport Notification from \"../utils/Notification\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllEducationTypesQuery, getAllSpecialtiesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { removeTypename, getSpecialtyID, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"40%\",\n    minWidth: \"15rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\" // maxWidth: \"40%\",\n\n  }\n});\nconst validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nconst CESRegistration = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const initialValues = {\n    specialty: \"\",\n    centerNumber: \"\"\n  };\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    educTypeID: \"\",\n    educTypes: [],\n    exams: [],\n    sessions: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: [],\n    specialties: []\n  });\n  const {\n    centerNumber,\n    examID,\n    sessionID,\n    educTypeID,\n    educTypes,\n    exams,\n    examSessions,\n    sessions,\n    specialties,\n    centerExamSessions,\n    centerByNumber\n  } = state;\n\n  const loadExamData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  console.dir(getSessionName);\n\n  const loadEducTypeData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllEducationTypesQuery\n    });\n    console.log(data);\n    const getEducationTypes = data && data.educationTypes;\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      educTypes: getEducationTypes\n    }));\n  };\n\n  const getEducTypeOptions = educTypes && educTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n  useEffect(() => {\n    loadExamData();\n    loadEducTypeData();\n    loadSessionData();\n  }, []);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running the exam session query\");\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      examSessions: \"\"\n    }));\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: \"\"\n    }));\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: \"\"\n    }));\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber);\n\n  const loadCESData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions\n    }));\n  };\n\n  const getCES = centerExamSessions && centerExamSessions[0];\n  console.log(getCES);\n  useEffect(() => {\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerExamSessions: \"\"\n    }));\n    loadCESData();\n  }, [centerNumber, examSessions]);\n\n  const loadSpecialtyData = async () => {\n    console.log(\"running the specialty Selection\");\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSpecialtiesOfAnEducationTypeQuery,\n      variables: {\n        id: educTypeID && educTypeID\n      }\n    });\n    const getEducType = data && data.educationType;\n    const {\n      specialty\n    } = getEducType;\n    const refinedSpecialty = removeTypename(specialty);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      specialties: refinedSpecialty\n    }));\n  };\n\n  const getSpecialtyOptions = specialties && specialties.map(item => ({\n    value: item.id,\n    label: item.specialtyName\n  }));\n  useEffect(() => {\n    loadSpecialtyData();\n  }, [educTypeID]);\n  const reducedSpecialty = specialties && specialties.map((_ref2) => {\n    let {\n      specialtyName\n    } = _ref2,\n        others = _objectWithoutProperties(_ref2, [\"specialtyName\"]);\n\n    return others;\n  });\n  const [createCenterExamSessionSpecialty, {\n    loadingMut,\n    error\n  }] = useMutation(createCenterExamSessionSpecialtyMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      const res = await createCenterExamSessionSpecialty({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          specialty: specialties && getSelectedObject(reducedSpecialty, values.specialty),\n          centerExamSession: getCES && getCES\n        })\n      });\n      setTimeout(() => {\n        setNotify({\n          isOpen: true,\n          message: \"Serie enregistrée au centre pour\",\n          type: \"success\"\n        });\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    }, \"Series offertes par centre\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"educTypeID\",\n      label: \"Type d'enseignement\",\n      component: Select,\n      placeholder: \"Type d'ensignement\",\n      onChange: event => {\n        handleSelectChange(event, \"educTypeID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"educTypeID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 37\n        }\n      }),\n      options: getEducTypeOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"specialty\",\n      label: \"Serie\",\n      component: Select,\n      placeholder: \"Serie\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"specialty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 37\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Serie au centre\")))))));\n  });\n};\n\nexport default CESRegistration; // <Field\n//   variant=\"outlined\"\n//   name=\"specialty\"\n//   label=\"Serie\"\n//   component={Select}\n//   placeholder=\"Serie\"\n//   disabled={isSubmitting}\n//   helpertext={<ErrorMessage name=\"specialty\" />}\n//   options={getExamsOptions}\n//   fullWidth\n// />","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/centerExamSessionSpecialty/CenterSpecialtyDistribution.jsx"],"names":["React","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Notification","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","useMutation","useQuery","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllEducationTypesQuery","getAllSpecialtiesOfAnEducationTypeQuery","createCenterExamSessionSpecialtyMutation","removeTypename","getSpecialtyID","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","minWidth","titleStyled","centerAll","validationSchema","object","shape","CESRegistration","classes","client","notify","setNotify","useState","isOpen","message","type","initialValues","specialty","centerNumber","state","setState","handleSelectChange","handleInputChange","examID","sessionID","educTypeID","educTypes","exams","sessions","centerByNumber","examSessions","centerExamSessions","specialties","loadExamData","error","data","query","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadEducTypeData","getEducationTypes","educationTypes","getEducTypeOptions","educationTypeName","loadExamSessionData","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCES","loadSpecialtyData","getEducType","educationType","refinedSpecialty","getSpecialtyOptions","specialtyName","reducedSpecialty","createCenterExamSessionSpecialty","loadingMut","values","resetForm","setSubmitting","res","centerExamSession","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","centerCode","event"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSpecialtiesOfAnEducationTypeQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"40%\",\r\n    minWidth: \"15rem\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // maxWidth: \"40%\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst CESRegistration = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    specialty: \"\",\r\n    centerNumber: \"\",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    educTypeID: \"\",\r\n    educTypes: [],\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: [],\r\n    specialties: [],\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    educTypeID,\r\n    educTypes,\r\n    exams,\r\n    examSessions,\r\n    sessions,\r\n    specialties,\r\n    centerExamSessions,\r\n    centerByNumber,\r\n  } = state;\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({ ...prev, exams: refinedExams }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({ ...prev, sessions: refinedSessions }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadEducTypeData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllEducationTypesQuery,\r\n    });\r\n\r\n    console.log(data);\r\n    const getEducationTypes = data && data.educationTypes;\r\n    setState((prev) => ({ ...prev, educTypes: getEducationTypes }));\r\n  };\r\n\r\n  const getEducTypeOptions =\r\n    educTypes &&\r\n    educTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadEducTypeData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    setState((state) => ({ ...state, examSessions: \"\" }));\r\n\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({ ...prev, examSessions: \"\" }));\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((state) => ({ ...state, centerByNumber: \"\" }));\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n  const getCES = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCES);\r\n\r\n  useEffect(() => {\r\n    setState((state) => ({ ...state, centerExamSessions: \"\" }));\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  const loadSpecialtyData = async () => {\r\n    console.log(\"running the specialty Selection\");\r\n    const { error, data } = await client.query({\r\n      query: getAllSpecialtiesOfAnEducationTypeQuery,\r\n      variables: {\r\n        id: educTypeID && educTypeID,\r\n      },\r\n    });\r\n\r\n    const getEducType = data && data.educationType;\r\n    const { specialty } = getEducType;\r\n    const refinedSpecialty= removeTypename(specialty)\r\n\r\n    setState((prev) => ({ ...prev, specialties: refinedSpecialty }));\r\n  };\r\n\r\n  const getSpecialtyOptions =\r\n    specialties &&\r\n    specialties.map((item) => ({\r\n      value: item.id,\r\n      label: item.specialtyName,\r\n    }));\r\n\r\n  useEffect(() => {\r\n    loadSpecialtyData();\r\n  }, [educTypeID]);\r\n\r\n const reducedSpecialty = specialties && specialties.map(({  specialtyName, ...others }) => others);\r\n\r\n\r\n\r\n  const [createCenterExamSessionSpecialty, { loadingMut, error }] = useMutation(\r\n    createCenterExamSessionSpecialtyMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await createCenterExamSessionSpecialty({\r\n          variables: {\r\n            ...values,\r\n            specialty:\r\n              specialties &&\r\n              getSelectedObject(reducedSpecialty, values.specialty),\r\n            centerExamSession: getCES && getCES,\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setNotify({\r\n          isOpen: true,\r\n          message: \"Serie enregistrée au centre pour\",\r\n          type: \"success\",\r\n        });\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Series offertes par centre\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"educTypeID\"\r\n                        label=\"Type d'enseignement\"\r\n                        component={Select}\r\n                        placeholder=\"Type d'ensignement\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"educTypeID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"educTypeID\" />}\r\n                        options={getEducTypeOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"specialty\"\r\n                        label=\"Serie\"\r\n                        component={Select}\r\n                        placeholder=\"Serie\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"specialty\" />}\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Serie au centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CESRegistration;\r\n\r\n// <Field\r\n//   variant=\"outlined\"\r\n//   name=\"specialty\"\r\n//   label=\"Serie\"\r\n//   component={Select}\r\n//   placeholder=\"Serie\"\r\n//   disabled={isSubmitting}\r\n//   helpertext={<ErrorMessage name=\"specialty\" />}\r\n//   options={getExamsOptions}\r\n//   fullWidth\r\n// />\r\n"]},"metadata":{},"sourceType":"module"}