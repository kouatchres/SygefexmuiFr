{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subDivision\\\\NewSubDivision.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\nimport { getDivisionsOfARegionQuery, getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\nimport { createSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  division: Yup.string().required(\"Choissisez un dÃ©partement\"),\n  subDivName: Yup.string().required(\"Nom arrondissement Obligatoire\"),\n  subDivCode: Yup.string().required(\"Code arrondissement Obligatoire\")\n});\n\nconst NewSubDivision = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: regions,\n    1: setRegions\n  } = useState([]);\n  const {\n    0: divisions,\n    1: setDivisions\n  } = useState([]);\n  const {\n    0: regionID,\n    1: setRegionID\n  } = useState(\"\");\n  const initialValues = {\n    subDivName: \"\",\n    subDivCode: \"\",\n    division: \"\"\n  };\n\n  const handleRegionIDChange = e => {\n    console.log(e.target);\n    setRegionID(e.target.value);\n  };\n\n  const loadRegionData = async () => {\n    const {\n      error,\n      data,\n      loading\n    } = await client.query({\n      query: getAllRegionsQuery\n    });\n    console.log(data.regions);\n    setRegions(data.regions);\n  };\n\n  useEffect(() => {\n    loadRegionData();\n  }, []);\n  console.log({\n    regionID\n  }); // const refinedRegion = removeTypename(regions)\n\n  const getRegionsOptions = regions && regions.map(item => ({\n    value: item.id,\n    label: item.regName\n  }));\n\n  const loadDivisionData = async () => {\n    const {\n      error,\n      data,\n      loading\n    } = await client.query({\n      skip: regionID && !regionID,\n      query: getDivisionsOfARegionQuery,\n      variables: {\n        id: regionID\n      }\n    });\n    {\n      loading && __jsx(CircularProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }\n      });\n    }\n    console.dir(data);\n\n    const {\n      division\n    } = _objectSpread({}, data.region);\n\n    console.log(division);\n    setDivisions(division);\n  };\n\n  useEffect(() => {\n    loadDivisionData();\n  }, [regionID]);\n  console.log(divisions);\n  const getDivOptions = divisions && divisions.map(item => ({\n    value: item.id,\n    label: item.divName\n  }));\n  console.dir(getDivOptions);\n  const [createSubDivision, {\n    loading,\n    error\n  }] = useMutation(createSubDivisionMutation, {\n    refetchQueries: [\"getAllSubDivisionsQuery\"]\n  });\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createSubDivision({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          division: values.division && getObjectFromID(values.division)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, \"Nouvel Arrondissement\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      variant: \"outlined\",\n      name: \"regionID\",\n      label: \"La R\\xE9gion\",\n      onChange: handleRegionIDChange,\n      component: Select,\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"regionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }),\n      options: getRegionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"division\",\n      label: \"Le D\\xE9partement\",\n      component: Select,\n      placeholder: \"le D\\xE9partement\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"division\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 37\n        }\n      }),\n      options: getDivOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"subDivName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom Arrondissement\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loading,\n      helperText: __jsx(ErrorMessage, {\n        name: \"subDivName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"subDivCode\",\n      type: \"text\",\n      component: TextField,\n      label: \"Code Arrondissement\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loading,\n      helperText: __jsx(ErrorMessage, {\n        name: \"subDivCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 55\n      }\n    }), \"Valid\", isSubmitting ? \"ation en cours\" : \"er\")))))));\n  });\n};\n\nexport default NewSubDivision; //  <SygefexMuiSelect\n//    variant=\"outlined\"\n//    name=\"division\"\n//    label=\"Le DÃ©partement\"\n//    placeholder=\"Le DÃ©partement\"\n//    disabled={isSubmitting}\n//    options={getDivOptions}\n//    helperText={<ErrorMessage name=\"division\" />}\n//  />;\n// //\n// <SygefexMuiSelect\n//   variant=\"outlined\"\n//   name=\"division\"\n//   label=\"Le DÃ©partement\"\n//   placeholder=\"Le DÃ©partement\"\n//   disabled={isSubmitting}\n//   options={getDivOptions}\n//   helperText={<ErrorMessage name=\"division\" />}\n// />\n// <SygefexMuiSelect\n//   variant=\"outlined\"\n//   name=\"division\"\n//   label=\"Le DÃ©partement\"\n//   placeholder=\"Le DÃ©partement\"\n//   disabled={isSubmitting}\n//   helperText={<ErrorMessage name=\"division\" />}\n// >\n//   {division &&\n//     division.map((item) => (\n//       <MenuItem value={item.id} key={item.id}>\n//         {item.divName}\n//       </MenuItem>\n//     ))}\n// </SygefexMuiSelect>\n// <Field\n//   component={TextField}\n//   select\n//   name=\"regionD\"\n//   disabled={isSubmitting}\n//   helperText=\"region\"\n// >\n//   {regions &&\n//     regions.map((item) => (\n//       <MenuItem key={item.id} value={item.id}>\n//         {item.regName}\n//       </MenuItem>\n//     ))}\n// </Field>;\n// <Field\n//   variant=\"outlined\"\n//   disabled={isSubmitting}\n//   fullWidth\n//   placeholder=\"Le DÃ©partement\"\n//   name=\"division\"\n//   label=\"DÃ©partement\"\n//   options={getDivOptions}\n//   component={Select}\n//   helperText={<ErrorMessage name=\"region\" />}\n// />","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subDivision/NewSubDivision.jsx"],"names":["React","useState","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useMutation","useApolloClient","useQuery","getDivisionsOfARegionQuery","getAllRegionsQuery","getObjectFromID","createSubDivisionMutation","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","centerAll","validationSchema","object","shape","division","string","required","subDivName","subDivCode","NewSubDivision","classes","client","regions","setRegions","divisions","setDivisions","regionID","setRegionID","initialValues","handleRegionIDChange","e","console","log","target","value","loadRegionData","error","data","loading","query","getRegionsOptions","map","item","id","label","regName","loadDivisionData","skip","variables","dir","region","getDivOptions","divName","createSubDivision","refetchQueries","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  getDivisionsOfARegionQuery,\r\n  getAllRegionsQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\r\nimport { createSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  division: Yup.string().required(\"Choissisez un dÃ©partement\"),\r\n  subDivName: Yup.string().required(\"Nom arrondissement Obligatoire\"),\r\n  subDivCode: Yup.string().required(\"Code arrondissement Obligatoire\"),\r\n});\r\n\r\nconst NewSubDivision = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [regions, setRegions] = useState([]);\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [regionID, setRegionID] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    subDivName: \"\",\r\n    subDivCode: \"\",\r\n    division: \"\",\r\n  };\r\n  const handleRegionIDChange = (e) => {\r\n    console.log(e.target);\r\n    setRegionID(e.target.value);\r\n  };\r\n  const loadRegionData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    console.log(data.regions);\r\n\r\n    setRegions(data.regions);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.log({ regionID });\r\n  // const refinedRegion = removeTypename(regions)\r\n  const getRegionsOptions =\r\n    regions && regions.map((item) => ({ value: item.id, label: item.regName }));\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      skip: regionID && !regionID,\r\n      query: getDivisionsOfARegionQuery,\r\n      variables: { id: regionID },\r\n    });\r\n    {\r\n      loading && <CircularProgress />;\r\n    }\r\n    console.dir(data);\r\n    const { division } = { ...data.region };\r\n    console.log(division);\r\n    setDivisions(division);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n  }, [regionID]);\r\n\r\n  console.log(divisions);\r\n\r\n  const getDivOptions =\r\n    divisions &&\r\n    divisions.map((item) => ({ value: item.id, label: item.divName }));\r\n\r\n  console.dir(getDivOptions);\r\n  const [createSubDivision, { loading, error }] = useMutation(\r\n    createSubDivisionMutation,\r\n    {\r\n      refetchQueries: [\"getAllSubDivisionsQuery\"],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createSubDivision({\r\n          variables: {\r\n            ...values,\r\n            division: values.division && getObjectFromID(values.division),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Nouvel Arrondissement\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"regionID\"\r\n                        label=\"La RÃ©gion\"\r\n                        onChange={handleRegionIDChange}\r\n                        component={Select}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"regionID\" />}\r\n                        options={getRegionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"division\"\r\n                        label=\"Le DÃ©partement\"\r\n                        component={Select}\r\n                        placeholder=\"le DÃ©partement\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"division\" />}\r\n                        options={getDivOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        name=\"subDivName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom Arrondissement\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"subDivName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"subDivCode\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Code Arrondissement\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"subDivCode\" />}\r\n                      />\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewSubDivision;\r\n//  <SygefexMuiSelect\r\n//    variant=\"outlined\"\r\n//    name=\"division\"\r\n//    label=\"Le DÃ©partement\"\r\n//    placeholder=\"Le DÃ©partement\"\r\n//    disabled={isSubmitting}\r\n//    options={getDivOptions}\r\n//    helperText={<ErrorMessage name=\"division\" />}\r\n//  />;\r\n// //\r\n\r\n// <SygefexMuiSelect\r\n//   variant=\"outlined\"\r\n//   name=\"division\"\r\n//   label=\"Le DÃ©partement\"\r\n//   placeholder=\"Le DÃ©partement\"\r\n//   disabled={isSubmitting}\r\n//   options={getDivOptions}\r\n//   helperText={<ErrorMessage name=\"division\" />}\r\n// />\r\n\r\n// <SygefexMuiSelect\r\n//   variant=\"outlined\"\r\n//   name=\"division\"\r\n//   label=\"Le DÃ©partement\"\r\n//   placeholder=\"Le DÃ©partement\"\r\n//   disabled={isSubmitting}\r\n//   helperText={<ErrorMessage name=\"division\" />}\r\n// >\r\n//   {division &&\r\n//     division.map((item) => (\r\n//       <MenuItem value={item.id} key={item.id}>\r\n//         {item.divName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </SygefexMuiSelect>\r\n\r\n// <Field\r\n//   component={TextField}\r\n//   select\r\n//   name=\"regionD\"\r\n//   disabled={isSubmitting}\r\n//   helperText=\"region\"\r\n// >\r\n//   {regions &&\r\n//     regions.map((item) => (\r\n//       <MenuItem key={item.id} value={item.id}>\r\n//         {item.regName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </Field>;\r\n\r\n// <Field\r\n//   variant=\"outlined\"\r\n//   disabled={isSubmitting}\r\n//   fullWidth\r\n//   placeholder=\"Le DÃ©partement\"\r\n//   name=\"division\"\r\n//   label=\"DÃ©partement\"\r\n//   options={getDivOptions}\r\n//   component={Select}\r\n//   helperText={<ErrorMessage name=\"region\" />}\r\n// />\r\n"]},"metadata":{},"sourceType":"module"}