{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\muiComponents\\\\controls\\\\SygefexMuiRadioGroup.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { getIn } from 'formik';\n\nclass SygefexMuiRadioGroup extends React.PureComponent {\n  render() {\n    const _this$props = this.props,\n          {\n      label,\n      field,\n      form: {\n        touched,\n        errors,\n        setFieldValue\n      },\n      options,\n      required,\n      fullWidth,\n      margin,\n      classes,\n      groupProps\n    } = _this$props,\n          other = _objectWithoutProperties(_this$props, [\"label\", \"field\", \"form\", \"options\", \"required\", \"fullWidth\", \"margin\", \"classes\", \"groupProps\"]);\n\n    const errorText = getIn(errors, field.name);\n    const touchedVal = getIn(touched, field.name);\n    const hasError = touchedVal && errorText !== undefined;\n    return __jsx(FormControl, _extends({\n      component: \"fieldset\",\n      fullWidth: fullWidth,\n      margin: margin,\n      required: required,\n      error: hasError,\n      className: classes && classes.formControl ? classes.formControl : '' // eslint-disable-next-line react/jsx-props-no-spreading\n\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }), __jsx(FormLabel, {\n      className: classes && classes.formLabel ? classes.formLabel : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, label), __jsx(RadioGroup // eslint-disable-next-line react/jsx-props-no-spreading\n    , _extends({}, groupProps, {\n      \"aria-label\": label,\n      name: field.name,\n      value: field.value,\n      onChange: event => setFieldValue(field.name, event.target.value),\n      className: classes && classes.radioGroup ? classes.radioGroup : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), options.map(item => __jsx(FormControlLabel, {\n      key: `${item.label}_${item.value}`,\n      value: item.value,\n      control: __jsx(Radio, {\n        className: classes && classes.radio ? classes.radio : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }),\n      label: item.label,\n      className: classes && classes.formControlLabel ? classes.formControlLabel : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))), hasError && __jsx(FormHelperText, {\n      className: classes && classes.formHelperText ? classes.formHelperText : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, errorText));\n  }\n\n}\n\nSygefexMuiRadioGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  field: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.string\n  }).isRequired,\n  form: PropTypes.shape({\n    touched: PropTypes.object,\n    errors: PropTypes.object,\n    setFieldValue: PropTypes.func\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  required: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n  classes: PropTypes.shape({\n    formControl: PropTypes.string,\n    formLabel: PropTypes.string,\n    radioGroup: PropTypes.string,\n    formControlLabel: PropTypes.string,\n    radio: PropTypes.string,\n    formHelperText: PropTypes.string\n  }),\n  groupProps: PropTypes.shape({\n    row: bool\n  })\n};\nSygefexMuiRadioGroup.defaultProps = {\n  required: false,\n  fullWidth: true,\n  margin: 'normal',\n  classes: undefined,\n  groupProps: undefined\n};\nexport default SygefexMuiRadioGroup;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/muiComponents/controls/SygefexMuiRadioGroup.jsx"],"names":["React","PropTypes","bool","RadioGroup","Radio","FormControl","FormControlLabel","FormLabel","FormHelperText","getIn","SygefexMuiRadioGroup","PureComponent","render","props","label","field","form","touched","errors","setFieldValue","options","required","fullWidth","margin","classes","groupProps","other","errorText","name","touchedVal","hasError","undefined","formControl","formLabel","value","event","target","radioGroup","map","item","radio","formControlLabel","formHelperText","propTypes","string","isRequired","shape","object","func","arrayOf","oneOf","row","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes, { bool } from 'prop-types'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport { getIn } from 'formik'\r\n\r\nclass SygefexMuiRadioGroup extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      label,\r\n      field,\r\n      form: { touched, errors, setFieldValue },\r\n      options,\r\n      required,\r\n      fullWidth,\r\n      margin,\r\n      classes,\r\n      groupProps,\r\n      ...other\r\n    } = this.props\r\n    const errorText = getIn(errors, field.name)\r\n    const touchedVal = getIn(touched, field.name)\r\n    const hasError = touchedVal && errorText !== undefined\r\n    return (\r\n      <FormControl\r\n        component=\"fieldset\"\r\n        fullWidth={fullWidth}\r\n        margin={margin}\r\n        required={required}\r\n        error={hasError}\r\n        className={classes && classes.formControl ? classes.formControl : ''}\r\n        // eslint-disable-next-line react/jsx-props-no-spreading\r\n        {...other}\r\n      >\r\n        <FormLabel\r\n          className={classes && classes.formLabel ? classes.formLabel : ''}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          // eslint-disable-next-line react/jsx-props-no-spreading\r\n          {...groupProps}\r\n          aria-label={label}\r\n          name={field.name}\r\n          value={field.value}\r\n          onChange={(event) => setFieldValue(field.name, event.target.value)}\r\n          className={classes && classes.radioGroup ? classes.radioGroup : ''}\r\n        >\r\n          {options.map((item) => (\r\n            <FormControlLabel\r\n              key={`${item.label}_${item.value}`}\r\n              value={item.value}\r\n              control={\r\n                <Radio\r\n                  className={classes && classes.radio ? classes.radio : ''}\r\n                />\r\n              }\r\n              label={item.label}\r\n              className={\r\n                classes && classes.formControlLabel\r\n                  ? classes.formControlLabel\r\n                  : ''\r\n              }\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n        {hasError && (\r\n          <FormHelperText\r\n            className={\r\n              classes && classes.formHelperText ? classes.formHelperText : ''\r\n            }\r\n          >\r\n            {errorText}\r\n          </FormHelperText>\r\n        )}\r\n      </FormControl>\r\n    )\r\n  }\r\n}\r\n\r\nSygefexMuiRadioGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n  }).isRequired,\r\n  form: PropTypes.shape({\r\n    touched: PropTypes.object,\r\n    errors: PropTypes.object,\r\n    setFieldValue: PropTypes.func,\r\n  }).isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  required: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\r\n  classes: PropTypes.shape({\r\n    formControl: PropTypes.string,\r\n    formLabel: PropTypes.string,\r\n    radioGroup: PropTypes.string,\r\n    formControlLabel: PropTypes.string,\r\n    radio: PropTypes.string,\r\n    formHelperText: PropTypes.string,\r\n  }),\r\n  groupProps: PropTypes.shape({\r\n    row: bool,\r\n  }),\r\n}\r\n\r\nSygefexMuiRadioGroup.defaultProps = {\r\n  required: false,\r\n  fullWidth: true,\r\n  margin: 'normal',\r\n  classes: undefined,\r\n  groupProps: undefined,\r\n}\r\n\r\nexport default SygefexMuiRadioGroup"]},"metadata":{},"sourceType":"module"}