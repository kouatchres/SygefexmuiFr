{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport RegistrationDetails from './RegistrationDetails';\nimport Error from \"../../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nconst CenterRegistrationDetails = ({\n  id\n}) => {\n  // static propTypes = { id: PropTypes.string.isRequired };\n  const client = useApolloClient();\n  const classes = useStyles();\n  const {\n    0: registrationInfo,\n    1: setRegistrationInfo\n  } = useState({\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  });\n  const initialValues = {};\n\n  const loadCenterRegistrationInfo = async () => {\n    const {\n      data\n    } = await client.query({\n      query: centerExamSessionForResultsQuery,\n      variables: {\n        id\n      }\n    });\n    const getCenterExamSession = data.centerExamSession;\n    const {\n      registration,\n      center,\n      examSession\n    } = getCenterExamSession;\n\n    const {\n      exam,\n      session\n    } = _objectSpread({}, examSession);\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      center,\n      registration,\n      exam,\n      session\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterRegistrationInfo();\n  }, []);\n  const {\n    center,\n    session,\n    exam,\n    registration\n  } = registrationInfo;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"divName\",\n      title: \"Dept\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"townName\",\n      title: \"Ville\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerName\",\n      title: \"Centre\",\n      options: {\n        width: 400,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerNumber\",\n      title: \"No\",\n      // grouping: false,\n      type: \"numeric\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }],\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  });\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 2\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(\"div\", {\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.pageStyled,\n    elevation: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    className: classes.centerAll,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    className: classes.titleStyled,\n    color: \"primary\",\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Resultats Complets Du: \", exam && exam.examName, \", Session: \", session && session.sessionName, \", centre: \", center && center.centerCode))), __jsx(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, \" Examen: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 71\n    }\n  }, exam && exam.examName), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }, \" Centre: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 71\n    }\n  }, center && center.centerName), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }, \" Session:\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 71\n    }\n  }, session && session.sessionName)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, registration && registration.map(item => __jsx(RegistrationDetails, {\n    key: item.id,\n    registration: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 45\n    }\n  })))))))));\n};\n\nexport default CenterRegistrationDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","RegistrationDetails","Error","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","registrationInfo","setRegistrationInfo","center","exam","session","registration","initialValues","loadCenterRegistrationInfo","data","query","variables","getCenterExamSession","centerExamSession","examSession","setState","prev","state","columns","field","title","options","headerNoWrap","type","values","isSubmitting","examName","sessionName","centerCode","centerName","map","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport RegistrationDetails from './RegistrationDetails'\r\nimport Error from \"../../ErrorMessage\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails =({id})=> {\r\n    // static propTypes = { id: PropTypes.string.isRequired };\r\nconst client = useApolloClient()\r\nconst classes= useStyles()\r\nconst [registrationInfo, setRegistrationInfo] = useState({\r\n    center:\"\", exam:\"\", session:\"\", registration:[]\r\n})\r\n\r\n\r\nconst initialValues ={}\r\n\r\nconst loadCenterRegistrationInfo=async()=>{\r\n    const { data} = await client.query({\r\nquery:centerExamSessionForResultsQuery,\r\nvariables:{id}\r\n\r\n    })\r\n\r\n    const getCenterExamSession  = data.centerExamSession \r\n                    const {  registration, center,examSession } = getCenterExamSession\r\n                    const { exam, session } = { ...examSession }\r\n\r\n    setState((prev)=>({...prev,center, registration,exam,session }))\r\n}\r\n\r\n        useEffect(()=>{\r\n        loadCenterRegistrationInfo()\r\n        },[])\r\nconst { center, session, exam, registration } =registrationInfo\r\n\r\n\r\n const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region\",\r\noptions: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n\r\n      },\r\n     \r\n      { field: \"divName\", title: \"Dept\",\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"townName\", title: \"Ville\" ,\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"centerName\", title: \"Centre\",\r\n      options: {\r\n            width: 400,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      \r\n      {\r\n        field: \"centerNumber\",\r\n        title: \"No\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n        options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n      },\r\n    ],\r\n     center:\"\", exam:\"\", session:\"\", registration:[]\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n                    return (\r\n\r\n\r\n <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats Complets Du: {exam && exam.examName}, Session: {session && session.sessionName}, centre: {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                        <Grid item xs={12} sm={6}>\r\n                                            <strong> Examen: </strong><span>{exam && exam.examName}</span>\r\n                                        \r\n                                            <strong> Centre: </strong><span>{center && center.centerName}</span>\r\n                                        \r\n                                            <strong> Session:</strong><span>{session && session.sessionName}</span>\r\n                           </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n\r\n\r\n                                    {\r\n                                        registration && registration.map((item) => (\r\n                                            <RegistrationDetails key={item.id} registration={item} />\r\n                                        ))\r\n                                    }\r\n                             </Grid>\r\n                        </Grid>\r\n                </Grid>\r\n            </Form>\r\n          </Paper>\r\n          </div>\r\n            )}\r\n    </Formik>\r\n        );\r\n               \r\n}\r\n\r\nexport default CenterRegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}