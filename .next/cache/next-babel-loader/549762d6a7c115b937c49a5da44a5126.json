{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\score\\\\center\\\\CompleteCenterResults.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID, removeTypename, getSelectedObject } from \"../../queries&Mutations&Functions/Functions\";\nimport useForm from \"../../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    maxWidth: \"25%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\" // minWidth: \"30vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar CompleteCenterResults = function CompleteCenterResults() {\n  _s();\n\n  var _useForm3;\n\n  var classes = useStyles();\n  var client = useApolloClient();\n  var router = useRouter();\n  var initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n\n  var _useForm = useForm((_useForm3 = {\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: []\n  }, _defineProperty(_useForm3, \"centerNumber\", \"\"), _defineProperty(_useForm3, \"centerByNumber\", \"\"), _defineProperty(_useForm3, \"examSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessions\", \"\"), _useForm3)),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      sessions = state.sessions,\n      centerByNumber = state.centerByNumber,\n      examSessions = state.examSessions,\n      centerExamSessions = state.centerExamSessions;\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n  }, []);\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"runningg the exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, error, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              error = _yield$client$query4.error;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  var getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID); // getCESID &&\n  //   Router.push({\n  //     pathname: \"/show/results/centerResults\",\n  //     query: {\n  //       id: getCESID.id,\n  //     },\n  //   });\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(values, _ref7) {\n        var setSubmitting, resetForm;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                setSubmitting = _ref7.setSubmitting, resetForm = _ref7.resetForm;\n                centerExamSessions && router.push({\n                  pathname: \"/show/results/centerResults\",\n                  query: {\n                    id: getCESID.id\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x, _x2) {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, function (_ref9) {\n    var submitForm = _ref9.submitForm,\n        setFieldValue = _ref9.setFieldValue,\n        isSubmitting = _ref9.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, \"Resultats g\\xE9n\\xE9raux\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"0\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 42\n      }\n    }), \"Enr\\xE9gistr\", isSubmitting ? \"ement en cours\" : \"er\")))))));\n  });\n};\n\n_s(CompleteCenterResults, \"HIn04wqSYFL/A4G0ldLDjMQULEY=\", false, function () {\n  return [useStyles, useApolloClient, useRouter, useForm];\n});\n\n_c = CompleteCenterResults;\nexport default CompleteCenterResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompleteCenterResults\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/score/center/CompleteCenterResults.jsx"],"names":["React","useEffect","Error","Yup","useRouter","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getObjectFromID","removeTypename","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","maxWidth","titleStyled","centerAll","validationSchema","object","shape","CompleteCenterResults","classes","client","router","initialValues","centerNumber","examID","sessionID","exams","sessions","state","setState","handleSelectChange","handleInputChange","centerByNumber","examSessions","centerExamSessions","makeCenterVariableObject","centerCodeValue","storedCenter","loadExamData","query","error","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","values","setSubmitting","resetForm","push","pathname","submitForm","setFieldValue","isSubmitting","centerCode","event"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n} from \"../../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  getObjectFromID,\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"25%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst CompleteCenterResults = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const router = useRouter();\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n  } = state;\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n  }, []);\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"runningg the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n  // getCESID &&\r\n  //   Router.push({\r\n  //     pathname: \"/show/results/centerResults\",\r\n  //     query: {\r\n  //       id: getCESID.id,\r\n  //     },\r\n  //   });\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        centerExamSessions &&\r\n          router.push({\r\n            pathname: \"/show/results/centerResults\",\r\n            query: {\r\n              id: getCESID.id,\r\n            },\r\n          });\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Resultats généraux\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"0\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        Enrégistr{isSubmitting ? \"ement en cours\" : \"er\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CompleteCenterResults;\r\n"]},"metadata":{},"sourceType":"module"}