{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport RegistrationDetails from './RegistrationDetails';\nimport Error from \"../../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\n\nconst CenterRegistrationDetails = ({\n  id\n}) => {\n  // static propTypes = { id: PropTypes.string.isRequired };\n  const client = useApolloClient();\n  const {\n    0: registrationInfo,\n    1: setRegistrationInfo\n  } = useState({\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  });\n\n  const loadCenterRegistrationInfo = async () => {\n    const {\n      data\n    } = await client.query({\n      query: centerExamSessionForResultsQuery,\n      variables: {\n        id\n      }\n    });\n    const getCenterExamSession = data.centerExamSession;\n    const {\n      registration,\n      center,\n      examSession\n    } = getCenterExamSession;\n\n    const {\n      exam,\n      session\n    } = _objectSpread({}, examSession);\n\n    setRegistrationInfo(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      center,\n      registration,\n      exam,\n      session\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterRegistrationInfo();\n  }, []);\n  const {\n    center,\n    session,\n    exam,\n    registration\n  } = registrationInfo;\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(\"div\", {\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.pageStyled,\n    elevation: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    className: classes.centerAll,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    className: classes.titleStyled,\n    color: \"primary\",\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Recu Candidat Resultat Complets Du: \", exam && exam.examName, \", Session: \", session && session.sessionName, \", centre: \", center && center.centerCode))), __jsx(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 45\n    }\n  }, \" Examen: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 71\n    }\n  }, exam && exam.examName), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, \" Centre: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 71\n    }\n  }, center && center.centerName), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, \" Session:\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 71\n    }\n  }, session && session.sessionName)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, \"Series: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 70\n    }\n  }, series && series.seriesName), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 45\n    }\n  }, \"Code: \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 68\n    }\n  }, series && series.seriesCode)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 54\n    }\n  }, \"No Candidat:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 54\n    }\n  }, \"Nom :\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 54\n    }\n  }, \"Prenom:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 54\n    }\n  }, \"Autres:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 54\n    }\n  }, \"Date:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 54\n    }\n  }, \"Lieu:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }, \"  \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 55\n    }\n  }, \"Sexe:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 45\n    }\n  }, \"  \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 55\n    }\n  }, \"Tel:\")), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, \"  \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 55\n    }\n  }, \"Resultat:\")), registration && registration.map(item => __jsx(RegistrationDetails, {\n    key: item.id,\n    registration: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 45\n    }\n  })))))))));\n};\n\nexport default CenterRegistrationDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","RegistrationDetails","Error","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","CenterRegistrationDetails","id","client","registrationInfo","setRegistrationInfo","center","exam","session","registration","loadCenterRegistrationInfo","data","query","variables","getCenterExamSession","centerExamSession","examSession","prev","initialValues","values","isSubmitting","classes","centerAll","pageStyled","titleStyled","examName","sessionName","centerCode","centerName","series","seriesName","seriesCode","map","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport RegistrationDetails from './RegistrationDetails'\r\nimport Error from \"../../ErrorMessage\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\nconst CenterRegistrationDetails =({id})=> {\r\n    // static propTypes = { id: PropTypes.string.isRequired };\r\nconst client = useApolloClient()\r\nconst [registrationInfo, setRegistrationInfo] = useState({\r\n    center:\"\", exam:\"\", session:\"\", registration:[]\r\n})\r\n\r\n\r\n\r\n\r\nconst loadCenterRegistrationInfo=async()=>{\r\n    const { data} = await client.query({\r\nquery:centerExamSessionForResultsQuery,\r\nvariables:{id}\r\n\r\n    })\r\n\r\n    const getCenterExamSession  = data.centerExamSession \r\n                    const {  registration, center,examSession } = getCenterExamSession\r\n                    const { exam, session } = { ...examSession }\r\n\r\n    setRegistrationInfo((prev)=>({...prev,center, registration,exam,session }))\r\n}\r\n\r\n        useEffect(()=>{\r\n        loadCenterRegistrationInfo()\r\n        },[])\r\nconst { center, session, exam, registration } =registrationInfo\r\n\r\n                    return (\r\n\r\n\r\n <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Recu Candidat\r\n                      Resultat Complets Du: {exam && exam.examName}, Session: {session && session.sessionName}, centre: {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                                    <Grid item xs={12} sm={6}>\r\n\r\n                                        \r\n                                            <strong> Examen: </strong><span>{exam && exam.examName}</span>\r\n                                        \r\n                                            <strong> Centre: </strong><span>{center && center.centerName}</span>\r\n                                        \r\n                                            <strong> Session:</strong><span>{session && session.sessionName}</span>\r\n                                       </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n\r\n                                       \r\n                                            <strong>Series: </strong><span>{series && series.seriesName}</span>\r\n                                       \r\n                                            <strong>Code: </strong><span>{series && series.seriesCode}</span>\r\n                                 </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n\r\n                                       \r\n                                            <strong> <span>No Candidat:</span></strong>\r\n                                       \r\n                                            <strong> <span>Nom :</span></strong>\r\n                                       \r\n                                            <strong> <span>Prenom:</span></strong>\r\n                                       \r\n                                            <strong> <span>Autres:</span></strong>\r\n                                       \r\n                                            <strong> <span>Date:</span></strong>\r\n                                       \r\n                                            <strong> <span>Lieu:</span></strong>\r\n                                       \r\n                                            <strong>  <span>Sexe:</span></strong>\r\n                                       \r\n                                            <strong>  <span>Tel:</span></strong>\r\n\r\n                                       \r\n                                            <strong>  <span>Resultat:</span></strong>\r\n\r\n\r\n                                    {\r\n                                        registration && registration.map((item) => (\r\n                                            <RegistrationDetails key={item.id} registration={item} />\r\n                                        ))\r\n                                    }\r\n                           </Grid>\r\n                        </Grid>\r\n                     </Grid>\r\n            </Form>\r\n          </Paper>\r\n          </div>\r\n            )}\r\n    </Formik>\r\n        );\r\n               \r\n}\r\n\r\nexport default CenterRegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}