{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\exam\\\\NewExam.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { ErrorMessage, Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SygefexMuiInput from \"../muiComponents/controls/SygefexMuiInput\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\nimport { createExamMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { useSnackbar } from \"notistack\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  examName: Yup.string().required(\"Nom examen Obligatoire\"),\n  examCode: Yup.string().required(\"Code examen Obligatoire\")\n});\n\nvar NewExam = function NewExam() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar,\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var handleClick = function handleClick() {\n    enqueueSnackbar(\"I love hooks\");\n  };\n\n  var initialValues = {\n    examName: \"\",\n    examCode: \"\"\n  };\n\n  var _useMutation = useMutation(createExamMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createExam = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting, resetForm = _ref.resetForm;\n                _context.next = 3;\n                return createExam({\n                  variables: _objectSpread({}, values)\n                });\n\n              case 3:\n                res = _context.sent;\n                enqueueSnackbar(\"Customise this snackbar youself.\", {\n                  action: res && res\n                });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var submitForm = _ref3.submitForm,\n        setFieldValue = _ref3.setFieldValue,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, \"Nouvel Examen\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, __jsx(SygefexMuiInput, {\n      autocomplete: \"off\",\n      name: \"examName\",\n      type: \"text\",\n      label: \"Nom Examen\",\n      fullWidth: true,\n      variant: \"standard\",\n      disabled: isSubmitting || loading,\n      helperText: __jsx(ErrorMessage, {\n        name: \"examName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }), __jsx(SygefexMuiInput, {\n      autocomplete: \"off\",\n      name: \"examCode\",\n      type: \"text\",\n      label: \"Code Examen\",\n      fullWidth: true,\n      variant: \"standard\",\n      disabled: isSubmitting || loading,\n      helperText: __jsx(ErrorMessage, {\n        name: \"examCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting || loading,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 55\n      }\n    }), \"Valid\", isSubmitting ? \"ation en cours\" : \"er\")))))));\n  });\n};\n\n_s(NewExam, \"gRUYwYrfQ7CrBF4V3mz8wKfQswI=\", false, function () {\n  return [useStyles, useSnackbar, useMutation];\n});\n\n_c = NewExam;\nexport default NewExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExam\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/exam/NewExam.jsx"],"names":["React","Error","Yup","ErrorMessage","Formik","Form","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","SygefexMuiInput","useMutation","getObjectFromID","createExamMutation","useSnackbar","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","borderRadius","centerAll","validationSchema","object","shape","examName","string","required","examCode","NewExam","classes","enqueueSnackbar","closeSnackbar","handleClick","initialValues","createExam","loading","error","values","setSubmitting","resetForm","variables","res","action","setTimeout","console","log","JSON","stringify","submitForm","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { ErrorMessage, Formik, Form } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SygefexMuiInput from \"../muiComponents/controls/SygefexMuiInput\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\r\nimport { createExamMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  examName: Yup.string().required(\"Nom examen Obligatoire\"),\r\n  examCode: Yup.string().required(\"Code examen Obligatoire\"),\r\n});\r\n\r\nconst NewExam = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    enqueueSnackbar(\"I love hooks\");\r\n  };\r\n  const initialValues = {\r\n    examName: \"\",\r\n    examCode: \"\",\r\n  };\r\n\r\n  const [createExam, { loading, error }] = useMutation(createExamMutation);\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createExam({\r\n          variables: {\r\n            ...values,\r\n          },\r\n        });\r\n        enqueueSnackbar(\"Customise this snackbar youself.\", {\r\n          action: res && res,\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        variant=\"body1\"\r\n                      >\r\n                        Nouvel Examen\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <SygefexMuiInput\r\n                        autocomplete=\"off\"\r\n                        name=\"examName\"\r\n                        type=\"text\"\r\n                        label=\"Nom Examen\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"examName\" />}\r\n                      />\r\n\r\n                      <SygefexMuiInput\r\n                        autocomplete=\"off\"\r\n                        name=\"examCode\"\r\n                        type=\"text\"\r\n                        label=\"Code Examen\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"examCode\" />}\r\n                      />\r\n\r\n                      <Button\r\n                        disabled={isSubmitting || loading}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewExam;\r\n"]},"metadata":{},"sourceType":"module"}