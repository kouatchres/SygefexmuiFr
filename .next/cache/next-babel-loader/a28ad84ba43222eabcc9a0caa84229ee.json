{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\candidate\\\\CandResultsByRegMatricule.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Error from \"../../ErrorMessage\";\nimport debounce from \"lodash.debounce\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Grid, Typography, Paper, LinearProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getRegistrationIDFromRegNumberQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport { useRouter } from \"next/router\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\n\nconst ResultsBy = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const classes = useStyles();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    candID: \"\",\n    loading: \"false\"\n  });\n  const initialValues = {};\n\n  const handleChange = e => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      loading: true\n    }));\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: val\n    }));\n  };\n\n  const makeCandVariableObject = candCodeValue => {\n    const storedCandidate = {\n      candRegistrationNumber: `${candCodeValue}`\n    };\n    return storedCandidate;\n  };\n\n  const onChange = debounce(async (e, client) => {\n    console.log(\"seaching\");\n    const res = await client.query({\n      query: getRegistrationIDFromRegNumberQuery,\n      variables: {\n        candRegistrationNumber: e.target.value\n      }\n    });\n    console.log(res.data);\n\n    const getCandNumber = _objectSpread({}, res.data.candidateRegistrationNumber);\n\n    setState({\n      candID: getCandNumber.id,\n      loading: false\n    });\n  }, 400);\n  const {\n    candID\n  } = state;\n  candID && router.push({\n    pathname: \"/show/results/candResults\",\n    query: {\n      id: candID\n    }\n  });\n  console.log(state);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues // validationSchema={validationSchema}\n    ,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, (isSubmitting || state.loading) && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 53\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }\n    }, \"Resultat Individuel\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, __jsx(ApolloConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, client => __jsx(Field, {\n      name: \"candRegistrationNumber\",\n      component: TextField,\n      type: \"text\",\n      fullWidth: true,\n      label: \"Num\\xE9ro d'Inscription du Candidat\",\n      variant: \"outlined\",\n      type: \"search\",\n      placeholder: \"Num\\xE9ro d'Inscription du Candidat\",\n      onChange: e => {\n        e.persist();\n        onChange(e, client);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }))))))));\n  });\n};\n\nexport default ResultsBy;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/candidate/CandResultsByRegMatricule.jsx"],"names":["React","useState","Error","debounce","ApolloConsumer","ErrorMessage","Formik","Form","Field","TextField","Grid","Typography","Paper","LinearProgress","makeStyles","getRegistrationIDFromRegNumberQuery","useRouter","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","borderRadius","borderBottom","borderTop","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","centerAll","ResultsBy","router","id","query","classes","state","setState","candID","loading","initialValues","handleChange","e","prev","name","value","type","target","val","parseInt","makeCandVariableObject","candCodeValue","storedCandidate","candRegistrationNumber","onChange","client","console","log","res","variables","data","getCandNumber","candidateRegistrationNumber","push","pathname","values","setSubmitting","resetForm","setTimeout","JSON","stringify","submitForm","isSubmitting","persist"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Error from \"../../ErrorMessage\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Grid, Typography, Paper, LinearProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getRegistrationIDFromRegNumberQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport { useRouter } from \"next/router\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n    borderRadius: \"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\nconst ResultsBy = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({ candID: \"\", loading: \"false\" });\r\n  const initialValues = {};\r\n\r\n  const handleChange = (e) => {\r\n    setState((prev) => ({ ...prev, loading: true }));\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState((prev) => ({ ...prev, [name]: val }));\r\n  };\r\n\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candRegistrationNumber: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n  const onChange = debounce(async (e, client) => {\r\n    console.log(\"seaching\");\r\n    const res = await client.query({\r\n      query: getRegistrationIDFromRegNumberQuery,\r\n      variables: { candRegistrationNumber: e.target.value },\r\n    });\r\n    console.log(res.data);\r\n    const getCandNumber = { ...res.data.candidateRegistrationNumber };\r\n    setState({\r\n      candID: getCandNumber.id,\r\n      loading: false,\r\n    });\r\n  }, 400);\r\n  const { candID } = state;\r\n  candID &&\r\n    router.push({\r\n      pathname: \"/show/results/candResults\",\r\n      query: { id: candID },\r\n    });\r\n  console.log(state);\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      // validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || state.loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Resultat Individuel\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <ApolloConsumer>\r\n                        {(client) => (\r\n                          <Field\r\n                            name=\"candRegistrationNumber\"\r\n                            component={TextField}\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            label=\"Numéro d'Inscription du Candidat\"\r\n                            variant=\"outlined\"\r\n                            type=\"search\"\r\n                            placeholder=\"Numéro d'Inscription du Candidat\"\r\n                            onChange={(e) => {\r\n                              e.persist();\r\n                              onChange(e, client);\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </ApolloConsumer>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ResultsBy;\r\n"]},"metadata":{},"sourceType":"module"}