{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\rank\\\\NewRankList.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport NewRank from \"./NewRank\";\nimport UpdateRank from \"./UpdateRank\";\nconst useStyles = makeStyles({\n  stickyActionsColumn: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& td:first-child, th:first-child\": {\n          backgroundColor: \"#f5f5f5\",\n          position: \"sticky\",\n          left: 0,\n          zIndex: 10\n        },\n        \"& th:first-child\": {\n          zIndex: 10\n        }\n      }\n    }\n  },\n  stickyHeader: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& th\": {\n          backgroundColor: \"#5aa193\",\n          position: \"sticky\",\n          top: \"4rem\",\n          zIndex: 10\n        },\n        \"& th\": {\n          zIndex: 10\n        }\n      }\n    }\n  }\n});\n\nconst RegionList = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: isAddPopupOpen,\n    1: setIsAddPopupOpen\n  } = useState(false);\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"rankName\",\n      title: \"Libelle poste\"\n    }, {\n      field: \"rankCode\",\n      title: \"Code Poste\"\n    }, {\n      field: \"id\",\n      title: \"ID\"\n    }],\n    data: []\n  });\n\n  const loadRegionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllRanksQuery\n    });\n    {\n      error && __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      });\n    }\n\n    const {\n      ranks\n    } = _objectSpread({}, data);\n\n    console.log(ranks);\n    console.log(ranks);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: ranks\n    }));\n  };\n\n  useEffect(() => {\n    loadRegionData();\n  }, []);\n\n  const handleAddPopupClose = event => {\n    setIsAddPopupOpen(false);\n  };\n\n  const handleUpdatePopupClose = event => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  console.dir(state.data);\n  const actions = [{\n    icon: () => __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Nouveau poste\",\n    isFreeAction: true,\n    onClick: (event, rowData) => {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Modifie poste\",\n    onClick: (event, rowData) => {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: () => __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Supprimer poste\",\n    onClick: (event, rowData) => confirm(\"You want to delete \" + rowData.id)\n  }];\n  console.dir(state.data);\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    icons: tableIcons,\n    title: \"Liste des Postes\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouveau Poste\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, __jsx(NewRank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  })), __jsx(UpdatePopup, {\n    title: updatePopupState.id,\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateRank, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RegionList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/rank/NewRankList.jsx"],"names":["React","forwardRef","useEffect","useState","MaterialTable","Paper","makeStyles","useApolloClient","getAllRanksQuery","tableIcons","AddPopup","UpdatePopup","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","NewRank","UpdateRank","useStyles","stickyActionsColumn","backgroundColor","position","left","zIndex","stickyHeader","top","RegionList","classes","client","isAddPopupOpen","setIsAddPopupOpen","updatePopupState","setUpdatePopupState","isOpen","id","state","setState","columns","field","title","data","loadRegionData","error","query","ranks","console","log","prev","handleAddPopupClose","event","handleUpdatePopupClose","dir","actions","icon","tooltip","isFreeAction","onClick","rowData","confirm","marginTop"],"mappings":"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","sourcesContent":["import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport NewRank from \"./NewRank\";\r\nimport UpdateRank from \"./UpdateRank\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickyActionsColumn: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& td:first-child, th:first-child\": {\r\n          backgroundColor: \"#f5f5f5\",\r\n          position: \"sticky\",\r\n          left: 0,\r\n          zIndex: 10,\r\n        },\r\n        \"& th:first-child\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& th\": {\r\n          backgroundColor: \"#5aa193\",\r\n          position: \"sticky\",\r\n          top: \"4rem\",\r\n          zIndex: 10,\r\n        },\r\n        \"& th\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst RegionList = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"rankName\",\r\n        title: \"Libelle poste\",\r\n      },\r\n      {\r\n        field: \"rankCode\",\r\n        title: \"Code Poste\",\r\n      },\r\n      { field: \"id\", title: \"ID\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadRegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRanksQuery,\r\n    });\r\n    {\r\n      error && <Error error={error} />;\r\n    }\r\n    const { ranks } = { ...data };\r\n    console.log(ranks);\r\n    console.log(ranks);\r\n    setState((prev) => ({ ...prev, data: ranks }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n\r\n  const handleAddPopupClose = (event) => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = (event) => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  console.dir(state.data);\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Nouveau poste\",\r\n      isFreeAction: true,\r\n      onClick: (event, rowData) => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifie poste\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer poste\",\r\n      onClick: (event, rowData) => confirm(\"You want to delete \" + rowData.id),\r\n    },\r\n  ];\r\n\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Liste des Postes\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n      />\r\n      <AddPopup\r\n        title=\"Nouveau Poste\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <NewRank />\r\n      </AddPopup>\r\n      <UpdatePopup\r\n        title={updatePopupState.id}\r\n        isOpen={updatePopupState.isOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateRank id={updatePopupState.id} />\r\n      </UpdatePopup>\r\n    </Paper>\r\n  );\r\n};\r\nexport default RegionList;\r\n"]},"metadata":{},"sourceType":"module"}