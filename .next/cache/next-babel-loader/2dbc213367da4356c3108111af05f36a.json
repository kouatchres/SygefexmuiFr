{"ast":null,"code":"import _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\NewDivision.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\nimport { createDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30%\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  divName: Yup.string().required(\"Nom Département Obligatoire\"),\n  divCode: Yup.string().required(\"Code Département Obligatoire\"),\n  region: Yup.object().required(\"Région Obligatoire\")\n});\n\nvar NewDivision = function NewDivision() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useState = useState([]),\n      regions = _useState[0],\n      setRegions = _useState[1];\n\n  var initialValues = {\n    divName: \"\",\n    divCode: \"\",\n    region: \"\"\n  };\n\n  var loadRegionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, loading;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              loading = _yield$client$query.loading;\n              console.log(data.regions);\n              setRegions(data.regions);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRegionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRegionData();\n  }, []); // const refinedRegion = removeTypename(regions)\n\n  var getRegionsOptions = regions && regions.map(function (item) {\n    return {\n      value: item,\n      label: item.regName\n    };\n  });\n\n  var _useMutation = useMutation(createDivisionMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createDivision = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref2) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n                _context2.next = 3;\n                return createDivision({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    region: values.region && getObjectFromID(values.region.id)\n                  })\n                });\n\n              case 3:\n                res = _context2.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var submitForm = _ref4.submitForm,\n        setFieldValue = _ref4.setFieldValue,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, \"Nouveau D\\xE9partement\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      component: Select,\n      autocomplete: \"off\",\n      variant: \"outlined\",\n      name: \"region\",\n      label: \"La R\\xE9gion\",\n      placeholder: \"la R\\xE9gion\",\n      disabled: isSubmitting,\n      options: getRegionsOptions,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"region\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      autocomplete: \"off\",\n      name: \"divName\",\n      type: \"text\",\n      label: \"Nom D\\xE9partement\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loading,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"divName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      autocomplete: \"off\",\n      name: \"divCode\",\n      type: \"text\",\n      label: \"Code D\\xE9partement\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loading,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"divCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting || loading,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 55\n      }\n    }), \"Valid\", isSubmitting ? \"ation en cours\" : \"er\")))))));\n  });\n};\n\n_s(NewDivision, \"pysVXFyZ/Eyc4K856lMMbkuZERs=\", false, function () {\n  return [useStyles, useApolloClient, useMutation];\n});\n\n_c = NewDivision;\nexport default NewDivision; // <SygefexMuiSelect\n// name=\"region\"\n// margin=\"normal\"\n// onChange={(value) =>\n//   setFieldValue(\"region\", value.target)\n// }\n// placeholder=\"la Région\"\n// disabled={isSubmitting}\n// >\n//   {regions &&\n//     regions.map((item) => (\n//       <MenuItem key={item.id} value={item.id}>\n//         {item.regName}\n//       </MenuItem>\n//     ))}\n// </Field>\n\nvar _c;\n\n$RefreshReg$(_c, \"NewDivision\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/NewDivision.jsx"],"names":["React","useState","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","useMutation","useApolloClient","makeStyles","getAllRegionsQuery","getObjectFromID","createDivisionMutation","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","borderRadius","centerAll","validationSchema","object","shape","divName","string","required","divCode","region","NewDivision","classes","client","regions","setRegions","initialValues","loadRegionData","query","error","data","loading","console","log","getRegionsOptions","map","item","value","label","regName","createDivision","values","setSubmitting","resetForm","variables","id","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\r\nimport { createDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30%\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  divName: Yup.string().required(\"Nom Département Obligatoire\"),\r\n  divCode: Yup.string().required(\"Code Département Obligatoire\"),\r\n  region: Yup.object().required(\"Région Obligatoire\"),\r\n});\r\n\r\nconst NewDivision = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [regions, setRegions] = useState([]);\r\n\r\n  const initialValues = {\r\n    divName: \"\",\r\n    divCode: \"\",\r\n    region: \"\",\r\n  };\r\n  const loadRegionData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    console.log(data.regions);\r\n    setRegions(data.regions);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  // const refinedRegion = removeTypename(regions)\r\n  const getRegionsOptions =\r\n    regions && regions.map((item) => ({ value: item, label: item.regName }));\r\n\r\n  const [createDivision, { loading, error }] = useMutation(\r\n    createDivisionMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createDivision({\r\n          variables: {\r\n            ...values,\r\n            region: values.region && getObjectFromID(values.region.id),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={20}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Nouveau Département\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        component={Select}\r\n                        autocomplete=\"off\"\r\n                        variant=\"outlined\"\r\n                        name=\"region\"\r\n                        label=\"La Région\"\r\n                        placeholder=\"la Région\"\r\n                        disabled={isSubmitting}\r\n                        options={getRegionsOptions}\r\n                        helpertext={<ErrorMessage name=\"region\" />}\r\n                      />\r\n                      <Field\r\n                        component={TextField}\r\n                        autocomplete=\"off\"\r\n                        name=\"divName\"\r\n                        type=\"text\"\r\n                        label=\"Nom Département\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loading}\r\n                        helpertext={<ErrorMessage name=\"divName\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        component={TextField}\r\n                        autocomplete=\"off\"\r\n                        name=\"divCode\"\r\n                        type=\"text\"\r\n                        label=\"Code Département\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loading}\r\n                        helpertext={<ErrorMessage name=\"divCode\" />}\r\n                      />\r\n\r\n                      <Button\r\n                        disabled={isSubmitting || loading}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewDivision;\r\n\r\n// <SygefexMuiSelect\r\n// name=\"region\"\r\n// margin=\"normal\"\r\n// onChange={(value) =>\r\n//   setFieldValue(\"region\", value.target)\r\n// }\r\n// placeholder=\"la Région\"\r\n// disabled={isSubmitting}\r\n// >\r\n//   {regions &&\r\n//     regions.map((item) => (\r\n//       <MenuItem key={item.id} value={item.id}>\r\n//         {item.regName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </Field>\r\n"]},"metadata":{},"sourceType":"module"}