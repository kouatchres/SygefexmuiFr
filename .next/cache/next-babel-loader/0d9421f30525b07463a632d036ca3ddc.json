{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subject\\\\SubjectList.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { div } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getAllSubjectsWithEducTypesQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { deleteSubjectMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport CreateSubject from \"./CreateSubject\";\nimport UpdateSubject from \"./UpdateSubject\";\nconst useStyles = makeStyles({\n  stickyActionsColumn: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& td:first-child, th:first-child\": {\n          backgroundColor: \"#f5f5f5\",\n          position: \"sticky\",\n          left: 0,\n          zIndex: 10\n        },\n        \"& th:first-child\": {\n          zIndex: 10\n        }\n      }\n    }\n  },\n  stickyHeader: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& th\": {\n          backgroundColor: \"#5aa193\",\n          position: \"sticky\",\n          top: \"4rem\",\n          zIndex: 10\n        },\n        \"& th\": {\n          zIndex: 10\n        }\n      }\n    }\n  }\n});\n\nconst SubjectList = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: isAddPopupOpen,\n    1: setIsAddPopupOpen\n  } = useState(false);\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n  const {\n    0: deleteConfirmDialog,\n    1: setDeleteConfirmDialog\n  } = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"subjectName\",\n      title: \"Libelle matière\"\n    }, {\n      field: \"subjectCode\",\n      title: \"Code matière\"\n    }, {\n      field: \"subjectType\",\n      title: \"Type matière\"\n    }, {\n      field: \"subjectGroup\",\n      title: \"Groupe matière\"\n    } // {\n    //   field: \"educationTypeName\",\n    //   title: \"Libelle matière\",\n    // },\n    ],\n    data: []\n  });\n\n  const loadCandScoreData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSubjectsWithEducTypesQuery\n    });\n    console.log(data);\n\n    const {\n      subjects\n    } = _objectSpread({}, data);\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: subjects\n    }));\n  };\n\n  useEffect(() => {\n    loadCandScoreData();\n  }, []);\n\n  const handleAddPopupClose = event => {\n    setIsAddPopupOpen(false);\n  };\n\n  const handleUpdatePopupClose = event => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const handleDeleteConfirmDialog = () => {\n    setDeleteConfirmDialog(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  console.dir(state.data);\n  const [deleteSubject, {\n    loading\n  }] = useMutation(deleteSubjectMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    } // update: updateCache(),\n\n  });\n  const actions = [{\n    icon: () => __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Nouvelle matière\",\n    isFreeAction: true,\n    onClick: (event, rowData) => {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"modifier matière\",\n    onClick: (event, rowData) => {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: () => __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Supprimer matière\",\n    onClick: (event, rowData) => setDeleteConfirmDialog({\n      id: rowData.id,\n      isOpen: true,\n      title: \"Etes-vous sur de suprimer cette inofrmation\",\n      subtitle: \"Une fois supprimées, les informations seront perdues a jamais\",\n      onConfirm: () => {\n        rowData.id && deleteSubject(rowData.id);\n        setNotify({\n          isOpen: true,\n          message: \"Arrondissement Supprimé avec success\",\n          type: \"error\"\n        });\n      }\n    })\n  }];\n  console.dir(state.data);\n  return __jsx(\"div\", {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    className: classes.head,\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#829079\",\n          borderTopRightRadius: \"0.5rem\",\n          borderTopLeftRadius: \"0.5rem\",\n          color: \"#ede6b9\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, __jsx(MTableToolbar, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      })))\n    },\n    icons: tableIcons,\n    title: \"Liste de mati\\xE8res\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        color: \"#ede6b9\",\n        // color: \"#ff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#b9925e\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouvelle mati\\xE8re\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, __jsx(CreateSubject, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }), __jsx(UpdatePopup, {\n    title: updatePopupState.id,\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateSubject, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SubjectList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subject/SubjectList.jsx"],"names":["React","useEffect","useState","div","makeStyles","useApolloClient","useMutation","getAllSubjectsWithEducTypesQuery","tableIcons","AddPopup","UpdatePopup","ConfirmDialog","MaterialTable","MTableToolbar","deleteSubjectMutation","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","CreateSubject","UpdateSubject","useStyles","stickyActionsColumn","backgroundColor","position","left","zIndex","stickyHeader","top","SubjectList","classes","client","isAddPopupOpen","setIsAddPopupOpen","updatePopupState","setUpdatePopupState","isOpen","id","deleteConfirmDialog","setDeleteConfirmDialog","title","subtitle","state","setState","columns","field","data","loadCandScoreData","error","query","console","log","subjects","prev","handleAddPopupClose","event","handleUpdatePopupClose","handleDeleteConfirmDialog","dir","deleteSubject","loading","variables","actions","icon","tooltip","isFreeAction","onClick","rowData","onConfirm","setNotify","message","type","marginTop","head","Toolbar","props","borderTopRightRadius","borderTopLeftRadius","color","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { div } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { getAllSubjectsWithEducTypesQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { deleteSubjectMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport CreateSubject from \"./CreateSubject\";\r\nimport UpdateSubject from \"./UpdateSubject\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickyActionsColumn: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& td:first-child, th:first-child\": {\r\n          backgroundColor: \"#f5f5f5\",\r\n          position: \"sticky\",\r\n          left: 0,\r\n          zIndex: 10,\r\n        },\r\n        \"& th:first-child\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& th\": {\r\n          backgroundColor: \"#5aa193\",\r\n          position: \"sticky\",\r\n          top: \"4rem\",\r\n          zIndex: 10,\r\n        },\r\n        \"& th\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst SubjectList = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"subjectName\",\r\n        title: \"Libelle matière\",\r\n      },\r\n      {\r\n        field: \"subjectCode\",\r\n        title: \"Code matière\",\r\n      },\r\n      {\r\n        field: \"subjectType\",\r\n        title: \"Type matière\",\r\n      },\r\n      {\r\n        field: \"subjectGroup\",\r\n        title: \"Groupe matière\",\r\n      },\r\n      // {\r\n      //   field: \"educationTypeName\",\r\n      //   title: \"Libelle matière\",\r\n      // },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadCandScoreData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSubjectsWithEducTypesQuery,\r\n    });\r\n    console.log(data);\r\n    const { subjects } = { ...data };\r\n\r\n    setState((prev) => ({ ...prev, data: subjects }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCandScoreData();\r\n  }, []);\r\n\r\n  const handleAddPopupClose = (event) => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = (event) => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  console.dir(state.data);\r\n\r\n  const [deleteSubject, { loading }] = useMutation(deleteSubjectMutation, {\r\n    variables: { id: deleteConfirmDialog.id },\r\n    // update: updateCache(),\r\n  });\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Nouvelle matière\",\r\n      isFreeAction: true,\r\n      onClick: (event, rowData) => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"modifier matière\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer matière\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteSubject(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Arrondissement Supprimé avec success\",\r\n              type: \"error\",\r\n            });\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n\r\n  console.dir(state.data);\r\n  return (\r\n    <div style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        className={classes.head}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#829079\",\r\n                borderTopRightRadius: \"0.5rem\",\r\n                borderTopLeftRadius: \"0.5rem\",\r\n                color: \"#ede6b9\",\r\n              }}\r\n            >\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={tableIcons}\r\n        title=\"Liste de matières\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          grouping: true,\r\n          paging: true,\r\n          pageSize: 50, // make initial page size\r\n          emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n          pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n          headerStyle: {\r\n            color: \"#ede6b9\",\r\n            // color: \"#ff\",\r\n            paddingTop: \"0.5rem\",\r\n            paddingBottom: \"0.5rem\",\r\n            backgroundColor: \"#b9925e\",\r\n            maxHeight: \"0.5rem !important\",\r\n          },\r\n          rowStyle: {\r\n            color: \"#000\",\r\n          },\r\n        }}\r\n      />\r\n      <AddPopup\r\n        title=\"Nouvelle matière\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <CreateSubject />\r\n      </AddPopup>\r\n      <ConfirmDialog\r\n        title={deleteConfirmDialog.title}\r\n        subtitle={deleteConfirmDialog.subtitle}\r\n        isOpen={deleteConfirmDialog.isOpen}\r\n        onClose={handleDeleteConfirmDialog}\r\n        onConfirm={deleteConfirmDialog.onConfirm}\r\n      />\r\n      <UpdatePopup\r\n        title={updatePopupState.id}\r\n        isOpen={updatePopupState.isOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateSubject id={updatePopupState.id} />\r\n      </UpdatePopup>\r\n    </div>\r\n  );\r\n};\r\nexport default SubjectList;\r\n"]},"metadata":{},"sourceType":"module"}