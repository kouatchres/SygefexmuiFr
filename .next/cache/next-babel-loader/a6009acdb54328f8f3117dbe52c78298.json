{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { useRouter } from \"next/router\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllEducationTypesQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSpecialtiesOfACenterExamSessionQuery, getAllSubjectSpecialtiesOfASpecialtyQuery, getRegisteredCandidatesPerSpecialty, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID, removeTypename, getSpecialtyID, getSelectedObject, candExamSessionCode } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    maxWidth: \"60%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar ExamRegistration = function ExamRegistration() {\n  _s();\n\n  var _useForm3;\n\n  var classes = useStyles();\n  var router = useRouter();\n  var client = useApolloClient();\n  var initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n\n  var _useForm = useForm((_useForm3 = {\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    edcuTypeID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    educTypes: [],\n    specialties: []\n  }, _defineProperty(_useForm3, \"centerNumber\", \"\"), _defineProperty(_useForm3, \"centerByNumber\", \"\"), _defineProperty(_useForm3, \"examSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessionSpecialty\", {}), _useForm3)),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      educTypeID = state.educTypeID,\n      exams = state.exams,\n      sessions = state.sessions,\n      educTypes = state.educTypes,\n      specialties = state.specialties,\n      centerByNumber = state.centerByNumber,\n      examSessions = state.examSessions,\n      centerExamSessions = state.centerExamSessions,\n      centerExamSessionSpecialty = state.centerExamSessionSpecialty;\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var makeCandVariableObject = function makeCandVariableObject(candCodeValue) {\n    var storedCandidate = {\n      candCode: \"\".concat(candCodeValue)\n    };\n    return storedCandidate;\n  };\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    var val = type === \"number\" ? parseInt(value) : value;\n    setState(_defineProperty({}, name, val));\n  };\n\n  var candRegistrationNumber = function candRegistrationNumber(centerCode, exam, session) {\n    return \"\".concat(centerCode + exam + session);\n  };\n\n  var loadEducTypeData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, getEducationTypes, refinedEducTypes;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllEducationTypesQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getEducationTypes = data && data.educationTypes;\n              refinedEducTypes = getEducationTypes && removeTypename(getEducationTypes);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  educTypes: refinedEducTypes\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadEducTypeData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getEducTypesOptions = educTypes && educTypes.map(function (item) {\n    return {\n      value: item.id,\n      label: item.educationTypeName\n    };\n  });\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadExamData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref3) {\n    var examName = _ref3.examName,\n        others = _objectWithoutProperties(_ref3, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadEducTypeData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, error, data, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.dir(\"running the exam session query\");\n              _context4.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query4 = _context4.sent;\n              error = _yield$client$query4.error;\n              data = _yield$client$query4.data;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCenterData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query6, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query6 = _context6.sent;\n              error = _yield$client$query6.error;\n              data = _yield$client$query6.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadCESData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  var getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID); // const {\n  //   data: dataSpecialtyCES,\n  //   loading: loadingSpecialtyCES,\n  //   error: errSpecialtyCES,\n  // } = useQuery(getAllSpecialtiesOfACenterExamSessionQuery, {\n  //   variables: getCESID,\n  // });\n  // console.dir({ dataSpecialtyCES });\n  // const getCenterExamSession =\n  //   dataSpecialtyCES && dataSpecialtyCES.centerExamSession;\n  // const { centerExamSessionSpecialty } = { ...getCenterExamSession };\n  // const newSpecialty =\n  //   centerExamSessionSpecialty &&\n  //   centerExamSessionSpecialty.map((item) => item);\n  //   const refinedCESS = newSpecialty && removeTypename(newSpecialty);\n\n  var getCESSSubjIDs = state.centerExamSessionSpecialtyID && state.centerExamSessionSpecialtyID.split(\"/\");\n  console.dir({\n    getCESSSubjIDs: getCESSSubjIDs\n  });\n\n  var _useQuery = useQuery(getRegisteredCandidatesPerSpecialty, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[0],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[0]\n    }\n  }),\n      dataRegistration = _useQuery.data,\n      loadingReg = _useQuery.loading,\n      errReg = _useQuery.error;\n\n  var _dataRegistration = _objectSpread({}, dataRegistration),\n      CESS = _dataRegistration.centerExamSessionSpecialty;\n\n  var _CESS = _objectSpread({}, CESS),\n      registration = _CESS.registration; // const getCandOptions =\n  // registration &&\n  //   registration.map((item) => (\n  //       {item.candidate.cand1stName.concat(\n  //         item.candidate.cand2ndName,\n  //         item.candRegistrationNumber\n  //       )}\n  //   ))\n\n\n  var _useQuery2 = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[1],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[1]\n    }\n  }),\n      dataSubjSpecialty = _useQuery2.data,\n      loadingSubjSpecialty = _useQuery2.loading,\n      errSubjSpecialty = _useQuery2.error;\n\n  var getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\n\n  var _getSubjSpecialty = _objectSpread({}, getSubjSpecialty),\n      subjectSpecialty = _getSubjSpecialty.subjectSpecialty;\n\n  var refinedSubjectSpecialty = subjectSpecialty && removeTypename(subjectSpecialty);\n  var getSubjectSpecialtyOptions = refinedSubjectSpecialty && refinedSubjectSpecialty.map(function (item) {\n    __jsx(MenuItem, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }\n    }, item.item.subject.subjectName);\n  });\n\n  var _useMutation = useMutation(createAttendanceMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createAttendance = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error; // const newSpecialty = specialties && specialties.map((item) => item);\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  // console.log(refinedSpecialty);\n  // const getSpecialtyOptions =\n  //   refinedSpecialty &&\n  //   refinedSpecialty.map((item) => ({\n  //     id: item.specialty.id,\n  //     value: item.id,\n  //     label: item.specialty.specialtyName,\n  //   }));\n  // console.log({ state });\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\n  // const [createAttendance, { loadingMut, error }] = useMutation(\n  //   createAttendanceMutation\n  // );\n\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(values, _ref8) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                setSubmitting = _ref8.setSubmitting, resetForm = _ref8.resetForm;\n                _context7.next = 3;\n                return createAttendance({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    candExamSecretCode: values.candExamSecretCode.value,\n                    centerExamSessionSpecialty: getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\n                    subjectSpecialty: refinedSubjectSpecialty && getObjectFromID(values.subjectSpecialty.value)\n                  })\n                });\n\n              case 3:\n                res = _context7.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x, _x2) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }\n  }, function (_ref10) {\n    var submitForm = _ref10.submitForm,\n        setFieldValue = _ref10.setFieldValue,\n        isSubmitting = _ref10.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }, \"Pr\\xE9sence des candidats \\xE0 l'Ecrit\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"educTypeID\");\n      },\n      name: \"educTypeID\",\n      label: \"Type d'enseignement\",\n      component: Select,\n      placeholder: \"Type d'enseignement\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"educTypeID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 37\n        }\n      }),\n      options: getEducTypesOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"La Sp\\xE9cialit\\xE9\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 27\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      component: Select,\n      label: \"Candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      options: getExamsOptions,\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helperText: __jsx(ErrorMessage, {\n        name: \"collected\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"collected\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Collecte de materiels\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helperText: __jsx(ErrorMessage, {\n        name: \"handin\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"handin\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Remise de copies\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Inscrire Candidat\")))))));\n  });\n};\n\n_s(ExamRegistration, \"lYzQw/v+3HxinY1qxeBki2/j6gY=\", false, function () {\n  return [useStyles, useRouter, useApolloClient, useForm, useQuery, useQuery, useMutation];\n});\n\n_c = ExamRegistration;\nexport default ExamRegistration; // // const loadCESS = async () => {\n// //   const { error, data } = await client.query({\n// //     query: getAllSpecialtiesOfACenterExamSessionQuery,\n// //     variables: getCESID,\n// //   });\n// //   console.log(data);\n// //   const getCenterExamSession = data && data.centerExamSession;\n// //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\n// //   console.log({ centerExamSessionSpecialty });\n// //   setState((prev) => ({\n// //     ...prev,\n// //     specialties: centerExamSessionSpecialty,\n// //   }));\n// // };\n// // useEffect(() => {\n// //   loadCESS();\n// // }, [getCESID, centerNumber]);\n// mkjjj\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamRegistration\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useEffect","Error","Yup","FRadioGroup","useRouter","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","useMutation","useQuery","createAttendanceMutation","getExamSessionQuery","getAllExamsQuery","getAllEducationTypesQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSpecialtiesOfACenterExamSessionQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","getRegisteredCandidatesPerSpecialty","getSingleCenterQuery","getObjectFromID","removeTypename","getSpecialtyID","getSelectedObject","candExamSessionCode","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","ExamRegistration","classes","router","client","initialValues","centerNumber","candCode","examID","edcuTypeID","sessionID","exams","sessions","educTypes","specialties","state","setState","handleSelectChange","handleInputChange","educTypeID","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","makeCenterVariableObject","centerCodeValue","storedCenter","makeCandVariableObject","candCodeValue","storedCandidate","handleChange","e","target","name","value","type","val","parseInt","candRegistrationNumber","centerCode","exam","session","loadEducTypeData","query","error","data","getEducationTypes","educationTypes","refinedEducTypes","prev","getEducTypesOptions","map","item","id","label","educationTypeName","loadExamData","getExams","console","log","refinedExams","removeExamName","examName","others","getExamName","getExamsOptions","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","getCESSSubjIDs","centerExamSessionSpecialtyID","split","dataRegistration","loadingReg","loading","errReg","CESS","registration","dataSubjSpecialty","loadingSubjSpecialty","errSubjSpecialty","getSubjSpecialty","specialty","subjectSpecialty","refinedSubjectSpecialty","getSubjectSpecialtyOptions","subject","subjectName","createAttendance","values","setSubmitting","resetForm","candExamSecretCode","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event","row","loadingMut"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  getObjectFromID,\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n  candExamSessionCode,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"60%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst ExamRegistration = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    edcuTypeID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    educTypes: [],\r\n    specialties: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    educTypeID,\r\n    exams,\r\n    sessions,\r\n    educTypes,\r\n    specialties,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    centerExamSessionSpecialty,\r\n  } = state;\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candCode: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const candRegistrationNumber = (centerCode, exam, session) => {\r\n    return `${centerCode + exam + session}`;\r\n  };\r\n\r\n  const loadEducTypeData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllEducationTypesQuery,\r\n    });\r\n\r\n    const getEducationTypes = data && data.educationTypes;\r\n    const refinedEducTypes =\r\n      getEducationTypes && removeTypename(getEducationTypes);\r\n    setState((prev) => ({ ...prev, educTypes: refinedEducTypes }));\r\n  };\r\n\r\n  const getEducTypesOptions =\r\n    educTypes &&\r\n    educTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadEducTypeData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  // const {\r\n  //   data: dataSpecialtyCES,\r\n  //   loading: loadingSpecialtyCES,\r\n  //   error: errSpecialtyCES,\r\n  // } = useQuery(getAllSpecialtiesOfACenterExamSessionQuery, {\r\n  //   variables: getCESID,\r\n  // });\r\n  // console.dir({ dataSpecialtyCES });\r\n  // const getCenterExamSession =\r\n  //   dataSpecialtyCES && dataSpecialtyCES.centerExamSession;\r\n  // const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n\r\n  // const newSpecialty =\r\n  //   centerExamSessionSpecialty &&\r\n  //   centerExamSessionSpecialty.map((item) => item);\r\n  //   const refinedCESS = newSpecialty && removeTypename(newSpecialty);\r\n\r\n  const getCESSSubjIDs =\r\n    state.centerExamSessionSpecialtyID &&\r\n    state.centerExamSessionSpecialtyID.split(\"/\");\r\n  console.dir({ getCESSSubjIDs });\r\n  const {\r\n    data: dataRegistration,\r\n    loading: loadingReg,\r\n    error: errReg,\r\n  } = useQuery(getRegisteredCandidatesPerSpecialty, {\r\n    skip: getCESSSubjIDs && !getCESSSubjIDs[0],\r\n    variables: { id: getCESSSubjIDs && getCESSSubjIDs[0] },\r\n  });\r\n\r\n  const { centerExamSessionSpecialty: CESS } = { ...dataRegistration };\r\n  const { registration } = { ...CESS };\r\n  // const getCandOptions =\r\n  // registration &&\r\n  //   registration.map((item) => (\r\n  //       {item.candidate.cand1stName.concat(\r\n  //         item.candidate.cand2ndName,\r\n  //         item.candRegistrationNumber\r\n  //       )}\r\n  //   ))\r\n\r\n  const {\r\n    data: dataSubjSpecialty,\r\n    loading: loadingSubjSpecialty,\r\n    error: errSubjSpecialty,\r\n  } = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\r\n    skip: getCESSSubjIDs && !getCESSSubjIDs[1],\r\n    variables: { id: getCESSSubjIDs && getCESSSubjIDs[1] },\r\n  });\r\n\r\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n  const { subjectSpecialty } = { ...getSubjSpecialty };\r\n\r\n  const refinedSubjectSpecialty =\r\n    subjectSpecialty && removeTypename(subjectSpecialty);\r\n  const getSubjectSpecialtyOptions =\r\n    refinedSubjectSpecialty &&\r\n    refinedSubjectSpecialty.map((item) => {\r\n      <MenuItem key={item.id}>{item.item.subject.subjectName}</MenuItem>;\r\n    });\r\n\r\n  const [createAttendance, { loading, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n\r\n  // const newSpecialty = specialties && specialties.map((item) => item);\r\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  // console.log(refinedSpecialty);\r\n  // const getSpecialtyOptions =\r\n  //   refinedSpecialty &&\r\n  //   refinedSpecialty.map((item) => ({\r\n  //     id: item.specialty.id,\r\n  //     value: item.id,\r\n  //     label: item.specialty.specialtyName,\r\n  //   }));\r\n  // console.log({ state });\r\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\r\n  // const [createAttendance, { loadingMut, error }] = useMutation(\r\n  //   createAttendanceMutation\r\n  // );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode.value,\r\n            centerExamSessionSpecialty:\r\n              getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\r\n            subjectSpecialty:\r\n              refinedSubjectSpecialty &&\r\n              getObjectFromID(values.subjectSpecialty.value),\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Présence des candidats à l'Ecrit\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"educTypeID\");\r\n                        }}\r\n                        name=\"educTypeID\"\r\n                        label=\"Type d'enseignement\"\r\n                        component={Select}\r\n                        placeholder=\"Type d'enseignement\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"educTypeID\" />}\r\n                        options={getEducTypesOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"La Spécialité\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"La Spécialité\"\r\n                        disabled={isSubmitting}\r\n                        helperText={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        component={Select}\r\n                        label=\"Candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        options={getExamsOptions}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        helperText={<ErrorMessage name=\"collected\" />}\r\n                        required\r\n                        name=\"collected\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Collecte de materiels\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helperText={<ErrorMessage name=\"handin\" />}\r\n                        required\r\n                        name=\"handin\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Remise de copies\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Inscrire Candidat\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default ExamRegistration;\r\n\r\n// // const loadCESS = async () => {\r\n// //   const { error, data } = await client.query({\r\n// //     query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n// //     variables: getCESID,\r\n// //   });\r\n\r\n// //   console.log(data);\r\n// //   const getCenterExamSession = data && data.centerExamSession;\r\n// //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n// //   console.log({ centerExamSessionSpecialty });\r\n// //   setState((prev) => ({\r\n// //     ...prev,\r\n// //     specialties: centerExamSessionSpecialty,\r\n// //   }));\r\n// // };\r\n\r\n// // useEffect(() => {\r\n// //   loadCESS();\r\n// // }, [getCESID, centerNumber]);\r\n// mkjjj\r\n"]},"metadata":{},"sourceType":"module"}