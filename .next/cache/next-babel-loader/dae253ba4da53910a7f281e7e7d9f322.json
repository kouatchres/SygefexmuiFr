{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\candidate\\\\GetCenterCandDetailsInfo.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport { Router } from \"next/router\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllPhasesQuery, getAllRanksOfAnExamPhaseQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nconst validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nconst GetCenterCandDetailsInfo = () => {\n  const classes = useStyles();\n  const router = useRouter();\n  const client = useApolloClient();\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const initialValues = {// centerNumber: \"\",\n    // examID: \"\",\n    // sessionID: \",\n  };\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    centerNumber: \"\",\n    examID: \"\",\n    phaseID: \"\",\n    sessionID: \"\",\n    exams: [],\n    ranks: [],\n    phases: [],\n    sessions: [],\n    phaseRanks: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\"\n  });\n  const {\n    centerExamSessions,\n    centerNumber,\n    examID,\n    phaseID,\n    sessionID,\n    exams,\n    phases,\n    ranks,\n    phaseRanks,\n    examSessions,\n    sessions,\n    centerByNumber\n  } = state;\n\n  const makeExaminerObject = profCodeValue => {\n    const storedProf = {\n      examinerCode: `${profCodeValue}`\n    };\n    return storedProf;\n  };\n\n  const loadExamData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  useEffect(() => {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running exam session query\");\n    const {\n      data,\n      loading\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    {\n      loading && __jsx(CircularProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 18\n        }\n      });\n    }\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber);\n\n  const loadCESData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions[0]\n    }));\n  };\n\n  useEffect(() => {\n    loadCESData();\n  }, [centerByNumber, examSessions]);\n\n  const loadPhaseData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllPhasesQuery\n    });\n    const getPhases = data && data.phases;\n    console.log(getPhases);\n    const refinedPhase = getPhases && removeTypename(getPhases);\n    console.log(refinedPhase);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      phases: refinedPhase\n    }));\n  };\n\n  useEffect(() => {\n    loadPhaseData();\n  }, []);\n  const getPhaseOptions = phases && phases.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.phaseName\n  }));\n\n  const loadPhaseRankData = async () => {\n    const {\n      data\n    } = await client.query({\n      skip: !phaseID,\n      query: getAllRanksOfAnExamPhaseQuery,\n      variables: {\n        id: phaseID\n      }\n    });\n    console.log(data);\n    const getThePhase = data && data.phase;\n\n    const {\n      phaseRank\n    } = _objectSpread({}, getThePhase);\n\n    const refinedPhaseRanks = phaseRank && removeTypename(phaseRank);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      phaseRanks: refinedPhaseRanks\n    }));\n  };\n\n  useEffect(() => {\n    loadPhaseRankData();\n  }, [phaseID]);\n  const getPhaseRankOptions = phaseRanks && phaseRanks.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.rank.rankName\n  }));\n  const [CreateCenterExamSessionExaminer, {\n    loadingMut,\n    error\n  }] = useMutation(createCenterExamSessionExaminerMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      refinedCESS && Router.push({\n        pathname: '/show/results/centerResults/centerResultsForSeries',\n        query: {\n          id: refinedCESS.id\n        }\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"Examinateur inscript avec success\",\n          type: \"success\"\n        });\n        resetForm(true);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 23\n      }\n    }, \"Candidats inscrits a l'examen\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"Examen\",\n      component: Select,\n      placeholder: \"Examen\",\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"S'inscrire au centre\")))))));\n  });\n};\n\nexport default GetCenterCandDetailsInfo;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/candidate/GetCenterCandDetailsInfo.jsx"],"names":["React","useState","useEffect","Error","Router","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","createCenterExamSessionExaminerMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllPhasesQuery","getAllRanksOfAnExamPhaseQuery","removeTypename","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","borderRadius","borderBottom","borderTop","titleStyled","centerAll","minWidth","validationSchema","object","shape","GetCenterCandDetailsInfo","classes","router","useRouter","client","notify","setNotify","isOpen","message","type","initialValues","state","setState","handleSelectChange","handleInputChange","centerNumber","examID","phaseID","sessionID","exams","ranks","phases","sessions","phaseRanks","centerByNumber","examSessions","centerExamSessions","makeExaminerObject","profCodeValue","storedProf","examinerCode","loadExamData","data","query","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","loading","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","error","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","loadPhaseData","getPhases","refinedPhase","getPhaseOptions","phaseName","loadPhaseRankData","getThePhase","phase","phaseRank","refinedPhaseRanks","getPhaseRankOptions","rank","rankName","CreateCenterExamSessionExaminer","loadingMut","values","setSubmitting","resetForm","refinedCESS","push","pathname","setTimeout","JSON","stringify","res","submitForm","isSubmitting","centerCode","event"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,qBAA7C;AACA,SAASC,uCAAT,QAAwD,0CAAxD;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,+BAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,6BAPF,QAQO,wCARP;AAUA,SACEC,cADF,EAEEC,iBAFF,QAGO,0CAHP;AAIA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX,CAIJ;;AAJI,GADqB;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GARgB;AAc3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,OAAO,EAAE,MADC;AAEVG,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,OAAO,EAAE,MAHC;AAIVC,IAAAA,QAAQ,EAAE,KAJA;AAKVC,IAAAA,YAAY,EAAC,QALH;AAMVC,IAAAA,YAAY,EAAE,sBANJ;AAOVC,IAAAA,SAAS,EAAE;AAPD,GAde;AAwB3BC,EAAAA,WAAW,EAAE;AACXZ,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GAxBc;AA6B3BU,EAAAA,SAAS,EAAE;AACTb,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGT;AACAW,IAAAA,QAAQ,EAAE,KAJD,CAKT;;AALS;AA7BgB,CAAD,CAA5B;AAsCA,MAAMC,gBAAgB,GAAG7C,GAAG,CAAC8C,MAAJ,GAAaC,KAAb,CAAmB,CAC1C;AACA;AACA;AACA;AAJ0C,CAAnB,CAAzB;;AAOA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAMsB,MAAM,GAAEC,SAAS,EAAvB;AACA,QAAMC,MAAM,GAAGrC,eAAe,EAA9B;AAEA,QAAM;AAAA,OAACsC,MAAD;AAAA,OAASC;AAAT,MAAsB1D,QAAQ,CAAC;AACnC2D,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CAApC;AAKA,QAAMC,aAAa,GAAG,CACpB;AACA;AACA;AAHoB,GAAtB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,kBAAlB,EAAsCC,iBAAtC,IAA2DnC,OAAO,CAAC;AACvEoC,IAAAA,YAAY,EAAE,EADyD;AAEvEC,IAAAA,MAAM,EAAE,EAF+D;AAGvEC,IAAAA,OAAO,EAAE,EAH8D;AAIvEC,IAAAA,SAAS,EAAE,EAJ4D;AAKvEC,IAAAA,KAAK,EAAE,EALgE;AAMvEC,IAAAA,KAAK,EAAE,EANgE;AAOvEC,IAAAA,MAAM,EAAE,EAP+D;AAQvEC,IAAAA,QAAQ,EAAE,EAR6D;AASvEC,IAAAA,UAAU,EAAE,EAT2D;AAUvEC,IAAAA,cAAc,EAAE,EAVuD;AAWvEC,IAAAA,YAAY,EAAE,EAXyD;AAYvEC,IAAAA,kBAAkB,EAAE;AAZmD,GAAD,CAAxE;AAcA,QAAM;AACJA,IAAAA,kBADI;AAEJX,IAAAA,YAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,KANI;AAOJE,IAAAA,MAPI;AAQJD,IAAAA,KARI;AASJG,IAAAA,UATI;AAUJE,IAAAA,YAVI;AAWJH,IAAAA,QAXI;AAYJE,IAAAA;AAZI,MAaFb,KAbJ;;AAeA,QAAMgB,kBAAkB,GAAIC,aAAD,IAAmB;AAC5C,UAAMC,UAAU,GAAG;AACjBC,MAAAA,YAAY,EAAG,GAAEF,aAAc;AADd,KAAnB;AAGA,WAAOC,UAAP;AACD,GALD;;AAOA,QAAME,YAAY,GAAG,YAAY;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAE9D;AAD2B,KAAb,CAAvB;AAIA,UAAM+D,QAAQ,GAAGF,IAAI,IAAIA,IAAI,CAACb,KAA9B;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,YAAY,GAAGH,QAAQ,IAAIzD,cAAc,CAACyD,QAAD,CAA/C;AACAtB,IAAAA,QAAQ,CAAE0B,IAAD,oCACJA,IADI;AAEPnB,MAAAA,KAAK,EAAEkB;AAFA,MAAD,CAAR;AAID,GAZD;;AAaA,QAAME,cAAc,GAClBpB,KAAK,IAAIA,KAAK,CAACqB,GAAN,CAAU;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,QAAgBC,MAAhB;;AAAA,WAA6BA,MAA7B;AAAA,GAAV,CADX;;AAGA,QAAMC,WAAW,GAAGxB,KAAK,sBACpBzC,iBAAiB,CAAC6D,cAAD,EAAiBvB,MAAjB,CADG,CAAzB;;AAGA,QAAM4B,eAAe,GACnBzB,KAAK,IAAIA,KAAK,CAACqB,GAAN,CAAWK,IAAD,KAAW;AAAEC,IAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,IAAAA,KAAK,EAAEH,IAAI,CAACJ;AAA9B,GAAX,CAAV,CADX;;AAGA,QAAMQ,eAAe,GAAG,YAAY;AAClC,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAE7D;AAD2B,KAAb,CAAvB;AAIA,UAAM8E,WAAW,GAAGlB,IAAI,IAAIA,IAAI,CAACV,QAAjC;AACA,UAAM6B,eAAe,GAAGD,WAAW,IAAIzE,cAAc,CAACyE,WAAD,CAArD;AACAtC,IAAAA,QAAQ,CAAE0B,IAAD,oCACJA,IADI;AAEPhB,MAAAA,QAAQ,EAAE6B;AAFH,MAAD,CAAR;AAID,GAXD;;AAYAhB,EAAAA,OAAO,CAACiB,GAAR,CAAYzC,KAAZ;;AAEA,QAAM0C,cAAc,GAAG/B,QAAQ,sBAC1B5C,iBAAiB,CAAC4C,QAAD,EAAWJ,SAAX,CADS,CAA/B;;AAIA,QAAMoC,kBAAkB,GACtBhC,QAAQ,IACRA,QAAQ,CAACkB,GAAT,CAAcK,IAAD,KAAW;AAAEC,IAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,IAAAA,KAAK,EAAEH,IAAI,CAACU;AAA9B,GAAX,CAAb,CAFF;AAIA1G,EAAAA,SAAS,CAAC,MAAM;AACdkF,IAAAA,YAAY;AACZkB,IAAAA,eAAe;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKAd,EAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ;;AAEA,QAAMG,mBAAmB,GAAG,YAAY;AACtCrB,IAAAA,OAAO,CAACiB,GAAR,CAAY,4BAAZ;AACA,UAAM;AAAEpB,MAAAA,IAAF;AAAQyB,MAAAA;AAAR,QAAoB,MAAMrD,MAAM,CAAC6B,KAAP,CAAa;AAC3CyB,MAAAA,IAAI,EAAE,CAAC1C,MAAD,IAAW,CAACE,SADyB;AAE3Ce,MAAAA,KAAK,EAAE/D,mBAFoC;AAG3CyF,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE5C,MAAM,IAAI2B,WADP;AAETkB,QAAAA,OAAO,EAAE3C,SAAS,IAAImC;AAFb;AAHgC,KAAb,CAAhC;AASAlB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAM8B,eAAe,GAAG9B,IAAI,IAAIA,IAAI,CAACP,YAArC;AACA,UAAMsC,SAAS,GAAGD,eAAe,IAAIrF,cAAc,CAACqF,eAAD,CAAnD;AACA,UAAME,SAAS,GAAGD,SAAS,IAAIA,SAAS,CAAC,CAAD,CAAxC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,SAAZ;AACA;AACEP,MAAAA,OAAO,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;AACD7C,IAAAA,QAAQ,CAAE0B,IAAD,oCACJA,IADI;AAEPb,MAAAA,YAAY,EAAEuC;AAFP,MAAD,CAAR;AAID,GAvBD;;AAwBA7B,EAAAA,OAAO,CAACiB,GAAR,CAAYzC,KAAZ;AAEA9D,EAAAA,SAAS,CAAC,MAAM;AACd2G,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACxC,MAAD,EAASE,SAAT,CAFM,CAAT;;AAIA,QAAM+C,cAAc,GAAG,YAAY;AACjC,UAAM;AAAEjC,MAAAA;AAAF,QAAW,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AAClCyB,MAAAA,IAAI,EAAE,CAAC3C,YAD2B;AAElCkB,MAAAA,KAAK,EAAE3D,oBAF2B;AAGlCqF,MAAAA,SAAS,EAAE;AAAE5C,QAAAA,YAAY,EAAEA;AAAhB;AAHuB,KAAb,CAAvB;;AAMA,UAAM;AAAES,MAAAA;AAAF,0BAA0BQ,IAA1B,CAAN;;AACA,UAAMkC,iBAAiB,GAAGzF,cAAc,CAAC+C,cAAD,CAAxC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY8B,iBAAZ;AACAtD,IAAAA,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwBa,MAAAA,cAAc,EAAE0C;AAAxC,MAAD,CAAR;AACD,GAXD;;AAaArH,EAAAA,SAAS,CAAC,MAAM;AACdoH,IAAAA,cAAc;AACf,GAFQ,EAEN,CAAClD,YAAD,CAFM,CAAT;AAGAoB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ;;AAEA,QAAM2C,WAAW,GAAG,YAAY;AAC9B,UAAM;AAAEC,MAAAA,KAAF;AAASpC,MAAAA;AAAT,QAAkB,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AACzCA,MAAAA,KAAK,EAAE5D,+BADkC;AAEzCsF,MAAAA,SAAS,EAAE;AACTU,QAAAA,WAAW,EAAE5C,YAAY,IAAIA,YADpB;AAET6C,QAAAA,MAAM,EAAE9C,cAAc,IAAIA;AAFjB;AAF8B,KAAb,CAA9B;AAQAW,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMuC,2BAA2B,GAAGvC,IAAI,IAAIA,IAAI,CAACwC,wBAAjD;AACArC,IAAAA,OAAO,CAACC,GAAR,CAAYmC,2BAAZ;AACA,UAAME,yBAAyB,GAC7BF,2BAA2B,IAC3B9F,cAAc,CAAC8F,2BAAD,CAFhB;AAGA3D,IAAAA,QAAQ,CAAE0B,IAAD,oCACJA,IADI;AAEPZ,MAAAA,kBAAkB,EAAE+C,yBAAyB,CAAC,CAAD;AAFtC,MAAD,CAAR;AAID,GAnBD;;AAqBA5H,EAAAA,SAAS,CAAC,MAAM;AACdsH,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAAC3C,cAAD,EAAiBC,YAAjB,CAFM,CAAT;;AAIA,QAAMiD,aAAa,GAAG,YAAY;AAChC,UAAM;AAAE1C,MAAAA;AAAF,QAAW,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAE1D;AAD2B,KAAb,CAAvB;AAIA,UAAMoG,SAAS,GAAG3C,IAAI,IAAIA,IAAI,CAACX,MAA/B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYuC,SAAZ;AACA,UAAMC,YAAY,GAAGD,SAAS,IAAIlG,cAAc,CAACkG,SAAD,CAAhD;AACAxC,IAAAA,OAAO,CAACC,GAAR,CAAYwC,YAAZ;AAEAhE,IAAAA,QAAQ,CAAE0B,IAAD,oCAAgBA,IAAhB;AAAsBjB,MAAAA,MAAM,EAAEuD;AAA9B,MAAD,CAAR;AACD,GAXD;;AAaA/H,EAAAA,SAAS,CAAC,MAAM;AACd6H,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMG,eAAe,GACnBxD,MAAM,IACNA,MAAM,CAACmB,GAAP,CAAYK,IAAD,oCACNA,IADM;AAETC,IAAAA,KAAK,EAAED,IAAI,CAACE,EAFH;AAGTC,IAAAA,KAAK,EAAEH,IAAI,CAACiC;AAHH,IAAX,CAFF;;AAQA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAM;AAAE/C,MAAAA;AAAF,QAAW,MAAM5B,MAAM,CAAC6B,KAAP,CAAa;AAClCyB,MAAAA,IAAI,EAAE,CAACzC,OAD2B;AAElCgB,MAAAA,KAAK,EAAEzD,6BAF2B;AAGlCmF,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,EAAE,EAAE9B;AAAN;AAHuB,KAAb,CAAvB;AAKAkB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMgD,WAAW,GAAGhD,IAAI,IAAIA,IAAI,CAACiD,KAAjC;;AACA,UAAM;AAAEC,MAAAA;AAAF,0BAAqBF,WAArB,CAAN;;AACA,UAAMG,iBAAiB,GAAGD,SAAS,IAAIzG,cAAc,CAACyG,SAAD,CAArD;AACAtE,IAAAA,QAAQ,CAAE0B,IAAD,oCACJA,IADI;AAEPf,MAAAA,UAAU,EAAE4D;AAFL,MAAD,CAAR;AAID,GAdD;;AAgBAtI,EAAAA,SAAS,CAAC,MAAM;AACdkI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAAC9D,OAAD,CAFM,CAAT;AAIA,QAAMmE,mBAAmB,GACvB7D,UAAU,IACVA,UAAU,CAACiB,GAAX,CAAgBK,IAAD,oCACVA,IADU;AAEbC,IAAAA,KAAK,EAAED,IAAI,CAACE,EAFC;AAGbC,IAAAA,KAAK,EAAEH,IAAI,CAACwC,IAAL,CAAUC;AAHJ,IAAf,CAFF;AAQA,QAAM,CAACC,+BAAD,EAAkC;AAAEC,IAAAA,UAAF;AAAcpB,IAAAA;AAAd,GAAlC,IAA2DpG,WAAW,CAC1EC,uCAD0E,CAA5E;AAIA,SACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,aAAa,EAAEyC,aAFjB;AAGE,IAAA,gBAAgB,EAAEb,gBAHpB;AAIE,IAAA,QAAQ,EAAE,OAAO4F,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAf,KAAgD;AACvDC,MAAAA,WAAW,IAAI7I,MAAM,CAAC8I,IAAP,CAAY;AACzBC,QAAAA,QAAQ,EAAE,oDADe;AAE3B7D,QAAAA,KAAK,EAAE;AAAEc,UAAAA,EAAE,EAAE6C,WAAW,CAAC7C;AAAlB;AAFoB,OAAZ,CAAf;AAIDgD,MAAAA,UAAU,CAAC,MAAM;AACf5D,QAAAA,OAAO,CAACC,GAAR,CAAY4D,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAtD,QAAAA,OAAO,CAACC,GAAR,CAAY8D,GAAZ;AACA5F,QAAAA,SAAS,CAAC;AACRC,UAAAA,MAAM,EAAE,IADA;AAERC,UAAAA,OAAO,EAAE,mCAFD;AAGRC,UAAAA,IAAI,EAAE;AAHE,SAAD,CAAT;AAKAkF,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAVS,EAUP,GAVO,CAAV;AAWD,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBG,CAAC;AAAES,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,KAAkC;AACjC,WACE;AAAK,MAAA,SAAS,EAAEnG,OAAO,CAACN,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEM,OAAO,CAACb,UAA1B;AAAsC,MAAA,SAAS,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAWgH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEnG,OAAO,CAACN,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEM,OAAO,CAACN,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEyE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAEnE,OAAO,CAACP,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CAFF,CADF,EAeE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,EAAf;AAAmB,MAAA,SAAS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAc,MAAA,IAAI,MAAlB;AAAmB,MAAA,SAAS,EAAEO,OAAO,CAACN,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE1C,SAHb;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EACFuE,cAAc,IAAIA,cAAc,CAAC6E,UAAlC,IAAiD,EAPrD;AASE,MAAA,OAAO,EAAC,UATV;AAUE,MAAA,QAAQ,EAAED,YAVZ;AAWE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAEnJ,SAHb;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EAAG8D,YAAY,IAAIA,YAAjB,IAAkC,CAN3C;AAOE,MAAA,QAAQ,EAAED,iBAPZ;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,QAAQ,EAAEsF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA0BE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,SAAS,EAAElJ,MAJb;AAKE,MAAA,WAAW,EAAC,QALd;AAME,MAAA,QAAQ,EAAGoJ,KAAD,IAAW;AACnBzF,QAAAA,kBAAkB,CAACyF,KAAD,EAAQ,QAAR,CAAlB;AACD,OARH;AASE,MAAA,QAAQ,EAAEF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAExD,eAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAyCE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,EAAG0D,KAAD,IAAW;AACnBzF,QAAAA,kBAAkB,CAACyF,KAAD,EAAQ,WAAR,CAAlB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,WALP;AAME,MAAA,KAAK,EAAC,YANR;AAOE,MAAA,SAAS,EAAEpJ,MAPb;AAQE,MAAA,WAAW,EAAC,YARd;AASE,MAAA,QAAQ,EAAEkJ,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAE9C,kBAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EAyDE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE8C,YAAlB;AAAgC,MAAA,OAAO,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEGA,YAAY,IAAIZ,UAAhB,GACG,sBADH,GAEG,sBAJN,CAzDF,CADF,CAfF,CAFF,CADF,CADF,CADF;AA2FD,GAlHH,CADF;AAsHD,CA9VD;;AA+VA,eAAexF,wBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport {Router} from \"next/router\"\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllPhasesQuery,\r\n  getAllRanksOfAnExamPhaseQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    borderRadius:\"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst GetCenterCandDetailsInfo = () => {\r\n  const classes = useStyles();\r\n  const router= useRouter()\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    // centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    phaseID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    ranks: [],\r\n    phases: [],\r\n    sessions: [],\r\n    phaseRanks: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n  });\r\n  const {\r\n    centerExamSessions,\r\n    centerNumber,\r\n    examID,\r\n    phaseID,\r\n    sessionID,\r\n    exams,\r\n    phases,\r\n    ranks,\r\n    phaseRanks,\r\n    examSessions,\r\n    sessions,\r\n    centerByNumber,\r\n  } = state;\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n    {\r\n      loading && <CircularProgress />;\r\n    }\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions[0],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerByNumber, examSessions]);\r\n\r\n  const loadPhaseData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllPhasesQuery,\r\n    });\r\n\r\n    const getPhases = data && data.phases;\r\n    console.log(getPhases);\r\n    const refinedPhase = getPhases && removeTypename(getPhases);\r\n    console.log(refinedPhase);\r\n\r\n    setState((prev) => ({ ...prev, phases: refinedPhase }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPhaseData();\r\n  }, []);\r\n\r\n  const getPhaseOptions =\r\n    phases &&\r\n    phases.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.phaseName,\r\n    }));\r\n\r\n  const loadPhaseRankData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !phaseID,\r\n      query: getAllRanksOfAnExamPhaseQuery,\r\n      variables: { id: phaseID },\r\n    });\r\n    console.log(data);\r\n    const getThePhase = data && data.phase;\r\n    const { phaseRank } = { ...getThePhase };\r\n    const refinedPhaseRanks = phaseRank && removeTypename(phaseRank);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      phaseRanks: refinedPhaseRanks,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPhaseRankData();\r\n  }, [phaseID]);\r\n\r\n  const getPhaseRankOptions =\r\n    phaseRanks &&\r\n    phaseRanks.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.rank.rankName,\r\n    }));\r\n\r\n  const [CreateCenterExamSessionExaminer, { loadingMut, error }] = useMutation(\r\n    createCenterExamSessionExaminerMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n         refinedCESS && Router.push({\r\n           pathname: '/show/results/centerResults/centerResultsForSeries',\r\n         query: { id: refinedCESS.id }\r\n         });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Examinateur inscript avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\nCandidats inscrits a l'examen\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"Examen\"\r\n                        component={Select}\r\n                        placeholder=\"Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      \r\n                  \r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"S'inscrire au centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default GetCenterCandDetailsInfo;\r\n"]},"metadata":{},"sourceType":"module"}