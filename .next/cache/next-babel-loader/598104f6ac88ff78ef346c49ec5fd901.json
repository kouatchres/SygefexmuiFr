{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\CESExaminer\\\\CreateCESExaminer.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllPhasesQuery, getAllRanksOfAnExamPhaseQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar CreateCESExaminer = function CreateCESExaminer() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var initialValues = {// centerNumber: \"\",\n    // examID: \"\",\n    // sessionID: \",\n  };\n\n  var _useForm = useForm({\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      examSessions = state.examSessions,\n      sessions = state.sessions,\n      centerByNumber = state.centerByNumber;\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, data, loading, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              data = _yield$client$query3.data;\n              loading = _yield$client$query3.loading;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              loading && __jsx(CircularProgress, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 18\n                }\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber); // const loadCESData = async () => {\n  //   const { error, data } = await client.query({\n  //     query: getSingleCenterExamSessionQuery,\n  //     variables: {\n  //       examSession: examSessions && examSessions,\n  //       center: centerByNumber && centerByNumber,\n  //     },\n  //   });\n  //   console.log(data);\n  //   const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n  //   console.log(getCenterExamSessionsByCode);\n  //   const refinedCenterExamSessions =\n  //     getCenterExamSessionsByCode &&\n  //     removeTypename(getCenterExamSessionsByCode);\n  //   setState((prev) => ({\n  //     ...prev,\n  //     centerExamSessions: refinedCenterExamSessions,\n  //   }));\n  // };\n  // useEffect(() => {\n  //   loadCESData();\n  // }, [centerNumber, examSessions]);\n  // // transform the array into a single object\n  // const getCESID = centerExamSessions && centerExamSessions[0];\n  // console.log(getCESID);\n  // const loadCESS = async () => {\n  //   const { error, data } = await client.query({\n  //     query: getAllSpecialtiesOfACenterExamSessionQuery,\n  //     variables: getCESID,\n  //   });\n  //   console.log(data);\n  //   const getCenterExamSession = data && data.centerExamSession;\n  //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\n  //   console.log({ centerExamSessionSpecialty });\n  //   setState((prev) => ({\n  //     ...prev,\n  //     specialties: centerExamSessionSpecialty,\n  //   }));\n  // };\n  // useEffect(() => {\n  //   loadCESS();\n  // }, [getCESID, centerNumber]);\n  // const newSpecialty = specialties && specialties.map((item) => item);\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  // console.log(refinedSpecialty);\n  // const getSpecialtyOptions =\n  //   refinedSpecialty &&\n  //   refinedSpecialty.map((item) => ({\n  //     id: item.specialty.id,\n  //     value: item.id,\n  //     label: item.specialty.specialtyName,\n  //   }));\n  // console.log({ state });\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty);\n\n  var _useMutation = useMutation(createCenterExamSessionExaminerMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      CreateCenterExamSessionExaminer = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(values, _ref6) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                setSubmitting = _ref6.setSubmitting, resetForm = _ref6.resetForm;\n                _context5.next = 3;\n                return CreateCenterExamSessionExaminer({\n                  variables: {\n                    center: centerByNumber && centerByNumber,\n                    examSession: examSessions && examSessions\n                  }\n                });\n\n              case 3:\n                res = _context5.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"Centre inscript avec success\",\n                    // message: \"Inscription a l'examen réussie\",\n                    type: \"success\"\n                  });\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x, _x2) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, function (_ref8) {\n    var submitForm = _ref8.submitForm,\n        isSubmitting = _ref8.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }, \"Examinateur s'i'au Centre\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"Examen\",\n      component: Select,\n      placeholder: \"Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"phaseID\",\n      label: \"Phase de l'examen\",\n      component: Select,\n      placeholder: \"Phase de l'examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"phaseID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"phaseID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"phaseRank\",\n      label: \"Poste occupe au centre\",\n      component: Select,\n      placeholder: \"Poste occupe au centre\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"phaseRank\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"phaseRank\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examinerCode\",\n      label: \"Code examinateur\",\n      component: TextField,\n      placeholder: \"Code examinateur\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examinerCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"S'inscrire au centre\")))))));\n  });\n};\n\n_s(CreateCESExaminer, \"9U76DoxDMLDvaiEnEo/r3JCjzyQ=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useMutation];\n});\n\n_c = CreateCESExaminer;\nexport default CreateCESExaminer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCESExaminer\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/CESExaminer/CreateCESExaminer.jsx"],"names":["React","useState","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","createCenterExamSessionExaminerMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllPhasesQuery","getAllRanksOfAnExamPhaseQuery","removeTypename","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","CreateCESExaminer","classes","client","isOpen","message","type","notify","setNotify","initialValues","centerNumber","examID","sessionID","exams","sessions","centerByNumber","examSessions","centerExamSessions","state","setState","handleSelectChange","handleInputChange","loadExamData","query","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","loading","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","CreateCenterExamSessionExaminer","loadingMut","error","values","setSubmitting","resetForm","center","examSession","res","setTimeout","JSON","stringify","submitForm","isSubmitting","centerCode","event"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,qBAA7C;AACA,SAASC,uCAAT,QAAwD,0CAAxD;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,+BAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,6BAPF,QAQO,wCARP;AAUA,SACEC,cADF,EAEEC,iBAFF,QAGO,0CAHP;AAIA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,IAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX,CAIJ;;AAJI,GADqB;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GARgB;AAc3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,OAAO,EAAE,MADC;AAEVG,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,OAAO,EAAE,MAHC;AAIVC,IAAAA,QAAQ,EAAE,KAJA,CAKV;;AALU,GAde;AAsB3BC,EAAAA,WAAW,EAAE;AACXT,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GAtBc;AA2B3BO,EAAAA,SAAS,EAAE;AACTV,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGT;AACAQ,IAAAA,QAAQ,EAAE,KAJD,CAKT;;AALS;AA3BgB,CAAD,CAA5B;AAoCA,IAAMC,gBAAgB,GAAG1C,GAAG,CAAC2C,MAAJ,GAAaC,KAAb,CAAmB,CAC1C;AACA;AACA;AACA;AAJ0C,CAAnB,CAAzB;;AAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B,MAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,MAAMmB,MAAM,GAAGhC,eAAe,EAA9B;;AAF8B,kBAIFlB,QAAQ,CAAC;AACnCmD,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CAJN;AAAA,MAIvBC,MAJuB;AAAA,MAIfC,SAJe;;AAS9B,MAAMC,aAAa,GAAG,CACpB;AACA;AACA;AAHoB,GAAtB;;AAT8B,iBAcmC1B,OAAO,CAAC;AACvE2B,IAAAA,YAAY,EAAE,EADyD;AAEvEC,IAAAA,MAAM,EAAE,EAF+D;AAGvEC,IAAAA,SAAS,EAAE,EAH4D;AAIvEC,IAAAA,KAAK,EAAE,EAJgE;AAKvEC,IAAAA,QAAQ,EAAE,EAL6D;AAMvEC,IAAAA,cAAc,EAAE,EANuD;AAOvEC,IAAAA,YAAY,EAAE,EAPyD;AAQvEC,IAAAA,kBAAkB,EAAE;AARmD,GAAD,CAd1C;AAAA;AAAA,MAcvBC,KAduB;AAAA,MAchBC,QAdgB;AAAA,MAcNC,kBAdM;AAAA,MAccC,iBAdd;;AAAA,MAyB5BX,YAzB4B,GAgC1BQ,KAhC0B,CAyB5BR,YAzB4B;AAAA,MA0B5BC,MA1B4B,GAgC1BO,KAhC0B,CA0B5BP,MA1B4B;AAAA,MA2B5BC,SA3B4B,GAgC1BM,KAhC0B,CA2B5BN,SA3B4B;AAAA,MA4B5BC,KA5B4B,GAgC1BK,KAhC0B,CA4B5BL,KA5B4B;AAAA,MA6B5BG,YA7B4B,GAgC1BE,KAhC0B,CA6B5BF,YA7B4B;AAAA,MA8B5BF,QA9B4B,GAgC1BI,KAhC0B,CA8B5BJ,QA9B4B;AAAA,MA+B5BC,cA/B4B,GAgC1BG,KAhC0B,CA+B5BH,cA/B4B;;AAkC9B,MAAMO,YAAY;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACInB,MAAM,CAACoB,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAEhD;AAD2B,eAAb,CADJ;;AAAA;AAAA;AACXiD,cAAAA,IADW,uBACXA,IADW;AAKbC,cAAAA,QALa,GAKFD,IAAI,IAAIA,IAAI,CAACX,KALX;AAMnBa,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACMG,cAAAA,YAPa,GAOEH,QAAQ,IAAI5C,cAAc,CAAC4C,QAAD,CAP5B;AAQnBN,cAAAA,QAAQ,CAAC,UAACU,IAAD;AAAA,uDACJA,IADI;AAEPhB,kBAAAA,KAAK,EAAEe;AAFA;AAAA,eAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZN,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaA,MAAMQ,cAAc,GAClBjB,KAAK,IAAIA,KAAK,CAACkB,GAAN,CAAU;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAgBC,MAAhB;;AAAA,WAA6BA,MAA7B;AAAA,GAAV,CADX;;AAGA,MAAMC,WAAW,GAAGrB,KAAK,sBACpB/B,iBAAiB,CAACgD,cAAD,EAAiBnB,MAAjB,CADG,CAAzB;;AAGA,MAAMwB,eAAe,GACnBtB,KAAK,IAAIA,KAAK,CAACkB,GAAN,CAAU,UAACK,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACJ;AAA9B,KAAX;AAAA,GAAV,CADX;;AAGA,MAAMQ,eAAe;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCrC,MAAM,CAACoB,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAE/C;AAD2B,eAAb,CADD;;AAAA;AAAA;AACdgD,cAAAA,IADc,wBACdA,IADc;AAKhBiB,cAAAA,WALgB,GAKFjB,IAAI,IAAIA,IAAI,CAACV,QALX;AAMhB4B,cAAAA,eANgB,GAMED,WAAW,IAAI5D,cAAc,CAAC4D,WAAD,CAN/B;AAOtBtB,cAAAA,QAAQ,CAAC,UAACU,IAAD;AAAA,uDACJA,IADI;AAEPf,kBAAAA,QAAQ,EAAE4B;AAFH;AAAA,eAAD,CAAR;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfF,eAAe;AAAA;AAAA;AAAA,KAArB;;AAYAd,EAAAA,OAAO,CAACiB,GAAR,CAAYzB,KAAZ;;AAEA,MAAM0B,cAAc,GAAG9B,QAAQ,sBAC1BhC,iBAAiB,CAACgC,QAAD,EAAWF,SAAX,CADS,CAA/B;;AAIA,MAAMiC,kBAAkB,GACtB/B,QAAQ,IACRA,QAAQ,CAACiB,GAAT,CAAa,UAACK,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACU;AAA9B,KAAX;AAAA,GAAb,CAFF;AAIA5F,EAAAA,SAAS,CAAC,YAAM;AACdoE,IAAAA,YAAY;AACZkB,IAAAA,eAAe;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKAd,EAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ;;AAEA,MAAMG,mBAAmB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BrB,cAAAA,OAAO,CAACiB,GAAR,CAAY,4BAAZ;AAD0B;AAAA,qBAEMxC,MAAM,CAACoB,KAAP,CAAa;AAC3CyB,gBAAAA,IAAI,EAAE,CAACrC,MAAD,IAAW,CAACC,SADyB;AAE3CW,gBAAAA,KAAK,EAAEjD,mBAFoC;AAG3C2E,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,IAAI,EAAEvC,MAAM,IAAIuB,WADP;AAETiB,kBAAAA,OAAO,EAAEvC,SAAS,IAAIgC;AAFb;AAHgC,eAAb,CAFN;;AAAA;AAAA;AAElBpB,cAAAA,IAFkB,wBAElBA,IAFkB;AAEZ4B,cAAAA,OAFY,wBAEZA,OAFY;AAW1B1B,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACM6B,cAAAA,eAZoB,GAYF7B,IAAI,IAAIA,IAAI,CAACR,YAZX;AAapBsC,cAAAA,SAboB,GAaRD,eAAe,IAAIxE,cAAc,CAACwE,eAAD,CAbzB;AAcpBE,cAAAA,SAdoB,GAcRD,SAAS,IAAIA,SAAS,CAAC,CAAD,CAdd;AAe1B5B,cAAAA,OAAO,CAACC,GAAR,CAAY4B,SAAZ;AAEEH,cAAAA,OAAO,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX;AAEFjC,cAAAA,QAAQ,CAAC,UAACU,IAAD;AAAA,uDACJA,IADI;AAEPb,kBAAAA,YAAY,EAAEuC;AAFP;AAAA,eAAD,CAAR;;AAnB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBR,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAwBArB,EAAAA,OAAO,CAACiB,GAAR,CAAYzB,KAAZ;AAEAhE,EAAAA,SAAS,CAAC,YAAM;AACd6F,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACpC,MAAD,EAASC,SAAT,CAFM,CAAT;;AAIA,MAAM4C,cAAc;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACErD,MAAM,CAACoB,KAAP,CAAa;AAClCyB,gBAAAA,IAAI,EAAE,CAACtC,YAD2B;AAElCa,gBAAAA,KAAK,EAAE7C,oBAF2B;AAGlCuE,gBAAAA,SAAS,EAAE;AAAEvC,kBAAAA,YAAY,EAAEA;AAAhB;AAHuB,eAAb,CADF;;AAAA;AAAA;AACbc,cAAAA,IADa,wBACbA,IADa;AAAA,wCAOWA,IAPX,GAObT,cAPa,SAObA,cAPa;AAQf0C,cAAAA,iBARe,GAQK5E,cAAc,CAACkC,cAAD,CARnB;AASrBW,cAAAA,OAAO,CAACC,GAAR,CAAY8B,iBAAZ;AACAtC,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBH,kBAAAA,cAAc,EAAE0C;AAAxC;AAAA,eAAD,CAAR;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdD,cAAc;AAAA;AAAA;AAAA,KAApB;;AAaAtG,EAAAA,SAAS,CAAC,YAAM;AACdsG,IAAAA,cAAc;AACf,GAFQ,EAEN,CAAC9C,YAAD,CAFM,CAAT;AAGAgB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ,EAnI8B,CAqI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjM8B,qBAkMmC3C,WAAW,CAC1EC,uCAD0E,CAlM9C;AAAA;AAAA,MAkMvBqF,+BAlMuB;AAAA;AAAA,MAkMYC,UAlMZ,kBAkMYA,UAlMZ;AAAA,MAkMwBC,KAlMxB,kBAkMwBA,KAlMxB;;AAsM9B,SACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,aAAa,EAAEnD,aAFjB;AAGE,IAAA,gBAAgB,EAAEX,gBAHpB;AAIE,IAAA,QAAQ;AAAA,2EAAE,kBAAO+D,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,aAAjB,SAAiBA,aAAjB,EAAgCC,SAAhC,SAAgCA,SAAhC;AAAA;AAAA,uBACUL,+BAA+B,CAAC;AAChDT,kBAAAA,SAAS,EAAE;AACTe,oBAAAA,MAAM,EAAEjD,cAAc,IAAIA,cADjB;AAETkD,oBAAAA,WAAW,EAAEjD,YAAY,IAAIA;AAFpB;AADqC,iBAAD,CADzC;;AAAA;AACFkD,gBAAAA,GADE;AAQRC,gBAAAA,UAAU,CAAC,YAAM;AACfzC,kBAAAA,OAAO,CAACC,GAAR,CAAYyC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAnC,kBAAAA,OAAO,CAACC,GAAR,CAAYuC,GAAZ;AACA1D,kBAAAA,SAAS,CAAC;AACRJ,oBAAAA,MAAM,EAAE,IADA;AAERC,oBAAAA,OAAO,EAAE,8BAFD;AAGR;AACAC,oBAAAA,IAAI,EAAE;AAJE,mBAAD,CAAT;AAMAyD,kBAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,kBAAAA,aAAa,CAAC,KAAD,CAAb;AACD,iBAXS,EAWP,GAXO,CAAV;;AARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BG,iBAAkC;AAAA,QAA/BQ,UAA+B,SAA/BA,UAA+B;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;AACjC,WACE;AAAK,MAAA,SAAS,EAAErE,OAAO,CAACN,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEM,OAAO,CAACV,UAA1B;AAAsC,MAAA,SAAS,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAW+E,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAErE,OAAO,CAACN,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEM,OAAO,CAACN,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEgE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAE1D,OAAO,CAACP,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CAFF,CADF,EAeE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,EAAf;AAAmB,MAAA,SAAS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAc,MAAA,IAAI,MAAlB;AAAmB,MAAA,SAAS,EAAEO,OAAO,CAACN,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAEvC,SAHb;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EACF0D,cAAc,IAAIA,cAAc,CAACyD,UAAlC,IAAiD,EAPrD;AASE,MAAA,OAAO,EAAC,UATV;AAUE,MAAA,QAAQ,EAAED,YAVZ;AAWE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAElH,SAHb;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EAAGqD,YAAY,IAAIA,YAAjB,IAAkC,CAN3C;AAOE,MAAA,QAAQ,EAAEW,iBAPZ;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,QAAQ,EAAEkD,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA2BE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,EAAE,kBAACE,KAAD,EAAW;AACnBrD,QAAAA,kBAAkB,CAACqD,KAAD,EAAQ,WAAR,CAAlB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,WALP;AAME,MAAA,KAAK,EAAC,YANR;AAOE,MAAA,SAAS,EAAEnH,MAPb;AAQE,MAAA,WAAW,EAAC,YARd;AASE,MAAA,QAAQ,EAAEiH,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAE1B,kBAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAyCE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,SAAS,EAAEvF,MAJb;AAKE,MAAA,WAAW,EAAC,QALd;AAME,MAAA,QAAQ,EAAE,kBAACmH,KAAD,EAAW;AACnBrD,QAAAA,kBAAkB,CAACqD,KAAD,EAAQ,QAAR,CAAlB;AACD,OARH;AASE,MAAA,QAAQ,EAAEF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAEpC,eAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EAuDE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAC,mBAHR;AAIE,MAAA,SAAS,EAAE7E,MAJb;AAKE,MAAA,WAAW,EAAC,mBALd;AAME,MAAA,QAAQ,EAAE,kBAACmH,KAAD,EAAW;AACnBrD,QAAAA,kBAAkB,CAACqD,KAAD,EAAQ,SAAR,CAAlB;AACD,OARH;AASE,MAAA,QAAQ,EAAEF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAEpC,eAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,EAqEE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,KAAK,EAAC,wBAHR;AAIE,MAAA,SAAS,EAAE7E,MAJb;AAKE,MAAA,WAAW,EAAC,wBALd;AAME,MAAA,QAAQ,EAAE,kBAACmH,KAAD,EAAW;AACnBrD,QAAAA,kBAAkB,CAACqD,KAAD,EAAQ,WAAR,CAAlB;AACD,OARH;AASE,MAAA,QAAQ,EAAEF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAEpC,eAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArEF,EAmFE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,SAAS,EAAE9E,SAJb;AAKE,MAAA,WAAW,EAAC,kBALd;AAME,MAAA,QAAQ,EAAEkH,YANZ;AAOE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPd;AAQE,MAAA,OAAO,EAAEpC,eARX;AASE,MAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFF,EA8FE,MAAC,YAAD;AAAc,MAAA,MAAM,EAAE5B,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9FF,EAgGE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE+D,YAAlB;AAAgC,MAAA,OAAO,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEGA,YAAY,IAAIZ,UAAhB,GACG,sBADH,GAEG,sBAJN,CAhGF,CADF,CAfF,CAFF,CADF,CADF,CADF;AAkID,GA7JH,CADF;AAiKD,CAvWD;;GAAM1D,iB;UACYjB,S,EACDb,e,EAYkDY,O,EAoLAX,W;;;KAlM7D6B,iB;AAwWN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllPhasesQuery,\r\n  getAllRanksOfAnExamPhaseQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst CreateCESExaminer = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    // centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    examSessions,\r\n    sessions,\r\n    centerByNumber,\r\n  } = state;\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n    {\r\n      loading && <CircularProgress />;\r\n    }\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  // const loadCESData = async () => {\r\n  //   const { error, data } = await client.query({\r\n  //     query: getSingleCenterExamSessionQuery,\r\n  //     variables: {\r\n  //       examSession: examSessions && examSessions,\r\n  //       center: centerByNumber && centerByNumber,\r\n  //     },\r\n  //   });\r\n\r\n  //   console.log(data);\r\n  //   const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n  //   console.log(getCenterExamSessionsByCode);\r\n  //   const refinedCenterExamSessions =\r\n  //     getCenterExamSessionsByCode &&\r\n  //     removeTypename(getCenterExamSessionsByCode);\r\n  //   setState((prev) => ({\r\n  //     ...prev,\r\n  //     centerExamSessions: refinedCenterExamSessions,\r\n  //   }));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   loadCESData();\r\n  // }, [centerNumber, examSessions]);\r\n\r\n  // // transform the array into a single object\r\n  // const getCESID = centerExamSessions && centerExamSessions[0];\r\n  // console.log(getCESID);\r\n\r\n  // const loadCESS = async () => {\r\n  //   const { error, data } = await client.query({\r\n  //     query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n  //     variables: getCESID,\r\n  //   });\r\n\r\n  //   console.log(data);\r\n  //   const getCenterExamSession = data && data.centerExamSession;\r\n  //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n  //   console.log({ centerExamSessionSpecialty });\r\n  //   setState((prev) => ({\r\n  //     ...prev,\r\n  //     specialties: centerExamSessionSpecialty,\r\n  //   }));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   loadCESS();\r\n  // }, [getCESID, centerNumber]);\r\n\r\n  // const newSpecialty = specialties && specialties.map((item) => item);\r\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  // console.log(refinedSpecialty);\r\n  // const getSpecialtyOptions =\r\n  //   refinedSpecialty &&\r\n  //   refinedSpecialty.map((item) => ({\r\n  //     id: item.specialty.id,\r\n  //     value: item.id,\r\n  //     label: item.specialty.specialtyName,\r\n  //   }));\r\n  // console.log({ state });\r\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty);\r\n  const [CreateCenterExamSessionExaminer, { loadingMut, error }] = useMutation(\r\n    createCenterExamSessionExaminerMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await CreateCenterExamSessionExaminer({\r\n          variables: {\r\n            center: centerByNumber && centerByNumber,\r\n            examSession: examSessions && examSessions,\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Centre inscript avec success\",\r\n            // message: \"Inscription a l'examen réussie\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Examinateur s'i'au Centre\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"Examen\"\r\n                        component={Select}\r\n                        placeholder=\"Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"phaseID\"\r\n                        label=\"Phase de l'examen\"\r\n                        component={Select}\r\n                        placeholder=\"Phase de l'examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"phaseID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"phaseID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"phaseRank\"\r\n                        label=\"Poste occupe au centre\"\r\n                        component={Select}\r\n                        placeholder=\"Poste occupe au centre\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"phaseRank\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"phaseRank\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examinerCode\"\r\n                        label=\"Code examinateur\"\r\n                        component={TextField}\r\n                        placeholder=\"Code examinateur\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examinerCode\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"S'inscrire au centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateCESExaminer;\r\n"]},"metadata":{},"sourceType":"module"}