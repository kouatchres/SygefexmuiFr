{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n\nconst useForm = initialValues => {\n  const {\n    0: state,\n    1: setState\n  } = useState(initialValues);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    console.log({\n      name,\n      value\n    });\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      [name]: val\n    }));\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    return val;\n  };\n\n  const handleSelectChange = (event, name) => {\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      [name]: handleChange(event)\n    }));\n  };\n\n  return [state, setState, handleSelectChange, handleInputChange];\n};\n\nexport default useForm;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/utils/useForm.jsx"],"names":["useState","useForm","initialValues","state","setState","handleInputChange","e","name","value","type","target","console","log","val","parseInt","handleChange","handleSelectChange","event"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAIC,aAAD,IAAmB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,aAAD,CAAlC;;AAEA,QAAMG,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAwBH,CAAC,CAACI,MAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAZ;AACA,UAAMK,GAAG,GAAGJ,IAAI,KAAK,QAAT,GAAoBK,QAAQ,CAACN,KAAD,CAA5B,GAAsCA,KAAlD;AACAJ,IAAAA,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwB,OAACI,IAAD,GAAQM;AAAhC,MAAD,CAAR;AACD,GALD;;AAOA,QAAME,YAAY,GAAIT,CAAD,IAAO;AAC1B,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,CAAC,CAACI,MAA1B;AACA,UAAMG,GAAG,GAAGJ,IAAI,KAAK,QAAT,GAAoBK,QAAQ,CAACN,KAAD,CAA5B,GAAsCA,KAAlD;AACA,WAAOK,GAAP;AACD,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,CAACC,KAAD,EAAQV,IAAR,KAAiB;AAC1CH,IAAAA,QAAQ,CAAED,KAAD,oCAAiBA,KAAjB;AAAwB,OAACI,IAAD,GAAQQ,YAAY,CAACE,KAAD;AAA5C,MAAD,CAAR;AACD,GAFD;;AAIA,SAAO,CAACd,KAAD,EAAQC,QAAR,EAAkBY,kBAAlB,EAAsCX,iBAAtC,CAAP;AACD,CArBD;;AAsBA,eAAeJ,OAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useForm = (initialValues) => {\r\n  const [state, setState] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    console.log({ name, value });\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState((state) => ({ ...state, [name]: val }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    return val;\r\n  };\r\n\r\n  const handleSelectChange = (event, name) => {\r\n    setState((state) => ({ ...state, [name]: handleChange(event) }));\r\n  };\r\n\r\n  return [state, setState, handleSelectChange, handleInputChange];\r\n};\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}