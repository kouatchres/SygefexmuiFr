{"ast":null,"code":"import _toConsumableArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport Popup from \"../utils/Popup\";\nimport Button from \"@material-ui/core/Button\";\n\nvar DivisionList = function DivisionList() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      openPopup = _useState.openPopup,\n      setOpenPopup = _useState.setOpenPopup;\n\n  var _useState2 = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\",\n      grouping: false\n    }, {\n      field: \"divName\",\n      title: \"Division Name\"\n    }, {\n      field: \"divCode\",\n      title: \"Division Code\",\n      grouping: false\n    }],\n    data: []\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var loadDivisionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, regions, getDivisions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsAndDivisionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), regions = _data.regions;\n              getDivisions = regions.map(function (item) {\n                var divInfos = item.division.map(function (division) {\n                  return _objectSpread({\n                    regName: item.regName,\n                    regCode: item.regCode\n                  }, division);\n                });\n                return divInfos;\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: getDivisions.flat(1)\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadDivisionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n  console.dir(state.data);\n  return __jsx(React.Fragment, null, __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(MaterialTable, {\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    components: {\n      Toolbar: function Toolbar(props) {\n        return __jsx(\"div\", {\n          style: {\n            backgroundColor: \"#4a8ba8\",\n            // backgroundColor: \"#a2463c\",\n            borderTopRightRadius: \"0.5rem\",\n            borderTopLeftRadius: \"0.5rem\",\n            color: \"#fff\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, __jsx(MTableToolbar, _extends({\n          style: {\n            // color: \"#fff\",\n            textColor: \"#fff\"\n          }\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        })), __jsx(Button, {\n          label: \"custom Button\",\n          value: filter,\n          onChange: function onChange(event) {\n            return setFilter(event.target.value);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 18\n          }\n        }, \" Popup\"));\n      }\n    },\n    icons: tableIcons,\n    title: \"Listed des d\\xE9partements\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        color: \"#fff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#5e9fbc\",\n        // backgroundColor: \"#01579b\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.push(newData);\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data: data\n              });\n            });\n          }, 400);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            if (oldData) {\n              setState(function (prevState) {\n                var data = _toConsumableArray(prevState.data);\n\n                data[data.indexOf(oldData)] = newData;\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  data: data\n                });\n              });\n            }\n          }, 400);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data: data\n              });\n            });\n          }, 400);\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }))), __jsx(Popup, {\n    setOpenPopup: setOpenPopup,\n    openPopup: openPopup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(DivisionList, \"gkgJPk+IoiILMsmTQ9y5o/fL0xY=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = DivisionList;\nexport default DivisionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DivisionList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionList.jsx"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Paper","useApolloClient","getAllRegionsAndDivisionsQuery","tableIcons","Popup","Button","DivisionList","client","openPopup","setOpenPopup","columns","field","title","grouping","data","state","setState","loadDivisionData","query","error","regions","getDivisions","map","item","divInfos","division","regName","regCode","prev","flat","console","log","dir","marginTop","position","top","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","textColor","filter","event","setFilter","target","value","actionsColumnIndex","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport Popup from \"../utils/Popup\";\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nconst DivisionList = () => {\r\n  const client = useApolloClient();\r\nconst {openPopup, setOpenPopup}= useState(false)\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n        grouping: false,\r\n      },\r\n      { field: \"divName\", title: \"Division Name\" },\r\n      { field: \"divCode\", title: \"Division Code\", grouping: false },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsAndDivisionsQuery,\r\n    });\r\n    const { regions } = { ...data };\r\n\r\n    const getDivisions = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => ({\r\n        regName: item.regName,\r\n        regCode: item.regCode,\r\n        ...division,\r\n      }));\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getDivisions.flat(1) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  console.dir(state.data);\r\n  return (\r\n    <>\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <div>\r\n        <MaterialTable\r\n          stickyHeader\r\n          style={{ position: \"sticky\", top: 0 }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#4a8ba8\",\r\n                  // backgroundColor: \"#a2463c\",\r\n                  borderTopRightRadius: \"0.5rem\",\r\n                  borderTopLeftRadius: \"0.5rem\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <MTableToolbar\r\n                  style={{\r\n                    // color: \"#fff\",\r\n                    textColor: \"#fff\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n                 <Button\r\n                label=\"custom Button\"\r\n                value={filter}\r\n                onChange={event => setFilter(event.target.value)}\r\n              > Popup</Button>\r\n              </div>\r\n            ),\r\n          }}\r\n          icons={tableIcons}\r\n          title=\"Listed des départements\"\r\n          columns={state.columns}\r\n          data={state.data}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            grouping: true,\r\n            paging: true,\r\n            pageSize: 50, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n            headerStyle: {\r\n              color: \"#fff\",\r\n              paddingTop: \"0.5rem\",\r\n              paddingBottom: \"0.5rem\",\r\n              backgroundColor: \"#5e9fbc\",\r\n              // backgroundColor: \"#01579b\",\r\n              maxHeight: \"0.5rem !important\",\r\n            },\r\n            rowStyle: {\r\n              color: \"#000\",\r\n            },\r\n          }}\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.push(newData);\r\n                    return {\r\n                      ...prevState,\r\n                      data,\r\n                    };\r\n                  });\r\n                }, 400);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  if (oldData) {\r\n                    setState((prevState) => {\r\n                      const data = [...prevState.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      return {\r\n                        ...prevState,\r\n                        data,\r\n                      };\r\n                    });\r\n                  }\r\n                }, 400);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.splice(data.indexOf(oldData), 1);\r\n                    return {\r\n                      ...prevState,\r\n                      data,\r\n                    };\r\n                  });\r\n                }, 400);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n    <Popup setOpenPopup={setOpenPopup} openPopup={openPopup}/>\r\n    </>\r\n  );\r\n};\r\nexport default DivisionList;\r\n"]},"metadata":{},"sourceType":"module"}