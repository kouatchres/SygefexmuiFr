{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\centerExamSessionSpecialty\\\\CenterTakesSpecialty.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport Error from \"../ErrorMessage.js\";\nimport { Formik, Form } from \"formik\";\nimport { SygexInput, SygefexSelect, StyledForm, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { getSelectedObject, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllEducationTypesQuery, getAllSpecialtiesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nvar InputGroup = styled.div.withConfig({\n  displayName: \"CenterTakesSpecialty__InputGroup\",\n  componentId: \"sc-1154a7o-0\"\n})([\"display:flex;flex-direction:column;min-width:13rem;margin:0 1rem;\"]);\n_c = InputGroup;\nvar AllControls = styled.div.withConfig({\n  displayName: \"CenterTakesSpecialty__AllControls\",\n  componentId: \"sc-1154a7o-1\"\n})([\"display:flex;flex-direction:column;\"]);\n_c2 = AllControls;\nvar validationSchema = Yup.object().shape({\n  // exam: Yup\n  //     .string()\n  //     .required(\"Choix De l'examen Obligatoire\"),\n  // session: Yup\n  //     .string()\n  //     .required(\"Choix de la session Obligatoire\"),\n  // centerNumber: Yup\n  //     .number()\n  //     .min(0, 'Pas de Numéro négative')\n  //     .required('Numéro du centre obligatoire'),\n  // educType: Yup\n  //     .string()\n  //     .required(\"Choix du Type d'enseignement Obligatoire\"),\n  specialty: Yup.string().required(\"Série Obligatoire\")\n});\n\nvar NewCenterTakesSpecialty = function NewCenterTakesSpecialty() {\n  _s();\n\n  var initialValues = {\n    centerName: \"\",\n    centerNumber: \"\",\n    specialty: \"\"\n  };\n\n  var _useForm = useForm({\n    examID: \"\",\n    sessionID: \"\",\n    educTypeID: \"\",\n    centerNumber: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 3),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleReactSelectChange = _useForm2[2];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    var val = type === \"number\" ? parseInt(value) : value;\n    setState(_defineProperty({}, name, val));\n  };\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var makeExaminerObject = function makeExaminerObject(profCodeValue) {\n    var storedProf = {\n      examinerCode: \"\".concat(profCodeValue)\n    };\n    return storedProf;\n  };\n\n  var makeCESSObject = function makeCESSObject(candCodeValue) {\n    var objCESS = {\n      id: \"\".concat(candCodeValue)\n    };\n    return objCESS;\n  };\n\n  var _useQuery = useQuery(getAllExamsQuery),\n      dataExams = _useQuery.data,\n      loadingExams = _useQuery.loading,\n      errorExams = _useQuery.errorExams;\n\n  var getExams = dataExams && dataExams.exams;\n  console.log(getExams);\n  var removeExamName = getExams && getExams.map(function (_ref) {\n    var examName = _ref.examName,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n  var refinedExams = getExams && removeTypename(removeExamName);\n  var getExamOptions = getExams && getExams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var _useQuery2 = useQuery(getAllSessionsQuery),\n      dataSession = _useQuery2.data,\n      loadingSession = _useQuery2.loading,\n      errorSession = _useQuery2.errorSession;\n\n  var getSessions = dataSession && dataSession.sessions;\n  var refinedSessions = removeTypename(getSessions);\n  var getSessionOptions = getSessions && getSessions.map(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      value: item.id,\n      label: item.sessionName\n    });\n  });\n\n  var _useQuery3 = useQuery(getExamSessionQuery, {\n    skip: !state.examID || !state.sessionID,\n    variables: {\n      exam: getExams && getSelectedObject(refinedExams, state.examID),\n      session: getSessions && getSelectedObject(refinedSessions, state.sessionID)\n    }\n  }),\n      dataExamSession = _useQuery3.data,\n      loadingExamSession = _useQuery3.loading,\n      errorExamSession = _useQuery3.errorExamSession;\n\n  console.log(dataExamSession);\n  var getExamSessions = dataExamSession && dataExamSession.examSessions;\n  var refinedES = getExamSessions && removeTypename(getExamSessions);\n  var reducedES = refinedES && refinedES[0];\n  console.log(reducedES);\n\n  var _useQuery4 = useQuery(getSingleCenterQuery, {\n    skip: !state.centerNumber,\n    variables: {\n      centerNumber: state.centerNumber\n    }\n  }),\n      dataCenter = _useQuery4.data,\n      loadingCenter = _useQuery4.loading,\n      errorCenter = _useQuery4.errorCenter;\n\n  var getCenterByNumber = dataCenter && dataCenter.centerByNumber;\n  var refinedCenter = getCenterByNumber && removeTypename(getCenterByNumber);\n  console.log(getCenterByNumber);\n\n  var _useQuery5 = useQuery(getSingleCenterExamSessionQuery, {\n    skip: !reducedES || !getCenterByNumber,\n    variables: {\n      examSession: reducedES && reducedES,\n      center: refinedCenter && refinedCenter\n    }\n  }),\n      dataCES = _useQuery5.data,\n      loadingCES = _useQuery5.loading,\n      errorCES = _useQuery5.error;\n\n  console.log(dataCES);\n  var getCenterExamSessionsByCode = dataCES && dataCES.centerExamSessionsByCode;\n  console.log(getCenterExamSessionsByCode); // remove typename from the object\n\n  var refinedCenterExamSessionsByCode = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode); // transform the array into a single object\n\n  var getCES = refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\n  console.log(getCES);\n\n  var _useQuery6 = useQuery(getAllEducationTypesQuery),\n      dataEducType = _useQuery6.data,\n      loadingEducType = _useQuery6.loading,\n      errorEducType = _useQuery6.errorEducType;\n\n  console.log(dataEducType);\n  var getEducationTypes = dataEducType && dataEducType.educationTypes;\n  var getEducTypeOptions = getEducationTypes && getEducationTypes.map(function (item) {\n    return {\n      value: item.id,\n      label: item.educationTypeName\n    };\n  });\n\n  var _useQuery7 = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\n    skip: !state.educTypeID,\n    variables: {\n      id: state.educTypeID\n    }\n  }),\n      dataSpecialty = _useQuery7.data,\n      loadingSpecialty = _useQuery7.loading,\n      errorSpecialty = _useQuery7.errorSpecialty;\n\n  console.log(dataSpecialty);\n  var getEducationType = dataSpecialty && dataSpecialty.educationType;\n\n  var specialtyEducType = _objectSpread({}, getEducationType);\n\n  var specialty = specialtyEducType.specialty;\n  console.log(specialty);\n  var removeSpecialtyName = specialty && specialty.map(function (_ref2) {\n    var specialtyName = _ref2.specialtyName,\n        others = _objectWithoutProperties(_ref2, [\"specialtyName\"]);\n\n    return others;\n  });\n  var refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\n  var getSpecialtyOptions = specialty && specialty.map(function (item) {\n    return {\n      value: item.id,\n      label: item.specialtyName\n    };\n  });\n\n  var _useMutation = useMutation(createCenterExamSessionSpecialtyMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createCenterExamSessionSpecialty = _useMutation2[0],\n      error = _useMutation2[1].error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref3) {\n        var resetForm, setSubmitting, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref3.resetForm, setSubmitting = _ref3.setSubmitting;\n                _context.next = 3;\n                return createCenterExamSessionSpecialty({\n                  variables: {\n                    specialty: refinedSpecialty && getSelectedObject(refinedSpecialty, values.specialty.value),\n                    centerExamSession: getCES && getCES\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res.data.createCenterExamSessionSpecialty);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, function (_ref5) {\n    var values = _ref5.values,\n        setFieldValue = _ref5.setFieldValue,\n        isSubmitting = _ref5.isSubmitting;\n    return __jsx(MinimStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"Sp\\xE9cialit\\xE9s offertes par Centre\"), __jsx(Error, {\n      error: error || errorExams || errorSession || errorCenter || errorCES || errorExamSession || errorSpecialty || errorEducType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loadingExams || loadingSession || loadingCenter || loadingCES || loadingExamSession || loadingSpecialty || loadingEducType,\n      \"aria-busy\": isSubmitting || loadingExams || loadingSession || loadingCenter || loadingCES || loadingExamSession || loadingSpecialty || loadingEducType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, __jsx(AllControls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, __jsx(SygexInput, {\n      value: getCenterByNumber && getCenterByNumber.centerCode,\n      name: \"centerName\",\n      type: \"text\",\n      label: \" Nom du centre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      onChange: handleChange,\n      name: \"centerNumber\",\n      type: \"number\",\n      value: state.centerNumber || \"\",\n      label: \"Num\\xE9ro du centre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"sessionID\",\n      options: getSessionOptions,\n      placeholder: \"La Session\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"examID\",\n      options: getExamOptions,\n      placeholder: \"L'Examen\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"educTypeID\",\n      options: getEducTypeOptions,\n      placeholder: \"Type d'Enseignement\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: function onChange(value) {\n        return setFieldValue(\"specialty\", value);\n      },\n      name: \"specialty\",\n      options: getSpecialtyOptions,\n      placeholder: \"La Série\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    })), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n  });\n};\n\n_s(NewCenterTakesSpecialty, \"zN2ZNdfS4rAkbN3uG8OxJtdKrPA=\", false, function () {\n  return [useForm, useQuery, useQuery, useQuery, useQuery, useQuery, useQuery, useQuery, useMutation];\n});\n\n_c3 = NewCenterTakesSpecialty;\nexport default NewCenterTakesSpecialty;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputGroup\");\n$RefreshReg$(_c2, \"AllControls\");\n$RefreshReg$(_c3, \"NewCenterTakesSpecialty\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/centerExamSessionSpecialty/CenterTakesSpecialty.jsx"],"names":["React","useMutation","useQuery","MinimStyledPage","Error","Formik","Form","SygexInput","SygefexSelect","StyledForm","ButtonStyled","StyledButton","styled","Yup","useForm","getSelectedObject","removeTypename","createCenterExamSessionSpecialtyMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllEducationTypesQuery","getAllSpecialtiesOfAnEducationTypeQuery","InputGroup","div","AllControls","validationSchema","object","shape","specialty","string","required","NewCenterTakesSpecialty","initialValues","centerName","centerNumber","examID","sessionID","educTypeID","state","setState","handleReactSelectChange","handleChange","e","target","name","value","type","val","parseInt","makeCenterVariableObject","centerCodeValue","storedCenter","makeExaminerObject","profCodeValue","storedProf","examinerCode","makeCESSObject","candCodeValue","objCESS","id","dataExams","data","loadingExams","loading","errorExams","getExams","exams","console","log","removeExamName","map","examName","others","refinedExams","getExamOptions","item","label","dataSession","loadingSession","errorSession","getSessions","sessions","refinedSessions","getSessionOptions","sessionName","skip","variables","exam","session","dataExamSession","loadingExamSession","errorExamSession","getExamSessions","examSessions","refinedES","reducedES","dataCenter","loadingCenter","errorCenter","getCenterByNumber","centerByNumber","refinedCenter","examSession","center","dataCES","loadingCES","errorCES","error","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessionsByCode","getCES","dataEducType","loadingEducType","errorEducType","getEducationTypes","educationTypes","getEducTypeOptions","educationTypeName","dataSpecialty","loadingSpecialty","errorSpecialty","getEducationType","educationType","specialtyEducType","removeSpecialtyName","specialtyName","refinedSpecialty","getSpecialtyOptions","createCenterExamSessionSpecialty","values","resetForm","setSubmitting","centerExamSession","res","setTimeout","JSON","stringify","setFieldValue","isSubmitting","centerCode"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  SygexInput,\r\n  SygefexSelect,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport {\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSpecialtiesOfAnEducationTypeQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 13rem;\r\n  margin: 0 1rem;\r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* min-width: 17rem; */\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // exam: Yup\r\n  //     .string()\r\n  //     .required(\"Choix De l'examen Obligatoire\"),\r\n  // session: Yup\r\n  //     .string()\r\n  //     .required(\"Choix de la session Obligatoire\"),\r\n  // centerNumber: Yup\r\n  //     .number()\r\n  //     .min(0, 'Pas de Numéro négative')\r\n  //     .required('Numéro du centre obligatoire'),\r\n  // educType: Yup\r\n  //     .string()\r\n  //     .required(\"Choix du Type d'enseignement Obligatoire\"),\r\n  specialty: Yup.string().required(\"Série Obligatoire\"),\r\n});\r\n\r\nconst NewCenterTakesSpecialty = () => {\r\n  const initialValues = {\r\n    centerName: \"\",\r\n    centerNumber: \"\",\r\n    specialty: \"\",\r\n  };\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    educTypeID: \"\",\r\n    centerNumber: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n  const makeCESSObject = (candCodeValue) => {\r\n    const objCESS = {\r\n      id: `${candCodeValue}`,\r\n    };\r\n    return objCESS;\r\n  };\r\n\r\n  const { data: dataExams, loading: loadingExams, errorExams } = useQuery(\r\n    getAllExamsQuery\r\n  );\r\n\r\n  const getExams = dataExams && dataExams.exams;\r\n  console.log(getExams);\r\n  const removeExamName =\r\n    getExams && getExams.map(({ examName, ...others }) => others);\r\n  const refinedExams = getExams && removeTypename(removeExamName);\r\n  const getExamOptions =\r\n    getExams &&\r\n    getExams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const { data: dataSession, loading: loadingSession, errorSession } = useQuery(\r\n    getAllSessionsQuery\r\n  );\r\n\r\n  const getSessions = dataSession && dataSession.sessions;\r\n  const refinedSessions = removeTypename(getSessions);\r\n  const getSessionOptions =\r\n    getSessions &&\r\n    getSessions.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.sessionName,\r\n    }));\r\n\r\n  const {\r\n    data: dataExamSession,\r\n    loading: loadingExamSession,\r\n    errorExamSession,\r\n  } = useQuery(getExamSessionQuery, {\r\n    skip: !state.examID || !state.sessionID,\r\n    variables: {\r\n      exam: getExams && getSelectedObject(refinedExams, state.examID),\r\n      session:\r\n        getSessions && getSelectedObject(refinedSessions, state.sessionID),\r\n    },\r\n  });\r\n\r\n  console.log(dataExamSession);\r\n  const getExamSessions = dataExamSession && dataExamSession.examSessions;\r\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n  const reducedES = refinedES && refinedES[0];\r\n  console.log(reducedES);\r\n\r\n  const { data: dataCenter, loading: loadingCenter, errorCenter } = useQuery(\r\n    getSingleCenterQuery,\r\n    {\r\n      skip: !state.centerNumber,\r\n      variables: {\r\n        centerNumber: state.centerNumber,\r\n      },\r\n    }\r\n  );\r\n\r\n  const getCenterByNumber = dataCenter && dataCenter.centerByNumber;\r\n  const refinedCenter = getCenterByNumber && removeTypename(getCenterByNumber);\r\n  console.log(getCenterByNumber);\r\n\r\n  const { data: dataCES, loading: loadingCES, error: errorCES } = useQuery(\r\n    getSingleCenterExamSessionQuery,\r\n    {\r\n      skip: !reducedES || !getCenterByNumber,\r\n      variables: {\r\n        examSession: reducedES && reducedES,\r\n        center: refinedCenter && refinedCenter,\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(dataCES);\r\n  const getCenterExamSessionsByCode =\r\n    dataCES && dataCES.centerExamSessionsByCode;\r\n  console.log(getCenterExamSessionsByCode);\r\n  // remove typename from the object\r\n  const refinedCenterExamSessionsByCode =\r\n    getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // transform the array into a single object\r\n  const getCES =\r\n    refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\r\n  console.log(getCES);\r\n\r\n  const {\r\n    data: dataEducType,\r\n    loading: loadingEducType,\r\n    errorEducType,\r\n  } = useQuery(getAllEducationTypesQuery);\r\n\r\n  console.log(dataEducType);\r\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n  const getEducTypeOptions =\r\n    getEducationTypes &&\r\n    getEducationTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const {\r\n    data: dataSpecialty,\r\n    loading: loadingSpecialty,\r\n    errorSpecialty,\r\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\r\n    skip: !state.educTypeID,\r\n    variables: { id: state.educTypeID },\r\n  });\r\n\r\n  console.log(dataSpecialty);\r\n\r\n  const getEducationType = dataSpecialty && dataSpecialty.educationType;\r\n\r\n  const specialtyEducType = { ...getEducationType };\r\n  const { specialty } = specialtyEducType;\r\n  console.log(specialty);\r\n  const removeSpecialtyName =\r\n    specialty && specialty.map(({ specialtyName, ...others }) => others);\r\n  const refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\r\n  const getSpecialtyOptions =\r\n    specialty &&\r\n    specialty.map((item) => ({ value: item.id, label: item.specialtyName }));\r\n\r\n  const [createCenterExamSessionSpecialty, { error }] = useMutation(\r\n    createCenterExamSessionSpecialtyMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await createCenterExamSessionSpecialty({\r\n          variables: {\r\n            specialty:\r\n              refinedSpecialty &&\r\n              getSelectedObject(refinedSpecialty, values.specialty.value),\r\n            centerExamSession: getCES && getCES,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res.data.createCenterExamSessionSpecialty);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ values, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <MinimStyledPage>\r\n            <h4>Spécialités offertes par Centre</h4>\r\n            <Error error={\r\n              error || \r\n               errorExams ||\r\n                errorSession ||\r\n                errorCenter ||\r\n                errorCES ||\r\n                errorExamSession ||\r\n                errorSpecialty ||\r\n                errorEducType} />\r\n           \r\n            <StyledForm\r\n              disabled={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCenter ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loadingSpecialty ||\r\n                loadingEducType\r\n              }\r\n              aria-busy={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCenter ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loadingSpecialty ||\r\n                loadingEducType\r\n              }\r\n            >\r\n              <Form>\r\n                <AllControls>\r\n                  <InputGroup>\r\n                    <SygexInput\r\n                      value={getCenterByNumber && getCenterByNumber.centerCode}\r\n                      name=\"centerName\"\r\n                      type=\"text\"\r\n                      label=\" Nom du centre\"\r\n                    />\r\n                    <SygexInput\r\n                      onChange={handleChange}\r\n                      name=\"centerNumber\"\r\n                      type=\"number\"\r\n                      value={state.centerNumber || \"\"}\r\n                      label=\"Numéro du centre\"\r\n                    />\r\n\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"sessionID\"\r\n                      options={getSessionOptions}\r\n                      placeholder={\"La Session\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"examID\"\r\n                      options={getExamOptions}\r\n                      placeholder={\"L'Examen\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"educTypeID\"\r\n                      options={getEducTypeOptions}\r\n                      placeholder={\"Type d'Enseignement\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) => setFieldValue(\"specialty\", value)}\r\n                      name=\"specialty\"\r\n                      options={getSpecialtyOptions}\r\n                      placeholder={\"La Série\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </InputGroup>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\">\r\n                      Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </AllControls>\r\n              </Form>\r\n            </StyledForm>\r\n          </MinimStyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewCenterTakesSpecialty;\r\n"]},"metadata":{},"sourceType":"module"}