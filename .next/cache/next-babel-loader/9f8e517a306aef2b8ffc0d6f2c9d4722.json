{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { useRouter } from \"next/router\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getRegisteredCandidatesPerSpecialty, getAllSpecialtiesOfACenterExamSessionQuery, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSpecialtyID, getSelectedObject, candExamSessionCode } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar ExamRegistration = function ExamRegistration() {\n  _s();\n\n  var _useForm3;\n\n  var classes = useStyles();\n  var router = useRouter();\n  var client = useApolloClient();\n  var initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var _useForm = useForm((_useForm3 = {\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    specialties: []\n  }, _defineProperty(_useForm3, \"centerNumber\", \"\"), _defineProperty(_useForm3, \"centerByNumber\", \"\"), _defineProperty(_useForm3, \"examSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessionSpecialty\", {}), _defineProperty(_useForm3, \"candPerSeries\", []), _useForm3)),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      sessions = state.sessions,\n      specialties = state.specialties,\n      centerByNumber = state.centerByNumber,\n      examSessions = state.examSessions,\n      centerExamSessions = state.centerExamSessions,\n      centerExamSessionSpecialty = state.centerExamSessionSpecialty,\n      candPerSeries = state.candPerSeries;\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var makeCandVariableObject = function makeCandVariableObject(candCodeValue) {\n    var storedCandidate = {\n      candCode: \"\".concat(candCodeValue)\n    };\n    return storedCandidate;\n  };\n\n  var candRegistrationNumber = function candRegistrationNumber(centerCode, exam, session) {\n    return \"\".concat(centerCode + exam + session);\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        loading: true\n      });\n    });\n    loadExamData();\n    loadSessionData();\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        loading: false\n      });\n    });\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running the exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        examSessions: \"\"\n      });\n    });\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, error, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              error = _yield$client$query4.error;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        centerByNumber: \"\"\n      });\n    });\n    loadCenterData();\n  }, [centerNumber]);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        centerExamSessions: \"\"\n      });\n    });\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  var getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n\n  var loadCESS = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query6, error, data, getCenterExamSession, _getCenterExamSession, centerExamSessionSpecialty;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                query: getAllSpecialtiesOfACenterExamSessionQuery,\n                variables: getCESID\n              });\n\n            case 2:\n              _yield$client$query6 = _context6.sent;\n              error = _yield$client$query6.error;\n              data = _yield$client$query6.data;\n              console.log(data);\n              getCenterExamSession = data && data.centerExamSession;\n              _getCenterExamSession = _objectSpread({}, getCenterExamSession), centerExamSessionSpecialty = _getCenterExamSession.centerExamSessionSpecialty;\n              console.log({\n                centerExamSessionSpecialty: centerExamSessionSpecialty\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  specialties: centerExamSessionSpecialty\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadCESS() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESS();\n  }, [getCESID, centerNumber]);\n  var newSpecialty = specialties && specialties.map(function (item) {\n    return item;\n  });\n  var refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  console.log(refinedSpecialty);\n  var getSpecialtyOptions = refinedSpecialty && refinedSpecialty.map(function (item) {\n    return {\n      id: item.specialty.id,\n      value: item.id,\n      label: item.specialty.specialtyName\n    };\n  });\n  console.log({\n    state: state\n  });\n  console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\n\n  var _useMutation = useMutation(createRegistrationMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createRegistration = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(values, _ref8) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                setSubmitting = _ref8.setSubmitting, resetForm = _ref8.resetForm;\n                _context7.next = 3;\n                return createRegistration({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    candidate: makeCandVariableObject(values.candCode),\n                    centerExamSession: {\n                      id: getCESID.id\n                    },\n                    specialty: {\n                      id: getSpecialtyID(specialties, centerExamSessionSpecialty).id\n                    },\n                    aptitude: values.aptitude,\n                    EPF1: values.EPF1,\n                    EPF2: values.EPF2,\n                    centerExamSessionSpecialty: {\n                      id: centerExamSessionSpecialty\n                    },\n                    candExamSession: candExamSessionCode(values.candCode, examID, sessionID),\n                    candRegistrationNumber: exams && sessions && candRegistrationNumber(centerNumber, getExamName.examCode, getSessionName.sessionName)\n                  })\n                });\n\n              case 3:\n                res = _context7.sent;\n                res && router.push({\n                  pathname: \"/show/results/registrationReceipt\",\n                  query: {\n                    id: res.data.createRegistration.id\n                  }\n                });\n                setNotify({\n                  isOpen: true,\n                  message: \"Inscription Réuissie\",\n                  type: \"success\"\n                });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x, _x2) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }\n  }, function (_ref10) {\n    var submitForm = _ref10.submitForm,\n        setFieldValue = _ref10.setFieldValue,\n        isSubmitting = _ref10.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }\n    }, \"Inscription aux Examens\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"candCode\",\n      type: \"text\",\n      component: TextField,\n      label: \"Code secret candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loadingMut,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"La Sp\\xE9cialit\\xE9\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 27\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"aptitude\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"aptitude\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Aptitude en EPS\",\n      options: [{\n        value: \"A\",\n        label: \"Apte\"\n      }, {\n        value: \"I\",\n        label: \"Inapte\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"EPF1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"EPF1\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"EPF1 Th\\xE9orie\",\n      value: state.EPF1,\n      options: [{\n        value: \"\",\n        label: \"Rien\"\n      }, {\n        value: \"D\",\n        label: \"Dessin\"\n      }, {\n        value: \"E\",\n        label: \"Education Menagere\"\n      }, {\n        value: \"M\",\n        label: \"Education Musicale\"\n      }, {\n        value: \"G\",\n        label: \"Grec\"\n      }, {\n        value: \"L\",\n        label: \"Latin\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"EPF2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"EPF2\",\n      value: state.EPF2,\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"EPF2 TP\",\n      options: [{\n        value: \"\",\n        label: \"Rien\"\n      }, {\n        value: \"C\",\n        label: \"TP Chimie\"\n      }, {\n        value: \"P\",\n        label: \"TP Physique\"\n      }, {\n        value: \"I\",\n        label: \"TP Info\"\n      }, {\n        value: \"S\",\n        label: \"TP SVT\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Inscrire Candidat\")))))));\n  });\n};\n\n_s(ExamRegistration, \"/38TbHHGTDw4U7YP3Jh17+V6jU4=\", false, function () {\n  return [useStyles, useRouter, useApolloClient, useForm, useMutation];\n});\n\n_c = ExamRegistration;\nexport default ExamRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamRegistration\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useState","useEffect","Error","Yup","FRadioGroup","useRouter","TextField","createAttendanceMutation","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getRegisteredCandidatesPerSpecialty","getAllSpecialtiesOfACenterExamSessionQuery","getSingleCenterQuery","removeTypename","getSpecialtyID","getSelectedObject","candExamSessionCode","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","ExamRegistration","classes","router","client","initialValues","centerNumber","isOpen","message","type","notify","setNotify","candCode","examID","sessionID","exams","sessions","specialties","state","setState","handleSelectChange","handleInputChange","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","candPerSeries","makeCenterVariableObject","centerCodeValue","storedCenter","makeCandVariableObject","candCodeValue","storedCandidate","candRegistrationNumber","centerCode","exam","session","loadExamData","query","error","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loading","loadExamSessionData","skip","variables","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","loadCESS","getCenterExamSession","centerExamSession","newSpecialty","refinedSpecialty","getSpecialtyOptions","specialty","specialtyName","createRegistrationMutation","createRegistration","loadingMut","values","setSubmitting","resetForm","candidate","aptitude","EPF1","EPF2","candExamSession","examCode","res","push","pathname","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n  candExamSessionCode,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst ExamRegistration = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    specialties: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n    candPerSeries:[],\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    specialties,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    centerExamSessionSpecialty,\r\n    candPerSeries,\r\n  } = state;\r\n\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candCode: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  const candRegistrationNumber = (centerCode, exam, session) => {\r\n    return `${centerCode + exam + session}`;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    \r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    \r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n    }));\r\n    loadExamData();\r\n    loadSessionData();\r\n     setState((prev) => ({\r\n      ...prev,\r\n      loading: false,\r\n    }));\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    \r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: \"\",\r\n    }));\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerByNumber: \"\",\r\n    }));\r\n\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: \"\",\r\n       }));\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  const loadCESS = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n      variables: getCESID,\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSession = data && data.centerExamSession;\r\n    const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n    console.log({ centerExamSessionSpecialty });\r\n    setState((prev) => ({\r\n      ...prev,\r\n      specialties: centerExamSessionSpecialty,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESS();\r\n  }, [getCESID, centerNumber]);\r\n\r\n  const newSpecialty = specialties && specialties.map((item) => item);\r\n  const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  console.log(refinedSpecialty);\r\n  const getSpecialtyOptions =\r\n    refinedSpecialty &&\r\n    refinedSpecialty.map((item) => ({\r\n      id: item.specialty.id,\r\n      value: item.id,\r\n      label: item.specialty.specialtyName,\r\n    }));\r\n  console.log({ state });\r\n  console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\r\n  const [createRegistration, { loadingMut, error }] = useMutation(\r\n    createRegistrationMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createRegistration({\r\n          variables: {\r\n            ...values,\r\n            candidate: makeCandVariableObject(values.candCode),\r\n            centerExamSession: { id: getCESID.id },\r\n            specialty: {\r\n              id: getSpecialtyID(specialties, centerExamSessionSpecialty).id,\r\n            },\r\n            aptitude: values.aptitude,\r\n            EPF1: values.EPF1,\r\n            EPF2: values.EPF2,\r\n            centerExamSessionSpecialty: {\r\n              id: centerExamSessionSpecialty,\r\n            },\r\n            candExamSession: candExamSessionCode(\r\n              values.candCode,\r\n              examID,\r\n              sessionID\r\n            ),\r\n            candRegistrationNumber:\r\n              exams &&\r\n              sessions &&\r\n              candRegistrationNumber(\r\n                centerNumber,\r\n                getExamName.examCode,\r\n                getSessionName.sessionName\r\n              ),\r\n          },\r\n        });\r\n        res &&\r\n          router.push({\r\n            pathname: \"/show/results/registrationReceipt\",\r\n            query: { id: res.data.createRegistration.id },\r\n          });\r\n        setNotify({\r\n          isOpen: true,\r\n          message: \"Inscription Réuissie\",\r\n          type: \"success\",\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Inscription aux Examens\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        name=\"candCode\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Code secret candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loadingMut}\r\n                        helpertext={<ErrorMessage name=\"candCode\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"La Spécialité\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"La Spécialité\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"aptitude\" />}\r\n                        required\r\n                        name=\"aptitude\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Aptitude en EPS\"\r\n                        options={[\r\n                          { value: \"A\", label: \"Apte\" },\r\n                          { value: \"I\", label: \"Inapte\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"EPF1\" />}\r\n                        required\r\n                        name=\"EPF1\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"EPF1 Théorie\"\r\n                        value={state.EPF1}\r\n                        options={[\r\n                          { value: \"\", label: \"Rien\" },\r\n                          { value: \"D\", label: \"Dessin\" },\r\n                          { value: \"E\", label: \"Education Menagere\" },\r\n                          { value: \"M\", label: \"Education Musicale\" },\r\n                          { value: \"G\", label: \"Grec\" },\r\n                          { value: \"L\", label: \"Latin\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"EPF2\" />}\r\n                        required\r\n                        name=\"EPF2\"\r\n                        value={state.EPF2}\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"EPF2 TP\"\r\n                        options={[\r\n                          { value: \"\", label: \"Rien\" },\r\n                          { value: \"C\", label: \"TP Chimie\" },\r\n                          { value: \"P\", label: \"TP Physique\" },\r\n                          { value: \"I\", label: \"TP Info\" },\r\n                          { value: \"S\", label: \"TP SVT\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Inscrire Candidat\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default ExamRegistration;\r\n"]},"metadata":{},"sourceType":"module"}