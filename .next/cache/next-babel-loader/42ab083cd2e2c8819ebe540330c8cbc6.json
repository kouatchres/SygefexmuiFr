{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\report\\\\CreateReport.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, Effect } from \"react\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\nimport Notification from \"../utils/Notification\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getSelectedObject, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getCESExaminerQuery } from \"../queries&Mutations&Functions/Queries\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  picStyled: {\n    paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\"),\n  centerNumber: Yup.number().min(0, \"Pas de note négative\").required(\"No du centre obligatoire\")\n});\n\nconst CreateReport = () => {\n  const classes = useStyles();\n  const initialValues = {\n    reportName: \"\",\n    reportImage: \"\",\n    centerNumber: \"\",\n    examinerCode: \"\"\n  };\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [state, setState, handleReactSelectChange] = useForm({\n    reportImage: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    centerNumber: \"\",\n    examinerCode: \"\"\n  });\n\n  const makeExaminerObject = profCodeValue => {\n    const storedProf = {\n      examinerCode: `${profCodeValue}`\n    };\n    return storedProf;\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState({\n      [name]: val\n    });\n  };\n\n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"ineximages\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/inex/reportImage/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const file = await res.json();\n    console.log(file);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      reportImage: file.secure_url\n    }));\n  };\n\n  const {\n    data: dataExams,\n    loading: loadingExams,\n    errExams\n  } = useQuery(getAllExamsQuery);\n  const getExams = dataExams && dataExams.exams;\n  console.log(getExams);\n  const removeExamName = getExams && getExams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n  const refinedExams = getExams && removeTypename(removeExamName);\n  const getExamOptions = getExams && getExams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n  const {\n    data: dataSession,\n    loading: loadingSession,\n    errSession\n  } = useQuery(getAllSessionsQuery);\n  const getSessions = dataSession && dataSession.sessions;\n  const refinedSessions = removeTypename(getSessions);\n  const getSessionOptions = getSessions && getSessions.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.sessionName\n  }));\n  const {\n    data: dataExamSession,\n    loading: loadingExamSession,\n    error: errExamSession\n  } = useQuery(getExamSessionQuery, {\n    skip: !state.examID || !state.sessionID,\n    variables: {\n      exam: refinedExams && getSelectedObject(refinedExams, state.examID),\n      session: refinedSessions && getSelectedObject(refinedSessions, state.sessionID)\n    }\n  });\n  console.log(dataExamSession);\n  const getExamSessions = dataExamSession && dataExamSession.examSessions;\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\n  const reducedES = refinedES && refinedES[0];\n  console.log(reducedES);\n  const {\n    data: dataCenter,\n    loading: loadingCenter,\n    errCenter\n  } = useQuery(getSingleCenterQuery, {\n    skip: !state.centerNumber,\n    variables: {\n      centerNumber: state.centerNumber\n    }\n  });\n  const getCenterByNumber = dataCenter && dataCenter.centerByNumber;\n  const newCenter = getCenterByNumber && removeTypename(getCenterByNumber);\n  console.log(newCenter);\n  const {\n    data: dataCES,\n    loading: loadingCES,\n    errorCES\n  } = useQuery(getSingleCenterExamSessionQuery, {\n    skip: !reducedES || !getCenterByNumber,\n    variables: {\n      examSession: reducedES && reducedES,\n      center: newCenter && newCenter\n    }\n  });\n  console.log(dataCES);\n  const getCenterExamSessionsByCode = dataCES && dataCES.centerExamSessionsByCode;\n  console.log(getCenterExamSessionsByCode); // remove typename from the object\n\n  const refinedCenterExamSessionsByCode = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode); // transform the array into a single object\n\n  const getCES = refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\n  console.log(getCES);\n  const {\n    data: dataExaminer,\n    loading: loadingExaminer,\n    error: errExaminer\n  } = useQuery(getCESExaminerQuery, {\n    skip: !getCES || !state.examinerCode,\n    variables: {\n      centerExamSession: getCES && getCES,\n      examiner: state.examinerCode && makeExaminerObject(state.examinerCode)\n    }\n  });\n  const getCESExaminers = dataExaminer && dataExaminer.getCenterExamSessionExaminers;\n  console.log(getCESExaminers);\n  const refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\n  const reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\n  console.log(reducedCESExaminer);\n  const [createReport, {\n    loading,\n    error\n  }] = useMutation(createNewReportMutation);\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createReport({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          reportImage: state.reportImage,\n          centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"Rapport créé avec success\",\n          type: \"success\"\n        });\n        resetForm({\n          values: \"\"\n        });\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, \"Nouvel Arrondissement\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      value: newCenter && newCenter.centerCode,\n      name: \"centerName\",\n      type: \"text\",\n      label: \" Libell\\xE9 du centre\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      value: state.centerNumber,\n      onChange: handleChange,\n      name: \"centerNumber\",\n      type: \"number\",\n      label: \"Numero du centre\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 37\n        }\n      }),\n      label: \"Choisir ta photo\",\n      name: \"file\",\n      type: \"file\",\n      onChange: uploadFile,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getSessionOptions,\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      placeholder: \"La session\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getExamOptions,\n      onChange: event => {\n        handleSelectChange(event, \"regionID\");\n      },\n      name: \"examID\",\n      placeholder: \"L'Examen\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"reportName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      name: \"reportName\",\n      type: \"text\",\n      label: \"Titre du Rapport\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examinerCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      onChange: handleChange,\n      value: state.examinerCode,\n      name: \"examinerCode\",\n      type: \"text\",\n      label: \"Code Secret de l'examinateur\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 23\n      }\n    }), __jsx(\"div\", {\n      className: classes.picStyled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 23\n      }\n    }, !state.reportImage ? __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 27\n      }\n    }) : __jsx(\"img\", {\n      style: {\n        height: \"15rem\",\n        width: \"15rem\",\n        display: \"grid\",\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        placeItems: \"center\",\n        borderRadius: \"0.5rem\"\n      },\n      src: state.reportImage,\n      alt: \"Upload image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 27\n      }\n    })), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 55\n      }\n    }), \"Valid\", isSubmitting ? \"Nouveau rapport en création\" : \"Créer Rapport\")))))));\n  });\n};\n\nexport default CreateReport;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/report/CreateReport.jsx"],"names":["React","useState","Effect","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useMutation","useApolloClient","useQuery","Notification","Yup","useForm","createNewReportMutation","getSelectedObject","removeTypename","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getCESExaminerQuery","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","picStyled","paddingLeft","width","centerAll","validationSchema","object","shape","reportName","string","required","examID","sessionID","examinerCode","centerNumber","number","min","CreateReport","classes","initialValues","reportImage","notify","setNotify","isOpen","message","type","state","setState","handleReactSelectChange","makeExaminerObject","profCodeValue","storedProf","handleChange","e","name","value","target","val","parseInt","uploadFile","files","data","FormData","append","res","fetch","method","body","file","json","console","log","secure_url","dataExams","loading","loadingExams","errExams","getExams","exams","removeExamName","map","examName","others","refinedExams","getExamOptions","item","id","label","dataSession","loadingSession","errSession","getSessions","sessions","refinedSessions","getSessionOptions","sessionName","dataExamSession","loadingExamSession","error","errExamSession","skip","variables","exam","session","getExamSessions","examSessions","refinedES","reducedES","dataCenter","loadingCenter","errCenter","getCenterByNumber","centerByNumber","newCenter","dataCES","loadingCES","errorCES","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessionsByCode","getCES","dataExaminer","loadingExaminer","errExaminer","centerExamSession","examiner","getCESExaminers","getCenterExamSessionExaminers","refinedCESExaminer","reducedCESExaminer","createReport","values","setSubmitting","resetForm","centerExamSessionExaminer","setTimeout","JSON","stringify","submitForm","isSubmitting","centerCode","event","handleSelectChange","backgroundSize","backgroundPosition","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState,Effect } from \"react\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getCESExaminerQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  picStyled: {\r\n    paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\r\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\r\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\r\n\r\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\"),\r\n  centerNumber: Yup.number()\r\n    .min(0, \"Pas de note négative\")\r\n    .required(\"No du centre obligatoire\"),\r\n});\r\n\r\nconst CreateReport = () => {\r\n  const classes= useStyles() \r\n   const initialValues = {\r\n    reportName: \"\",\r\n    reportImage: \"\",\r\n    centerNumber: \"\",\r\n    examinerCode: \"\",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    reportImage: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    centerNumber: \"\",\r\n    examinerCode: \"\",\r\n  });\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"ineximages\");\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/inex/reportImage/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const file = await res.json();\r\n    console.log(file);\r\n    setState({ ...state, reportImage: file.secure_url });\r\n  };\r\n\r\n  const { data: dataExams, loading: loadingExams, errExams } = useQuery(\r\n    getAllExamsQuery\r\n  );\r\n\r\n  const getExams = dataExams && dataExams.exams;\r\n  console.log(getExams);\r\n  const removeExamName =\r\n    getExams && getExams.map(({ examName, ...others }) => others);\r\n  const refinedExams = getExams && removeTypename(removeExamName);\r\n  const getExamOptions =\r\n    getExams &&\r\n    getExams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const { data: dataSession, loading: loadingSession, errSession } = useQuery(\r\n    getAllSessionsQuery\r\n  );\r\n\r\n  const getSessions = dataSession && dataSession.sessions;\r\n  const refinedSessions = removeTypename(getSessions);\r\n  const getSessionOptions =\r\n    getSessions &&\r\n    getSessions.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.sessionName,\r\n    }));\r\n\r\n  const {\r\n    data: dataExamSession,\r\n    loading: loadingExamSession,\r\n    error: errExamSession,\r\n  } = useQuery(getExamSessionQuery, {\r\n    skip: !state.examID || !state.sessionID,\r\n    variables: {\r\n      exam: refinedExams && getSelectedObject(refinedExams, state.examID),\r\n      session:\r\n        refinedSessions && getSelectedObject(refinedSessions, state.sessionID),\r\n    },\r\n  });\r\n\r\n  console.log(dataExamSession);\r\n  const getExamSessions = dataExamSession && dataExamSession.examSessions;\r\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n  const reducedES = refinedES && refinedES[0];\r\n  console.log(reducedES);\r\n\r\n  const { data: dataCenter, loading: loadingCenter, errCenter } = useQuery(\r\n    getSingleCenterQuery,\r\n    {\r\n      skip: !state.centerNumber,\r\n      variables: {\r\n        centerNumber: state.centerNumber,\r\n      },\r\n    }\r\n  );\r\n\r\n  const getCenterByNumber = dataCenter && dataCenter.centerByNumber;\r\n  const newCenter = getCenterByNumber && removeTypename(getCenterByNumber);\r\n  console.log(newCenter);\r\n\r\n  const { data: dataCES, loading: loadingCES, errorCES } = useQuery(\r\n    getSingleCenterExamSessionQuery,\r\n    {\r\n      skip: !reducedES || !getCenterByNumber,\r\n      variables: {\r\n        examSession: reducedES && reducedES,\r\n        center: newCenter && newCenter,\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(dataCES);\r\n  const getCenterExamSessionsByCode =\r\n    dataCES && dataCES.centerExamSessionsByCode;\r\n  console.log(getCenterExamSessionsByCode);\r\n  // remove typename from the object\r\n  const refinedCenterExamSessionsByCode =\r\n    getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // transform the array into a single object\r\n  const getCES =\r\n    refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\r\n  console.log(getCES);\r\n\r\n  const {\r\n    data: dataExaminer,\r\n    loading: loadingExaminer,\r\n    error: errExaminer,\r\n  } = useQuery(getCESExaminerQuery, {\r\n    skip: !getCES || !state.examinerCode,\r\n    variables: {\r\n      centerExamSession: getCES && getCES,\r\n      examiner: state.examinerCode && makeExaminerObject(state.examinerCode),\r\n    },\r\n  });\r\n\r\n  const getCESExaminers =\r\n    dataExaminer && dataExaminer.getCenterExamSessionExaminers;\r\n  console.log(getCESExaminers);\r\n  const refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\r\n  const reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\r\n  console.log(reducedCESExaminer);\r\n\r\n  const [createReport, { loading, error }] = useMutation(\r\n    createNewReportMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createReport({\r\n          variables: {\r\n            ...values,\r\n            reportImage: state.reportImage,\r\n            centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n  setNotify({\r\n    isOpen: true,\r\n    message: \"Rapport créé avec success\",\r\n    type: \"success\",\r\n  });\r\n          resetForm({ values: \"\" });\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm,isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Nouvel Arrondissement\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n\r\n\r\n                        component={TextField}\r\n                        value={newCenter && newCenter.centerCode}\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        label=\" Libellé du centre\"\r\n                        disabled\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n\r\n\r\n                        component={TextField}\r\n                        value={state.centerNumber}\r\n                        onChange={handleChange}\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        label=\"Numero du centre\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"file\" />}\r\n\r\n                        label=\"Choisir ta photo\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={uploadFile}\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n\r\n\r\n                        component={Select}\r\n                        options={getSessionOptions}\r\n                      onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        placeholder=\"La session\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n\r\n\r\n                        component={Select}\r\n                        options={getExamOptions}\r\n                      onChange={(event) => {\r\n                          handleSelectChange(event, \"regionID\");\r\n                        }}\r\n                        name=\"examID\"\r\n                        placeholder=\"L'Examen\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"reportName\" />}\r\n\r\n\r\n                        component={TextField}\r\n                        name=\"reportName\"\r\n                        type=\"text\"\r\n                        label=\"Titre du Rapport\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examinerCode\" />}\r\n\r\n                        component={TextField}\r\n                        onChange={handleChange}\r\n                        value={state.examinerCode}\r\n                        name=\"examinerCode\"\r\n                        type=\"text\"\r\n                        label=\"Code Secret de l'examinateur\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <div className={classes.picStyled}>\r\n                        {!state.reportImage ? (\r\n                          <CircularProgress />\r\n                        ) : (\r\n                          <img\r\n                            style={{\r\n                              height: \"15rem\",\r\n                              width: \"15rem\",\r\n                              display: \"grid\",\r\n                              backgroundSize: \"contain\",\r\n                              backgroundPosition: \"center\",\r\n                              placeItems: \"center\",\r\n                              borderRadius: \"0.5rem\",\r\n                            }}\r\n                            src={state.reportImage}\r\n                            alt=\"Upload image\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        Valid\r\n                        {isSubmitting\r\n                          ? \"Nouveau rapport en création\"\r\n                          : \"Créer Rapport\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}