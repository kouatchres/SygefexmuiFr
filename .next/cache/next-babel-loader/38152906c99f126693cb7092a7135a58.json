{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\RegionList.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport { deleteRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getDivisionsOfARegionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport Notification from \"../utils/Notification\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport NewRegionMui from \"./NewRegionMui\";\nimport UpdateRegion from \"./UpdateRegion\";\nconst useStyles = makeStyles({\n  stickyActionsColumn: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& td:first-child, th:first-child\": {\n          backgroundColor: \"#f5f5f5\",\n          position: \"sticky\",\n          left: 0,\n          zIndex: 10\n        },\n        \"& th:first-child\": {\n          zIndex: 10\n        }\n      }\n    }\n  },\n  stickyHeader: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& th\": {\n          backgroundColor: \"#5aa193\",\n          position: \"sticky\",\n          top: \"4rem\",\n          zIndex: 10\n        },\n        \"& th\": {\n          zIndex: 10\n        }\n      }\n    }\n  }\n});\n\nconst RegionList = () => {\n  const client = useApolloClient();\n  const {\n    0: isAddPopupOpen,\n    1: setIsAddPopupOpen\n  } = useState(false);\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const {\n    0: deleteConfirmDialog,\n    1: setDeleteConfirmDialog\n  } = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\"\n    }, {\n      field: \"id\",\n      title: \"ID\"\n    }],\n    data: []\n  });\n\n  const loadRegionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllRegionsQuery\n    });\n    {\n      error && __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      });\n    }\n\n    const {\n      regions\n    } = _objectSpread({}, data);\n\n    console.log(regions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: regions\n    }));\n  };\n\n  useEffect(() => {\n    loadRegionData();\n  }, []);\n\n  const loadDivisionsOfARegionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !deleteConfirmDialog.id,\n      query: {\n        getDivisionsOfARegionQuery\n      },\n      variables: {\n        id: deleteConfirmDialog.id\n      }\n    });\n\n    const {\n      region\n    } = _objectSpread({}, data);\n\n    const {\n      division\n    } = _objectSpread({}, region);\n\n    console.log(region);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: region\n    }));\n  };\n\n  useEffect(() => {\n    loadDivisionsOfARegionData();\n  }, [deleteConfirmDialog.id]);\n\n  const updateCache = (cache, payload) => {\n    // manually update the cache so that the data are all the same\n    // 1. read the cache for the data we want\n    const data = cache && cache.readQuery({\n      query: getAllRegionsQuery\n    });\n    cache && cache.writeQuery({\n      query: getAllRegionsQuery,\n      data: {\n        regions: data.regions.filter(item => item.id !== payload.data.deleteRegion.id)\n      }\n    });\n  };\n\n  const handleAddPopupClose = () => {\n    setIsAddPopupOpen(false);\n  };\n\n  const handleUpdatePopupClose = () => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const handleDeleteConfirmDialog = () => {\n    setDeleteConfirmDialog(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const [deleteRegion, {\n    loading\n  }] = useMutation(deleteRegionMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    },\n    update: updateCache()\n  });\n  const actions = [{\n    icon: () => __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Ajouter Nouvelle Région\",\n    isFreeAction: true,\n    onClick: () => {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Modifier Région\",\n    onClick: (event, rowData) => {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: () => __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Supprimer région\",\n    onClick: (event, rowData) => setDeleteConfirmDialog({\n      id: rowData.id,\n      isOpen: true,\n      title: \"Etes-vous sur de suprimer cette inofrmation\",\n      subtitle: \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\n      onConfirm: () => {\n        rowData.id && deleteRegion(rowData.id);\n        setNotify({\n          isOpen: true,\n          message: \"Region Supprimee avec success\",\n          type: \"error\"\n        });\n        console.log(\"just after the delete process\");\n      }\n    })\n  }];\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    icons: tableIcons,\n    title: \"Liste de R\\xE9gions\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouvelle R\\xE9gion\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, __jsx(NewRegionMui, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }), __jsx(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateRegion, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RegionList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/RegionList.jsx"],"names":["React","useEffect","useState","MaterialTable","Paper","makeStyles","useApolloClient","useMutation","getAllRegionsQuery","tableIcons","AddPopup","UpdatePopup","ConfirmDialog","deleteRegionMutation","getDivisionsOfARegionQuery","Notification","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","NewRegionMui","UpdateRegion","useStyles","stickyActionsColumn","backgroundColor","position","left","zIndex","stickyHeader","top","RegionList","client","isAddPopupOpen","setIsAddPopupOpen","updatePopupState","setUpdatePopupState","isOpen","id","notify","setNotify","message","type","deleteConfirmDialog","setDeleteConfirmDialog","title","subtitle","state","setState","columns","field","data","loadRegionData","error","query","regions","console","log","prev","loadDivisionsOfARegionData","skip","variables","region","division","updateCache","cache","payload","readQuery","writeQuery","filter","item","deleteRegion","handleAddPopupClose","handleUpdatePopupClose","handleDeleteConfirmDialog","loading","update","actions","icon","tooltip","isFreeAction","onClick","event","rowData","onConfirm","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\nimport { deleteRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getDivisionsOfARegionQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport NewRegionMui from \"./NewRegionMui\";\r\nimport UpdateRegion from \"./UpdateRegion\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickyActionsColumn: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& td:first-child, th:first-child\": {\r\n          backgroundColor: \"#f5f5f5\",\r\n          position: \"sticky\",\r\n          left: 0,\r\n          zIndex: 10,\r\n        },\r\n        \"& th:first-child\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& th\": {\r\n          backgroundColor: \"#5aa193\",\r\n          position: \"sticky\",\r\n          top: \"4rem\",\r\n          zIndex: 10,\r\n        },\r\n        \"& th\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst RegionList = () => {\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n      },\r\n      { field: \"id\", title: \"ID\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadRegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    {\r\n      error && <Error error={error} />;\r\n    }\r\n    const { regions } = { ...data };\r\n    console.log(regions);\r\n    setState((prev) => ({ ...prev, data: regions }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n\r\n  const loadDivisionsOfARegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !deleteConfirmDialog.id,\r\n      query: { getDivisionsOfARegionQuery },\r\n      variables: { id: deleteConfirmDialog.id },\r\n    });\r\n\r\n    const { region } = { ...data };\r\n    const { division } = { ...region };\r\n    console.log(region);\r\n    setState((prev) => ({ ...prev, data: region }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionsOfARegionData();\r\n  }, [deleteConfirmDialog.id]);\r\n\r\n  const updateCache = (cache, payload) => {\r\n    // manually update the cache so that the data are all the same\r\n    // 1. read the cache for the data we want\r\n    const data = cache && cache.readQuery({ query: getAllRegionsQuery });\r\n    cache &&\r\n      cache.writeQuery({\r\n        query: getAllRegionsQuery,\r\n        data: {\r\n          regions: data.regions.filter(\r\n            (item) => item.id !== payload.data.deleteRegion.id\r\n          ),\r\n        },\r\n      });\r\n  };\r\n  const handleAddPopupClose = () => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const [deleteRegion, { loading }] = useMutation(deleteRegionMutation, {\r\n    variables: { id: deleteConfirmDialog.id },\r\n    update: updateCache(),\r\n  });\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Ajouter Nouvelle Région\",\r\n      isFreeAction: true,\r\n      onClick: () => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifier Région\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer région\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteRegion(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Region Supprimee avec success\",\r\n              type: \"error\",\r\n            });\r\n            console.log(\"just after the delete process\");\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Liste de Régions\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n      />\r\n      <AddPopup\r\n        title=\"Nouvelle Région\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <NewRegionMui />\r\n      </AddPopup>\r\n      <ConfirmDialog\r\n        title={deleteConfirmDialog.title}\r\n        subtitle={deleteConfirmDialog.subtitle}\r\n        isOpen={deleteConfirmDialog.isOpen}\r\n        onClose={handleDeleteConfirmDialog}\r\n        onConfirm={deleteConfirmDialog.onConfirm}\r\n      />\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n      <UpdatePopup\r\n        // title={updatePopupState.id}\r\n        isOpen={updatePopupState.isOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateRegion id={updatePopupState.id} />\r\n      </UpdatePopup>\r\n    </Paper>\r\n  );\r\n};\r\nexport default RegionList;\r\n"]},"metadata":{},"sourceType":"module"}