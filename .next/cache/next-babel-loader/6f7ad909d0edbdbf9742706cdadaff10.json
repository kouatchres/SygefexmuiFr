{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\candidate\\\\GetCenterCandDetailsInfo.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllPhasesQuery, getAllRanksOfAnExamPhaseQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar GetCenterCandDetailsInfo = function GetCenterCandDetailsInfo() {\n  _s();\n\n  var classes = useStyles();\n  var router = useRouter();\n  var client = useApolloClient();\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var initialValues = {// centerNumber: \"\",\n    // examID: \"\",\n    // sessionID: \",\n  };\n\n  var _useState2 = useState({\n    centerNumber: \"\",\n    exams: [],\n    sessions: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\"\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var centerExamSessions = state.centerExamSessions,\n      centerNumber = state.centerNumber,\n      examID = state.examID,\n      phaseID = state.phaseID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      phases = state.phases,\n      ranks = state.ranks,\n      phaseRanks = state.phaseRanks,\n      examSessions = state.examSessions,\n      sessions = state.sessions,\n      centerByNumber = state.centerByNumber;\n\n  var makeExaminerObject = function makeExaminerObject(profCodeValue) {\n    var storedProf = {\n      examinerCode: \"\".concat(profCodeValue)\n    };\n    return storedProf;\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, data, loading, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              data = _yield$client$query3.data;\n              loading = _yield$client$query3.loading;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              loading && __jsx(CircularProgress, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 18\n                }\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions[0]\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESData();\n  }, [centerByNumber, examSessions]);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(values, _ref7) {\n        var setSubmitting, resetForm;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                setSubmitting = _ref7.setSubmitting, resetForm = _ref7.resetForm;\n                refinedCESS && Router.push({\n                  pathname: '/show/results/centerResults/centerResultsForSeries',\n                  query: {\n                    id: centerExamSessions\n                  }\n                });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x, _x2) {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, function (_ref9) {\n    var submitForm = _ref9.submitForm,\n        isSubmitting = _ref9.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, \"Candidats inscrits a l'examen\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"Examen\",\n      component: Select,\n      placeholder: \"Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 42\n      }\n    }), isSubmitting ? \"Inscription en cours\" : \"S'inscrire au centre\")))))));\n  });\n};\n\n_s(GetCenterCandDetailsInfo, \"PTxOnNVVH3mtk205+sHmYbxb3EA=\", false, function () {\n  return [useStyles, useRouter, useApolloClient];\n});\n\n_c = GetCenterCandDetailsInfo;\nexport default GetCenterCandDetailsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCenterCandDetailsInfo\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/candidate/GetCenterCandDetailsInfo.jsx"],"names":["React","useState","useEffect","Error","Yup","useRouter","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","createCenterExamSessionExaminerMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllPhasesQuery","getAllRanksOfAnExamPhaseQuery","removeTypename","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","borderRadius","borderBottom","borderTop","titleStyled","centerAll","minWidth","validationSchema","object","shape","GetCenterCandDetailsInfo","classes","router","client","isOpen","message","type","notify","setNotify","initialValues","centerNumber","exams","sessions","centerByNumber","examSessions","centerExamSessions","state","setState","examID","phaseID","sessionID","phases","ranks","phaseRanks","makeExaminerObject","profCodeValue","storedProf","examinerCode","loadExamData","query","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","loading","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","error","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","values","setSubmitting","resetForm","refinedCESS","Router","push","pathname","setTimeout","JSON","stringify","res","submitForm","isSubmitting","centerCode","handleInputChange","event","handleSelectChange"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,qBAA7C;AACA,SAASC,uCAAT,QAAwD,0CAAxD;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,+BAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,6BAPF,QAQO,wCARP;AAUA,SACEC,cADF,EAEEC,iBAFF,QAGO,0CAHP;AAIA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,IAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX,CAIJ;;AAJI,GADqB;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GARgB;AAc3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,OAAO,EAAE,MADC;AAEVG,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,OAAO,EAAE,MAHC;AAIVC,IAAAA,QAAQ,EAAE,KAJA;AAKVC,IAAAA,YAAY,EAAC,QALH;AAMVC,IAAAA,YAAY,EAAE,sBANJ;AAOVC,IAAAA,SAAS,EAAE;AAPD,GAde;AAwB3BC,EAAAA,WAAW,EAAE;AACXZ,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GAxBc;AA6B3BU,EAAAA,SAAS,EAAE;AACTb,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGT;AACAW,IAAAA,QAAQ,EAAE,KAJD,CAKT;;AALS;AA7BgB,CAAD,CAA5B;AAsCA,IAAMC,gBAAgB,GAAG9C,GAAG,CAAC+C,MAAJ,GAAaC,KAAb,CAAmB,CAC1C;AACA;AACA;AACA;AAJ0C,CAAnB,CAAzB;;AAOA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AAAA;;AACrC,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,MAAMsB,MAAM,GAAElD,SAAS,EAAvB;AACA,MAAMmD,MAAM,GAAGpC,eAAe,EAA9B;;AAHqC,kBAKTnB,QAAQ,CAAC;AACnCwD,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CALC;AAAA,MAK9BC,MAL8B;AAAA,MAKtBC,SALsB;;AAUrC,MAAMC,aAAa,GAAG,CACpB;AACA;AACA;AAHoB,GAAtB;;AAVqC,mBAeX7D,QAAQ,CAAC;AACjC8D,IAAAA,YAAY,EAAE,EADmB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,cAAc,EAAE,EAJiB;AAKjCC,IAAAA,YAAY,EAAE,EALmB;AAMjCC,IAAAA,kBAAkB,EAAE;AANa,GAAD,CAfG;AAAA,MAe9BC,KAf8B;AAAA,MAevBC,QAfuB;;AAAA,MAwBnCF,kBAxBmC,GAoCjCC,KApCiC,CAwBnCD,kBAxBmC;AAAA,MAyBnCL,YAzBmC,GAoCjCM,KApCiC,CAyBnCN,YAzBmC;AAAA,MA0BnCQ,MA1BmC,GAoCjCF,KApCiC,CA0BnCE,MA1BmC;AAAA,MA2BnCC,OA3BmC,GAoCjCH,KApCiC,CA2BnCG,OA3BmC;AAAA,MA4BnCC,SA5BmC,GAoCjCJ,KApCiC,CA4BnCI,SA5BmC;AAAA,MA6BnCT,KA7BmC,GAoCjCK,KApCiC,CA6BnCL,KA7BmC;AAAA,MA8BnCU,MA9BmC,GAoCjCL,KApCiC,CA8BnCK,MA9BmC;AAAA,MA+BnCC,KA/BmC,GAoCjCN,KApCiC,CA+BnCM,KA/BmC;AAAA,MAgCnCC,UAhCmC,GAoCjCP,KApCiC,CAgCnCO,UAhCmC;AAAA,MAiCnCT,YAjCmC,GAoCjCE,KApCiC,CAiCnCF,YAjCmC;AAAA,MAkCnCF,QAlCmC,GAoCjCI,KApCiC,CAkCnCJ,QAlCmC;AAAA,MAmCnCC,cAnCmC,GAoCjCG,KApCiC,CAmCnCH,cAnCmC;;AAsCrC,MAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,aAAD,EAAmB;AAC5C,QAAMC,UAAU,GAAG;AACjBC,MAAAA,YAAY,YAAKF,aAAL;AADK,KAAnB;AAGA,WAAOC,UAAP;AACD,GALD;;AAOA,MAAME,YAAY;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIzB,MAAM,CAAC0B,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAE1D;AAD2B,eAAb,CADJ;;AAAA;AAAA;AACX2D,cAAAA,IADW,uBACXA,IADW;AAKbC,cAAAA,QALa,GAKFD,IAAI,IAAIA,IAAI,CAACnB,KALX;AAMnBqB,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACMG,cAAAA,YAPa,GAOEH,QAAQ,IAAItD,cAAc,CAACsD,QAAD,CAP5B;AAQnBd,cAAAA,QAAQ,CAAC,UAACkB,IAAD;AAAA,uDACJA,IADI;AAEPxB,kBAAAA,KAAK,EAAEuB;AAFA;AAAA,eAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZN,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaA,MAAMQ,cAAc,GAClBzB,KAAK,IAAIA,KAAK,CAAC0B,GAAN,CAAU;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAgBC,MAAhB;;AAAA,WAA6BA,MAA7B;AAAA,GAAV,CADX;;AAGA,MAAMC,WAAW,GAAG7B,KAAK,sBACpBjC,iBAAiB,CAAC0D,cAAD,EAAiBlB,MAAjB,CADG,CAAzB;;AAGA,MAAMuB,eAAe,GACnB9B,KAAK,IAAIA,KAAK,CAAC0B,GAAN,CAAU,UAACK,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACJ;AAA9B,KAAX;AAAA,GAAV,CADX;;AAGA,MAAMQ,eAAe;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACC3C,MAAM,CAAC0B,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAEzD;AAD2B,eAAb,CADD;;AAAA;AAAA;AACd0D,cAAAA,IADc,wBACdA,IADc;AAKhBiB,cAAAA,WALgB,GAKFjB,IAAI,IAAIA,IAAI,CAAClB,QALX;AAMhBoC,cAAAA,eANgB,GAMED,WAAW,IAAItE,cAAc,CAACsE,WAAD,CAN/B;AAOtB9B,cAAAA,QAAQ,CAAC,UAACkB,IAAD;AAAA,uDACJA,IADI;AAEPvB,kBAAAA,QAAQ,EAAEoC;AAFH;AAAA,eAAD,CAAR;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfF,eAAe;AAAA;AAAA;AAAA,KAArB;;AAYAd,EAAAA,OAAO,CAACiB,GAAR,CAAYjC,KAAZ;;AAEA,MAAMkC,cAAc,GAAGtC,QAAQ,sBAC1BlC,iBAAiB,CAACkC,QAAD,EAAWQ,SAAX,CADS,CAA/B;;AAIA,MAAM+B,kBAAkB,GACtBvC,QAAQ,IACRA,QAAQ,CAACyB,GAAT,CAAa,UAACK,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACU;AAA9B,KAAX;AAAA,GAAb,CAFF;AAIAvG,EAAAA,SAAS,CAAC,YAAM;AACd+E,IAAAA,YAAY;AACZkB,IAAAA,eAAe;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKAd,EAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ;;AAEA,MAAMG,mBAAmB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BrB,cAAAA,OAAO,CAACiB,GAAR,CAAY,4BAAZ;AAD0B;AAAA,qBAEM9C,MAAM,CAAC0B,KAAP,CAAa;AAC3CyB,gBAAAA,IAAI,EAAE,CAACpC,MAAD,IAAW,CAACE,SADyB;AAE3CS,gBAAAA,KAAK,EAAE3D,mBAFoC;AAG3CqF,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,IAAI,EAAEtC,MAAM,IAAIsB,WADP;AAETiB,kBAAAA,OAAO,EAAErC,SAAS,IAAI8B;AAFb;AAHgC,eAAb,CAFN;;AAAA;AAAA;AAElBpB,cAAAA,IAFkB,wBAElBA,IAFkB;AAEZ4B,cAAAA,OAFY,wBAEZA,OAFY;AAW1B1B,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACM6B,cAAAA,eAZoB,GAYF7B,IAAI,IAAIA,IAAI,CAAChB,YAZX;AAapB8C,cAAAA,SAboB,GAaRD,eAAe,IAAIlF,cAAc,CAACkF,eAAD,CAbzB;AAcpBE,cAAAA,SAdoB,GAcRD,SAAS,IAAIA,SAAS,CAAC,CAAD,CAdd;AAe1B5B,cAAAA,OAAO,CAACC,GAAR,CAAY4B,SAAZ;AAEEH,cAAAA,OAAO,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX;AAEFzC,cAAAA,QAAQ,CAAC,UAACkB,IAAD;AAAA,uDACJA,IADI;AAEPrB,kBAAAA,YAAY,EAAE+C;AAFP;AAAA,eAAD,CAAR;;AAnB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBR,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAwBArB,EAAAA,OAAO,CAACiB,GAAR,CAAYjC,KAAZ;AAEAnE,EAAAA,SAAS,CAAC,YAAM;AACdwG,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACnC,MAAD,EAASE,SAAT,CAFM,CAAT;;AAIA,MAAM0C,cAAc;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE3D,MAAM,CAAC0B,KAAP,CAAa;AAClCyB,gBAAAA,IAAI,EAAE,CAAC5C,YAD2B;AAElCmB,gBAAAA,KAAK,EAAEvD,oBAF2B;AAGlCiF,gBAAAA,SAAS,EAAE;AAAE7C,kBAAAA,YAAY,EAAEA;AAAhB;AAHuB,eAAb,CADF;;AAAA;AAAA;AACboB,cAAAA,IADa,wBACbA,IADa;AAAA,wCAOWA,IAPX,GAObjB,cAPa,SAObA,cAPa;AAQfkD,cAAAA,iBARe,GAQKtF,cAAc,CAACoC,cAAD,CARnB;AASrBmB,cAAAA,OAAO,CAACC,GAAR,CAAY8B,iBAAZ;AACA9C,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBH,kBAAAA,cAAc,EAAEkD;AAAxC;AAAA,eAAD,CAAR;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdD,cAAc;AAAA;AAAA;AAAA,KAApB;;AAaAjH,EAAAA,SAAS,CAAC,YAAM;AACdiH,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACpD,YAAD,CAFM,CAAT;AAGAsB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,cAAZ;;AAEA,MAAMmD,WAAW;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY7D,MAAM,CAAC0B,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAExD,+BADkC;AAEzCkF,gBAAAA,SAAS,EAAE;AACTU,kBAAAA,WAAW,EAAEnD,YAAY,IAAIA,YADpB;AAEToD,kBAAAA,MAAM,EAAErD,cAAc,IAAIA;AAFjB;AAF8B,eAAb,CADZ;;AAAA;AAAA;AACVsD,cAAAA,KADU,wBACVA,KADU;AACHrC,cAAAA,IADG,wBACHA,IADG;AASlBE,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACMsC,cAAAA,2BAVY,GAUkBtC,IAAI,IAAIA,IAAI,CAACuC,wBAV/B;AAWlBrC,cAAAA,OAAO,CAACC,GAAR,CAAYmC,2BAAZ;AACME,cAAAA,yBAZY,GAahBF,2BAA2B,IAC3B3F,cAAc,CAAC2F,2BAAD,CAdE;AAelBnD,cAAAA,QAAQ,CAAC,UAACkB,IAAD;AAAA,uDACJA,IADI;AAEPpB,kBAAAA,kBAAkB,EAAEuD,yBAAyB,CAAC,CAAD;AAFtC;AAAA,eAAD,CAAR;;AAfkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXN,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAqBAnH,EAAAA,SAAS,CAAC,YAAM;AACdmH,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACnD,cAAD,EAAiBC,YAAjB,CAFM,CAAT;AAKF,SACI,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,aAAa,EAAEL,aAFjB;AAGE,IAAA,gBAAgB,EAAEZ,gBAHpB;AAIE,IAAA,QAAQ;AAAA,2EAAE,kBAAO0E,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,aAAjB,SAAiBA,aAAjB,EAAgCC,SAAhC,SAAgCA,SAAhC;AACPC,gBAAAA,WAAW,IAAIC,MAAM,CAACC,IAAP,CAAY;AACzBC,kBAAAA,QAAQ,EAAE,oDADe;AAE3BhD,kBAAAA,KAAK,EAAE;AAAEe,oBAAAA,EAAE,EAAE7B;AAAN;AAFoB,iBAAZ,CAAf;AAID+D,gBAAAA,UAAU,CAAC,YAAM;AACf9C,kBAAAA,OAAO,CAACC,GAAR,CAAY8C,IAAI,CAACC,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAvC,kBAAAA,OAAO,CAACC,GAAR,CAAYgD,GAAZ;AACAR,kBAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,kBAAAA,aAAa,CAAC,KAAD,CAAb;AACD,iBALS,EAKP,GALO,CAAV;;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBG,iBAAkC;AAAA,QAA/BU,UAA+B,SAA/BA,UAA+B;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;AACjC,WACE;AAAK,MAAA,SAAS,EAAElF,OAAO,CAACN,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEM,OAAO,CAACb,UAA1B;AAAsC,MAAA,SAAS,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAW+F,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAElF,OAAO,CAACN,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEM,OAAO,CAACN,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAEM,OAAO,CAACP,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADF,CADF,EAcE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,EAAf;AAAmB,MAAA,SAAS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,EAAV;AAAc,MAAA,IAAI,MAAlB;AAAmB,MAAA,SAAS,EAAEO,OAAO,CAACN,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE1C,SAHb;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EACF4D,cAAc,IAAIA,cAAc,CAACuE,UAAlC,IAAiD,EAPrD;AASE,MAAA,OAAO,EAAC,UATV;AAUE,MAAA,QAAQ,EAAED,YAVZ;AAWE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAElI,SAHb;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EAAGyD,YAAY,IAAIA,YAAjB,IAAkC,CAN3C;AAOE,MAAA,QAAQ,EAAE2E,iBAPZ;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,QAAQ,EAAEF,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA0BE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,SAAS,EAAEjI,MAJb;AAKE,MAAA,WAAW,EAAC,QALd;AAME,MAAA,QAAQ,EAAE,kBAACoI,KAAD,EAAW;AACnBC,QAAAA,kBAAkB,CAACD,KAAD,EAAQ,QAAR,CAAlB;AACD,OARH;AASE,MAAA,QAAQ,EAAEH,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAE1C,eAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAyCE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,EAAE,kBAAC6C,KAAD,EAAW;AACnBC,QAAAA,kBAAkB,CAACD,KAAD,EAAQ,WAAR,CAAlB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,WALP;AAME,MAAA,KAAK,EAAC,YANR;AAOE,MAAA,SAAS,EAAEpI,MAPb;AAQE,MAAA,WAAW,EAAC,YARd;AASE,MAAA,QAAQ,EAAEiI,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAEhC,kBAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EAyDE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEgC,YAAlB;AAAgC,MAAA,OAAO,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEGA,YAAY,GACT,sBADS,GAET,sBAJN,CAzDF,CADF,CAdF,CAFF,CADF,CADF,CADF;AA0FD,GA5GH,CADJ;AAgHC,CA1RD;;GAAMnF,wB;UACYpB,S,EACF5B,S,EACCe,e;;;KAHXiC,wB;AA2RN,eAAeA,wBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllPhasesQuery,\r\n  getAllRanksOfAnExamPhaseQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    borderRadius:\"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst GetCenterCandDetailsInfo = () => {\r\n  const classes = useStyles();\r\n  const router= useRouter()\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    // centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState] = useState({\r\n    centerNumber: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n  });\r\n  const {\r\n    centerExamSessions,\r\n    centerNumber,\r\n    examID,\r\n    phaseID,\r\n    sessionID,\r\n    exams,\r\n    phases,\r\n    ranks,\r\n    phaseRanks,\r\n    examSessions,\r\n    sessions,\r\n    centerByNumber,\r\n  } = state;\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n    {\r\n      loading && <CircularProgress />;\r\n    }\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions[0],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerByNumber, examSessions]);\r\n\r\n\r\nreturn(\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n         refinedCESS && Router.push({\r\n           pathname: '/show/results/centerResults/centerResultsForSeries',\r\n         query: { id: centerExamSessions }\r\n         });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\nCandidats inscrits a l'examen\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"Examen\"\r\n                        component={Select}\r\n                        placeholder=\"Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      \r\n                  \r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting \r\n                          ? \"Inscription en cours\"\r\n                          : \"S'inscrire au centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default GetCenterCandDetailsInfo;\r\n"]},"metadata":{},"sourceType":"module"}