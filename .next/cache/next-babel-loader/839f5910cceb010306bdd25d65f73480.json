{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { concat } from \"apollo-link\";\n\nconst uniqueCodeGen = keyLength => {\n  var i,\n      key = \"\",\n      //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  characters = \"abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n\n  for (i = 0; i < keyLength; i++) {\n    key += characters.substr(Math.floor(Math.random() * charactersLength + 1), 1);\n  }\n\n  return key;\n};\n\nconst objectFromCode = codeValue => {\n  const storedObject = {\n    candCode: `${codeValue}`\n  };\n  return storedObject;\n};\n\nconst getObjectFromID = suppliedID => {\n  const theObject = {\n    id: `${suppliedID}`\n  };\n  return theObject;\n};\n\nconst centerExamSessionObjectFromCode = codeValue => {\n  const storedObject = {\n    centerExamSession: `${codeValue}`\n  };\n  return storedObject;\n};\n\nconst candExamSessionCode = (candID, examID, sessionID) => {\n  return `${candID + examID + sessionID}`;\n};\n\nconst getSelectedObject = (dataSource, objectID) => {\n  // 1 copy the data source\n  if (dataSource.length > 0) {\n    const tempObjects = [...dataSource]; // get the object\n\n    const selectedObject = tempObjects.find(item => item.id === objectID);\n    return selectedObject;\n  }\n};\n\nconst getSpecialtyID = (dataSource, CESSID) => {\n  // 1 copy the data source\n  if (dataSource) {\n    const tempObjects = [...dataSource]; // get the object\n\n    const selectedObject = tempObjects.find(item => item.id === CESSID);\n\n    const {\n      specialty\n    } = _objectSpread({}, selectedObject);\n\n    return specialty;\n  }\n};\n\nconst getAllRegisteredCandidatesPerSpecialty = (dataSource, CESSID) => {\n  // 1 copy the data source\n  if (dataSource) {\n    const tempObjects = [...dataSource]; // get the object\n\n    const selectedObject = tempObjects.find(item => item.id === CESSID);\n\n    const {\n      specialty\n    } = _objectSpread({}, selectedObject);\n\n    console.log(specialty);\n    return specialty;\n  }\n}; // function to model a number with leading zeroes\n\n\nNumber.prototype.pad = function (size) {\n  var s = String(this);\n\n  while (s.length < (size || 2)) {\n    s = \"0\" + s;\n  }\n\n  return s;\n};\n\nconst calcCandAve = candScores => {\n  const aveTotal = candScores && candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\n  const coeffTotal = candScores.reduce((tally, item) => item.subjectAve === null ? tally : tally + item.coeff, 0);\n  const candAve = aveTotal / coeffTotal;\n  return candAve;\n};\n\nconst calcCandTotalScore = candScores => {\n  const aveTotal = candScores && candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\n  return aveTotal;\n};\n\nconst calcCandTotalCoeff = candScores => {\n  const coeffTotal = candScores && candScores.reduce((tally, item) => item.subjectAve === null ? tally : tally + item.coeff, 0);\n  return coeffTotal;\n};\n\nconst roundFloatNumber = (value, decimals) => {\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n};\n\nconst removeTypename = value => {\n  if (value === null || value === undefined) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(v => removeTypename(v));\n  } else if (typeof value === \"object\") {\n    const newObj = {};\n    Object.entries(value).forEach(([key, v]) => {\n      if (key !== \"__typename\") {\n        newObj[key] = removeTypename(v);\n      }\n    });\n    return newObj;\n  }\n\n  return value;\n};\n\nconst uploadFile = async e => {\n  const files = e.target.files;\n  const data = new FormData();\n  data.append(\"file\", files[0]);\n  data.append(\"upload_preset\", \"ineximages\");\n  const res = await fetch(\"https://api.cloudinary.com/v1_1/inex/image/upload\", {\n    method: \"POST\",\n    body: data\n  });\n  const file = await res.json();\n  console.log(file); // this.setState({ image: file.secure_url });\n\n  setState({\n    image: file.secure_url\n  });\n}; // const updateCacheForDelete = (cache, { data }, queryToUpdate) => {\n//   // manually update the cache so that the data are all the same\n//   // 1. read the cache for the data we want\n//   const { regions, deleteRegion } = data\n//   const data = cache.readQuery({ query: queryToUpdate });\n//   // selects all the other regions leaving out the deleted one\n//   regions = regions.filter(region => region.id !== deleteRegion.id);\n//   //  3. write the new data back to the cache\n//   console.log(\"getting payload\");\n//   console.log(payload);\n//   cache.writeQuery({ query: queryToUpdate, data });\n// };\n\n\nconst updateCache = (cache, payload) => {\n  // manually update the cache so that the data are all the same\n  // 1. read the cache for the data we want\n  const data = cache.readQuery({\n    query: getAllRegionsQuery\n  }); // the deletedselect all the other regions except the deleted one from the cache\n\n  data.regions = data.regions.filter(region => region.id !== payload.data.deleteRegion.id); //  3. write the new data back to the cache\n\n  console.log(\"getting payload\");\n  console.log(payload);\n  cache.writeQuery({\n    query: getAllRegionsQuery,\n    data\n  });\n};\n\nconst compareValues = (key, order = 'asc') => {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    const comparison = a[key].localeCompare(b[key]);\n    return order === 'desc' ? comparison * -1 : comparison;\n  };\n};\n\nexport { candExamSessionCode, compareValues, roundFloatNumber, calcCandTotalScore, calcCandTotalCoeff, calcCandAve, objectFromCode, uniqueCodeGen, getSelectedObject, getObjectFromID, removeTypename, uploadFile, getSpecialtyID, centerExamSessionObjectFromCode, getAllRegisteredCandidatesPerSpecialty }; // const compareValues=(key, order = 'asc') =>{\n//   return function innerSort(a, b) {\n//     if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n//       // property doesn't exist on either object\n//       return 0;\n//     }\n//     const varA = (typeof a[key] === 'string')\n//       ? a[key].toUpperCase() : a[key];\n//     const varB = (typeof b[key] === 'string')\n//       ? b[key].toUpperCase() : b[key];\n//     let comparison = 0;\n//     if (varA > varB) {\n//       comparison = 1;\n//     } else if (varA < varB) {\n//       comparison = -1;\n//     }\n//     return (\n//       (order === 'desc') ? (comparison * -1) : comparison\n//     );\n//   };\n// };","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/queries&Mutations&Functions/Functions.jsx"],"names":["React","concat","uniqueCodeGen","keyLength","i","key","characters","charactersLength","length","substr","Math","floor","random","objectFromCode","codeValue","storedObject","candCode","getObjectFromID","suppliedID","theObject","id","centerExamSessionObjectFromCode","centerExamSession","candExamSessionCode","candID","examID","sessionID","getSelectedObject","dataSource","objectID","tempObjects","selectedObject","find","item","getSpecialtyID","CESSID","specialty","getAllRegisteredCandidatesPerSpecialty","console","log","Number","prototype","pad","size","s","String","calcCandAve","candScores","aveTotal","reduce","tally","subjectAve","coeff","coeffTotal","candAve","calcCandTotalScore","calcCandTotalCoeff","roundFloatNumber","value","decimals","round","removeTypename","undefined","Array","isArray","map","v","newObj","Object","entries","forEach","uploadFile","e","files","target","data","FormData","append","res","fetch","method","body","file","json","setState","image","secure_url","updateCache","cache","payload","readQuery","query","getAllRegionsQuery","regions","filter","region","deleteRegion","writeQuery","compareValues","order","innerSort","a","b","hasOwnProperty","comparison","localeCompare"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { concat } from \"apollo-link\";\r\n\r\nconst uniqueCodeGen = (keyLength) => {\r\n  var i,\r\n    key = \"\",\r\n    //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    characters =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n  var charactersLength = characters.length;\r\n\r\n  for (i = 0; i < keyLength; i++) {\r\n    key += characters.substr(\r\n      Math.floor(Math.random() * charactersLength + 1),\r\n      1\r\n    );\r\n  }\r\n\r\n  return key;\r\n};\r\n\r\nconst objectFromCode = (codeValue) => {\r\n  const storedObject = {\r\n    candCode: `${codeValue}`,\r\n  };\r\n  return storedObject;\r\n};\r\n\r\nconst getObjectFromID = (suppliedID) => {\r\n  const theObject = {\r\n    id: `${suppliedID}`,\r\n  };\r\n  return theObject;\r\n};\r\n\r\nconst centerExamSessionObjectFromCode = (codeValue) => {\r\n  const storedObject = {\r\n    centerExamSession: `${codeValue}`,\r\n  };\r\n  return storedObject;\r\n};\r\n\r\nconst candExamSessionCode = (candID, examID, sessionID) => {\r\n  return `${candID + examID + sessionID}`;\r\n};\r\n\r\nconst getSelectedObject = (dataSource, objectID) => {\r\n  // 1 copy the data source\r\n  if (dataSource.length > 0) {\r\n    const tempObjects = [...dataSource];\r\n    // get the object\r\n    const selectedObject = tempObjects.find((item) => item.id === objectID);\r\n    return selectedObject;\r\n  }\r\n};\r\n\r\nconst getSpecialtyID = (dataSource, CESSID) => {\r\n  // 1 copy the data source\r\n  if (dataSource) {\r\n    const tempObjects = [...dataSource];\r\n    // get the object\r\n    const selectedObject = tempObjects.find((item) => item.id === CESSID);\r\n    const { specialty } = { ...selectedObject };\r\n    return specialty;\r\n  }\r\n};\r\n\r\nconst getAllRegisteredCandidatesPerSpecialty = (dataSource, CESSID) => {\r\n  // 1 copy the data source\r\n  if (dataSource) {\r\n    const tempObjects = [...dataSource];\r\n    // get the object\r\n    const selectedObject = tempObjects.find((item) => item.id === CESSID);\r\n    const { specialty } = { ...selectedObject };\r\n     console.log(specialty)\r\n    return specialty;\r\n  }\r\n};\r\n// function to model a number with leading zeroes\r\nNumber.prototype.pad = function (size) {\r\n  var s = String(this);\r\n  while (s.length < (size || 2)) {\r\n    s = \"0\" + s;\r\n  }\r\n  return s;\r\n};\r\n\r\nconst calcCandAve = (candScores) => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\r\n  const coeffTotal = candScores.reduce(\r\n    (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n    0\r\n  );\r\n  const candAve = aveTotal / coeffTotal;\r\n  return candAve;\r\n};\r\nconst calcCandTotalScore = (candScores) => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\r\n  return aveTotal;\r\n};\r\nconst calcCandTotalCoeff = (candScores) => {\r\n  const coeffTotal =\r\n    candScores &&\r\n    candScores.reduce(\r\n      (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n      0\r\n    );\r\n  return coeffTotal;\r\n};\r\nconst roundFloatNumber = (value, decimals) => {\r\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\r\n};\r\nconst removeTypename = (value) => {\r\n  if (value === null || value === undefined) {\r\n    return value;\r\n  } else if (Array.isArray(value)) {\r\n    return value.map((v) => removeTypename(v));\r\n  } else if (typeof value === \"object\") {\r\n    const newObj = {};\r\n    Object.entries(value).forEach(([key, v]) => {\r\n      if (key !== \"__typename\") {\r\n        newObj[key] = removeTypename(v);\r\n      }\r\n    });\r\n    return newObj;\r\n  }\r\n  return value;\r\n};\r\n\r\nconst uploadFile = async (e) => {\r\n  const files = e.target.files;\r\n  const data = new FormData();\r\n  data.append(\"file\", files[0]);\r\n  data.append(\"upload_preset\", \"ineximages\");\r\n  const res = await fetch(\"https://api.cloudinary.com/v1_1/inex/image/upload\", {\r\n    method: \"POST\",\r\n    body: data,\r\n  });\r\n  const file = await res.json();\r\n  console.log(file);\r\n  // this.setState({ image: file.secure_url });\r\n  setState({ image: file.secure_url });\r\n};\r\n\r\n// const updateCacheForDelete = (cache, { data }, queryToUpdate) => {\r\n//   // manually update the cache so that the data are all the same\r\n//   // 1. read the cache for the data we want\r\n//   const { regions, deleteRegion } = data\r\n//   const data = cache.readQuery({ query: queryToUpdate });\r\n//   // selects all the other regions leaving out the deleted one\r\n//   regions = regions.filter(region => region.id !== deleteRegion.id);\r\n//   //  3. write the new data back to the cache\r\n//   console.log(\"getting payload\");\r\n//   console.log(payload);\r\n//   cache.writeQuery({ query: queryToUpdate, data });\r\n// };\r\n\r\nconst updateCache = (cache, payload) => {\r\n  // manually update the cache so that the data are all the same\r\n  // 1. read the cache for the data we want\r\n  const data = cache.readQuery({ query: getAllRegionsQuery });\r\n  // the deletedselect all the other regions except the deleted one from the cache\r\n  data.regions = data.regions.filter(\r\n    (region) => region.id !== payload.data.deleteRegion.id\r\n  );\r\n  //  3. write the new data back to the cache\r\n  console.log(\"getting payload\");\r\n  console.log(payload);\r\n  cache.writeQuery({ query: getAllRegionsQuery, data });\r\n};\r\n\r\nconst compareValues=(key, order = 'asc') =>{\r\n  return function innerSort(a, b) {\r\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\r\n    const comparison = a[key].localeCompare(b[key]);\r\n\r\n    return (\r\n      (order === 'desc') ? (comparison * -1) : comparison\r\n    );\r\n  };\r\n}\r\n\r\nexport {\r\n  candExamSessionCode,\r\n  compareValues,\r\n  roundFloatNumber,\r\n  calcCandTotalScore,\r\n  calcCandTotalCoeff,\r\n  calcCandAve,\r\n  objectFromCode,\r\n  uniqueCodeGen,\r\n  getSelectedObject,\r\n  getObjectFromID,\r\n  removeTypename,\r\n  uploadFile,\r\n  getSpecialtyID,\r\n  centerExamSessionObjectFromCode,\r\n  getAllRegisteredCandidatesPerSpecialty,\r\n};\r\n      // const compareValues=(key, order = 'asc') =>{\r\n      //   return function innerSort(a, b) {\r\n      //     if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n      //       // property doesn't exist on either object\r\n      //       return 0;\r\n      //     }\r\n      \r\n      //     const varA = (typeof a[key] === 'string')\r\n      //       ? a[key].toUpperCase() : a[key];\r\n      //     const varB = (typeof b[key] === 'string')\r\n      //       ? b[key].toUpperCase() : b[key];\r\n      \r\n      //     let comparison = 0;\r\n      //     if (varA > varB) {\r\n      //       comparison = 1;\r\n      //     } else if (varA < varB) {\r\n      //       comparison = -1;\r\n      //     }\r\n      //     return (\r\n      //       (order === 'desc') ? (comparison * -1) : comparison\r\n      //     );\r\n      //   };\r\n      // };\r\n"]},"metadata":{},"sourceType":"module"}