{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\candidate\\\\GetCenterCandDetailsInfo.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport { useRouter } from \"next\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllPhasesQuery, getAllRanksOfAnExamPhaseQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar CreateCESExaminer = function CreateCESExaminer() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var initialValues = {// centerNumber: \"\",\n    // examID: \"\",\n    // sessionID: \",\n  };\n\n  var _useForm = useForm({\n    centerNumber: \"\",\n    examID: \"\",\n    phaseID: \"\",\n    sessionID: \"\",\n    exams: [],\n    ranks: [],\n    phases: [],\n    sessions: [],\n    phaseRanks: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerExamSessions = state.centerExamSessions,\n      centerNumber = state.centerNumber,\n      examID = state.examID,\n      phaseID = state.phaseID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      phases = state.phases,\n      ranks = state.ranks,\n      phaseRanks = state.phaseRanks,\n      examSessions = state.examSessions,\n      sessions = state.sessions,\n      centerByNumber = state.centerByNumber;\n\n  var makeExaminerObject = function makeExaminerObject(profCodeValue) {\n    var storedProf = {\n      examinerCode: \"\".concat(profCodeValue)\n    };\n    return storedProf;\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, data, loading, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              data = _yield$client$query3.data;\n              loading = _yield$client$query3.loading;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              loading && __jsx(CircularProgress, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 18\n                }\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions[0]\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESData();\n  }, [centerByNumber, examSessions]);\n\n  var loadPhaseData = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query6, data, getPhases, refinedPhase;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                query: getAllPhasesQuery\n              });\n\n            case 2:\n              _yield$client$query6 = _context6.sent;\n              data = _yield$client$query6.data;\n              getPhases = data && data.phases;\n              console.log(getPhases);\n              refinedPhase = getPhases && removeTypename(getPhases);\n              console.log(refinedPhase);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  phases: refinedPhase\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadPhaseData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadPhaseData();\n  }, []);\n  var getPhaseOptions = phases && phases.map(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      value: item.id,\n      label: item.phaseName\n    });\n  });\n\n  var loadPhaseRankData = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _yield$client$query7, data, getThePhase, _getThePhase, phaseRank, refinedPhaseRanks;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return client.query({\n                skip: !phaseID,\n                query: getAllRanksOfAnExamPhaseQuery,\n                variables: {\n                  id: phaseID\n                }\n              });\n\n            case 2:\n              _yield$client$query7 = _context7.sent;\n              data = _yield$client$query7.data;\n              console.log(data);\n              getThePhase = data && data.phase;\n              _getThePhase = _objectSpread({}, getThePhase), phaseRank = _getThePhase.phaseRank;\n              refinedPhaseRanks = phaseRank && removeTypename(phaseRank);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  phaseRanks: refinedPhaseRanks\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function loadPhaseRankData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadPhaseRankData();\n  }, [phaseID]);\n  var getPhaseRankOptions = phaseRanks && phaseRanks.map(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      value: item.id,\n      label: item.rank.rankName\n    });\n  });\n\n  var _useMutation = useMutation(createCenterExamSessionExaminerMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      CreateCenterExamSessionExaminer = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(values, _ref9) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                setSubmitting = _ref9.setSubmitting, resetForm = _ref9.resetForm;\n                _context8.next = 3;\n                return CreateCenterExamSessionExaminer({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    examiner: makeExaminerObject(values.examinerCode),\n                    centerExamSession: centerExamSessions,\n                    phaseRank: phaseRanks && {\n                      id: values.phaseRank\n                    }\n                  })\n                });\n\n              case 3:\n                res = _context8.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"Examinateur inscript avec success\",\n                    type: \"success\"\n                  });\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x, _x2) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 5\n    }\n  }, function (_ref11) {\n    var submitForm = _ref11.submitForm,\n        isSubmitting = _ref11.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 23\n      }\n    }, \"Candidats inscrits a l'examen\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"Examen\",\n      component: Select,\n      placeholder: \"Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"S'inscrire au centre\")))))));\n  });\n};\n\n_s(CreateCESExaminer, \"VdJOZYkpmGtrFrnCCWCWiEirQm0=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useMutation];\n});\n\n_c = CreateCESExaminer;\nexport default CreateCESExaminer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCESExaminer\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/candidate/GetCenterCandDetailsInfo.jsx"],"names":["React","useState","useEffect","Error","useRouter","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","createCenterExamSessionExaminerMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllPhasesQuery","getAllRanksOfAnExamPhaseQuery","removeTypename","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","borderRadius","borderBottom","borderTop","titleStyled","centerAll","minWidth","validationSchema","object","shape","CreateCESExaminer","classes","client","isOpen","message","type","notify","setNotify","initialValues","centerNumber","examID","phaseID","sessionID","exams","ranks","phases","sessions","phaseRanks","centerByNumber","examSessions","centerExamSessions","state","setState","handleSelectChange","handleInputChange","makeExaminerObject","profCodeValue","storedProf","examinerCode","loadExamData","query","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","loading","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","error","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","loadPhaseData","getPhases","refinedPhase","getPhaseOptions","phaseName","loadPhaseRankData","getThePhase","phase","phaseRank","refinedPhaseRanks","getPhaseRankOptions","rank","rankName","CreateCenterExamSessionExaminer","loadingMut","values","setSubmitting","resetForm","examiner","centerExamSession","res","setTimeout","JSON","stringify","submitForm","isSubmitting","centerCode","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport {useRouter} from \"next\"\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { createCenterExamSessionExaminerMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllPhasesQuery,\r\n  getAllRanksOfAnExamPhaseQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    borderRadius:\"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst CreateCESExaminer = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    // centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    phaseID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    ranks: [],\r\n    phases: [],\r\n    sessions: [],\r\n    phaseRanks: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n  });\r\n  const {\r\n    centerExamSessions,\r\n    centerNumber,\r\n    examID,\r\n    phaseID,\r\n    sessionID,\r\n    exams,\r\n    phases,\r\n    ranks,\r\n    phaseRanks,\r\n    examSessions,\r\n    sessions,\r\n    centerByNumber,\r\n  } = state;\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n    {\r\n      loading && <CircularProgress />;\r\n    }\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions[0],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerByNumber, examSessions]);\r\n\r\n  const loadPhaseData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllPhasesQuery,\r\n    });\r\n\r\n    const getPhases = data && data.phases;\r\n    console.log(getPhases);\r\n    const refinedPhase = getPhases && removeTypename(getPhases);\r\n    console.log(refinedPhase);\r\n\r\n    setState((prev) => ({ ...prev, phases: refinedPhase }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPhaseData();\r\n  }, []);\r\n\r\n  const getPhaseOptions =\r\n    phases &&\r\n    phases.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.phaseName,\r\n    }));\r\n\r\n  const loadPhaseRankData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !phaseID,\r\n      query: getAllRanksOfAnExamPhaseQuery,\r\n      variables: { id: phaseID },\r\n    });\r\n    console.log(data);\r\n    const getThePhase = data && data.phase;\r\n    const { phaseRank } = { ...getThePhase };\r\n    const refinedPhaseRanks = phaseRank && removeTypename(phaseRank);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      phaseRanks: refinedPhaseRanks,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPhaseRankData();\r\n  }, [phaseID]);\r\n\r\n  const getPhaseRankOptions =\r\n    phaseRanks &&\r\n    phaseRanks.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.rank.rankName,\r\n    }));\r\n\r\n  const [CreateCenterExamSessionExaminer, { loadingMut, error }] = useMutation(\r\n    createCenterExamSessionExaminerMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await CreateCenterExamSessionExaminer({\r\n          variables: {\r\n            ...values,\r\n            examiner: makeExaminerObject(values.examinerCode),\r\n            centerExamSession: centerExamSessions,\r\n            phaseRank: phaseRanks && { id: values.phaseRank },\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Examinateur inscript avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\nCandidats inscrits a l'examen\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"Examen\"\r\n                        component={Select}\r\n                        placeholder=\"Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      \r\n                  \r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"S'inscrire au centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateCESExaminer;\r\n"]},"metadata":{},"sourceType":"module"}