{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\rank\\\\NewRankList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport useTable from \"../utils/useTable\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { Paper, Typography, TableBody, TableRow, TableCell, Grid, InputAdornment } from \"@material-ui/core\";\nimport Popup from \"../utils/Popup\";\nimport Button from \"@material-ui/core/Button\";\nimport Search from \"@material-ui/icons/Search\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\nvar headCells = [{\n  id: \"rankName\",\n  label: \"Libelle Poste\"\n}, {\n  id: \"rankCode\",\n  label: \"Code Poste\"\n}, {\n  id: \"id\",\n  label: \"ID\"\n}];\n\nvar NewRankList = function NewRankList() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useState = useState([]),\n      ranks = _useState[0],\n      setRanks = _useState[1];\n\n  var _useTable = useTable(ranks, headCells),\n      TblContainer = _useTable.TblContainer,\n      TblHead = _useTable.TblHead,\n      TblPagination = _useTable.TblPagination,\n      recordsAfterPagingAndSorting = _useTable.recordsAfterPagingAndSorting;\n\n  var loadRanksData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, ranks;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRanksQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), ranks = _data.ranks;\n              console.log(ranks);\n              setRanks(ranks);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRanksData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRanksData();\n    console.log(ranks);\n  }, []);\n  return __jsx(Formik, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return __jsx(Paper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, __jsx(TblContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(Toolbar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), __jsx(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      autocomplete: \"off\",\n      name: \"search\",\n      type: \"search\",\n      label: \"Search\",\n      fullWidth: true,\n      variant: \"outlined\",\n      inputProps: {\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }\n        }, __jsx(Search, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }\n        }))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), __jsx(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"AddNew\")), __jsx(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), __jsx(TblHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), __jsx(TableBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, recordsAfterPagingAndSorting().map(function (item) {\n      return __jsx(TableRow, {\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, __jsx(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, item.rankName), __jsx(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, item.rankCode), __jsx(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, item.id));\n    }))), __jsx(TblPagination, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\n_s(NewRankList, \"A1mdfPNXwsrqWFdKcxOYFY/V56I=\", false, function () {\n  return [useApolloClient, useTable];\n});\n\n_c = NewRankList;\nexport default NewRankList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRankList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/rank/NewRankList.jsx"],"names":["React","useState","useEffect","useTable","useApolloClient","Paper","Typography","TableBody","TableRow","TableCell","Grid","InputAdornment","Popup","Button","Search","ErrorMessage","Formik","Form","Field","TextField","getAllRanksQuery","headCells","id","label","NewRankList","client","ranks","setRanks","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","loadRanksData","query","error","data","console","log","isSubmitting","startAdornment","submitForm","map","item","rankName","rankCode"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,IANF,EAMQC,cANR,QAOO,mBAPP;AAQA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SAASC,SAAT,QAA0B,yCAA1B;AAEA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,IAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADgB,EAEhB;AAAED,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFgB,EAGhB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAHgB,CAAlB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,MAAMC,MAAM,GAAGrB,eAAe,EAA9B;;AADwB,kBAEEH,QAAQ,CAAC,EAAD,CAFV;AAAA,MAEjByB,KAFiB;AAAA,MAEVC,QAFU;;AAAA,kBAQpBxB,QAAQ,CAACuB,KAAD,EAAQL,SAAR,CARY;AAAA,MAItBO,YAJsB,aAItBA,YAJsB;AAAA,MAKtBC,OALsB,aAKtBA,OALsB;AAAA,MAMtBC,aANsB,aAMtBA,aANsB;AAAA,MAOtBC,4BAPsB,aAOtBA,4BAPsB;;AAUxB,MAAMC,aAAa;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUP,MAAM,CAACQ,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAEb;AADkC,eAAb,CADV;;AAAA;AAAA;AACZc,cAAAA,KADY,uBACZA,KADY;AACLC,cAAAA,IADK,uBACLA,IADK;AAAA,wCAIGA,IAJH,GAIZT,KAJY,SAIZA,KAJY;AAKpBU,cAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEAC,cAAAA,QAAQ,CAACD,KAAD,CAAR;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbM,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAUA9B,EAAAA,SAAS,CAAC,YAAM;AACd8B,IAAAA,aAAa;AAEbI,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAsB;AAAA,QAAnBY,YAAmB,SAAnBA,YAAmB;AACrB,WACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,MAAC,KAAD;AACA,MAAA,SAAS,EAAEnB,SADX;AAEA,MAAA,YAAY,EAAC,KAFb;AAGA,MAAA,IAAI,EAAC,QAHL;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,KAAK,EAAC,QALV;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,OAAO,EAAC,UAPZ;AAQI,MAAA,UAAU,EAAE;AACVoB,QAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAFQ,OARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAmBM,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBN,EAoBM,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBN,CADF,EAuBQ,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBR,EAwBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAyBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,4BAA4B,GAAGU,GAA/B,CAAmC,UAACC,IAAD;AAAA,aAClC,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACpB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYoB,IAAI,CAACC,QAAjB,CADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,IAAI,CAACE,QAAjB,CAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,IAAI,CAACpB,EAAjB,CAHF,CADkC;AAAA,KAAnC,CADH,CAzBF,CADF,EAoCE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,CADF;AAwCD,GA1CH,CADF;AA8CD,CAxED;;GAAME,W;UACWpB,e,EAOXD,Q;;;KARAqB,W;AAyEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useTable from \"../utils/useTable\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid, InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport Popup from \"../utils/Popup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\n\r\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst headCells = [\r\n  { id: \"rankName\", label: \"Libelle Poste\" },\r\n  { id: \"rankCode\", label: \"Code Poste\" },\r\n  { id: \"id\", label: \"ID\" },\r\n];\r\n\r\nconst NewRankList = () => {\r\n  const client = useApolloClient();\r\n  const [ranks, setRanks] = useState([]);\r\n  const {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting,\r\n  } = useTable(ranks, headCells);\r\n\r\n  const loadRanksData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRanksQuery,\r\n    });\r\n    const { ranks } = { ...data };\r\n    console.log(ranks);\r\n\r\n    setRanks(ranks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRanksData();\r\n\r\n    console.log(ranks);\r\n  }, []);\r\n\r\n  return (\r\n    <Formik>\r\n      {({ isSubmitting }) => {\r\n        return (\r\n          <Paper>\r\n            <TblContainer>\r\n              <Toolbar >\r\n              <Grid></Grid>\r\n              <Grid></Grid>\r\n              <Field \r\n              component={TextField}\r\n              autocomplete=\"off\"\r\n              name=\"search\"\r\n                  type=\"search\"\r\n                  label=\"Search\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    startAdornment:(\r\n                      <InputAdornment position=\"start\">\r\n                        <Search/>\r\n                      </InputAdornment>\r\n                      )\r\n                    }}\r\n                    />\r\n                    <Grid></Grid>\r\n                    <Button onClick={submitForm}>AddNew</Button>\r\n                    </Toolbar>\r\n                    <Grid></Grid>\r\n              <TblHead />\r\n              <TableBody>\r\n                {recordsAfterPagingAndSorting().map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{item.rankName}</TableCell>\r\n                    <TableCell>{item.rankCode}</TableCell>\r\n                    <TableCell>{item.id}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </TblContainer>\r\n            <TblPagination />\r\n          </Paper>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewRankList;\r\n"]},"metadata":{},"sourceType":"module"}