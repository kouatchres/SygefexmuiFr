{"ast":null,"code":"import _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport NewDivision from \"./NewDivision\";\nimport UpdateDivision from \"./UpdateDivision\";\n\nvar DivisionList = function DivisionList() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      isAddPopupOpen = _useState[0],\n      setIsAddPopupOpen = _useState[1];\n\n  var _useState2 = useState({\n    isOpen: false,\n    id: \"\"\n  }),\n      updatePopupState = _useState2[0],\n      setUpdatePopupState = _useState2[1];\n\n  var _useState3 = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  }),\n      deleteConfirmDialog = _useState3[0],\n      setDeleteConfirmDialog = _useState3[1];\n\n  var _useState4 = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\",\n      grouping: false\n    }, {\n      field: \"divName\",\n      title: \"Division Name\"\n    }, {\n      field: \"divCode\",\n      title: \"Division Code\",\n      grouping: false\n    }],\n    data: []\n  }),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var loadDivisionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, regions, getDivisions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsAndDivisionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), regions = _data.regions;\n              console.log(data);\n              getDivisions = regions.map(function (item) {\n                var divInfos = item.division.map(function (division) {\n                  return _objectSpread({\n                    regName: item.regName,\n                    regCode: item.regCode\n                  }, division);\n                });\n                return divInfos;\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: getDivisions.flat(1)\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadDivisionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n\n  var handleAddPopupClose = function handleAddPopupClose(event) {\n    setIsAddPopupOpen(false);\n  };\n\n  var handleUpdatePopupClose = function handleUpdatePopupClose(event) {\n    setUpdatePopupState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var handleDeleteConfirmDialog = function handleDeleteConfirmDialog() {\n    setDeleteConfirmDialog(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  console.dir(state.data);\n\n  var _useMutation = useMutation(deleteDivisionMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    } // update: updateCache(),\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteDivision = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var actions = [{\n    icon: function icon() {\n      return __jsx(AddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Nouvelle matière\",\n    isFreeAction: true,\n    onClick: function onClick(event, rowData) {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"modifier matière\",\n    onClick: function onClick(event, rowData) {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Supprimer matière\",\n    onClick: function onClick(event, rowData) {\n      return setDeleteConfirmDialog({\n        id: rowData.id,\n        isOpen: true,\n        title: \"Etes-vous sur de suprimer cette inofrmation\",\n        subtitle: \"Une fois supprimées, les informations seront perdues a jamais\",\n        onConfirm: function onConfirm() {\n          rowData.id && deleteDivision(rowData.id);\n          setNotify({\n            isOpen: true,\n            message: \"Département supprimé avec success\",\n            type: \"error\"\n          });\n        }\n      });\n    }\n  }];\n  console.log({\n    updatePopupState: updatePopupState\n  });\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    title: \"Users List\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        color: \"#ede6b9\",\n        // color: \"#ff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#b9925e\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouveau D\\xE9partement\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(NewDivision, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  })), __jsx(UpdatePopup, {\n    title: updatePopupState.id,\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateDivision, {\n    id: updatePopupState.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(DivisionList, \"auFmfno+nzK56iW2iVuyadPQGBc=\", true, function () {\n  return [useApolloClient];\n});\n\n_c = DivisionList;\nexport default DivisionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DivisionList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionList.jsx"],"names":["React","useEffect","useState","MaterialTable","Paper","useApolloClient","getAllRegionsAndDivisionsQuery","tableIcons","AddPopup","UpdatePopup","ConfirmDialog","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","NewDivision","UpdateDivision","DivisionList","client","isAddPopupOpen","setIsAddPopupOpen","isOpen","id","updatePopupState","setUpdatePopupState","title","subtitle","deleteConfirmDialog","setDeleteConfirmDialog","columns","field","grouping","data","state","setState","loadDivisionData","query","error","regions","console","log","getDivisions","map","item","divInfos","division","regName","regCode","prev","flat","handleAddPopupClose","event","handleUpdatePopupClose","handleDeleteConfirmDialog","dir","useMutation","deleteDivisionMutation","variables","deleteDivision","loading","actions","icon","tooltip","isFreeAction","onClick","rowData","onConfirm","setNotify","message","type","marginTop","position","top","actionsColumnIndex","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","color","paddingTop","paddingBottom","backgroundColor","maxHeight","rowStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport NewDivision from \"./NewDivision\";\r\nimport UpdateDivision from \"./UpdateDivision\";\r\n\r\nconst DivisionList = () => {\r\n  const client = useApolloClient();\r\n const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n        grouping: false,\r\n      },\r\n      { field: \"divName\", title: \"Division Name\" },\r\n      { field: \"divCode\", title: \"Division Code\", grouping: false },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsAndDivisionsQuery,\r\n    });\r\n    const { regions } = { ...data };\r\nconsole.log(data)\r\n    const getDivisions = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => ({\r\n        regName: item.regName,\r\n        regCode: item.regCode,\r\n        ...division,\r\n      }));\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getDivisions.flat(1) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  const handleAddPopupClose = (event) => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = (event) => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  console.dir(state.data);\r\n\r\n  const [deleteDivision, { loading }] = useMutation(deleteDivisionMutation, {\r\n    variables: { id: deleteConfirmDialog.id },\r\n    // update: updateCache(),\r\n  });\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Nouvelle matière\",\r\n      isFreeAction: true,\r\n      onClick: (event, rowData) => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"modifier matière\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer matière\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteDivision(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Département supprimé avec success\",\r\n              type: \"error\",\r\n            });\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n  console.log({ updatePopupState });\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n        title=\"Users List\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          grouping: true,\r\n          paging: true,\r\n          pageSize: 50, // make initial page size\r\n          emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n          pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n          headerStyle: {\r\n            color: \"#ede6b9\",\r\n            // color: \"#ff\",\r\n            paddingTop: \"0.5rem\",\r\n            paddingBottom: \"0.5rem\",\r\n            backgroundColor: \"#b9925e\",\r\n            maxHeight: \"0.5rem !important\",\r\n          },\r\n          rowStyle: {\r\n            color: \"#000\",\r\n          },\r\n        }}\r\n      />\r\n      <AddPopup\r\n        title=\"Nouveau Département\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <NewDivision />\r\n      </AddPopup>\r\n      <UpdatePopup\r\n        title={updatePopupState.id}\r\n        isOpen={updatePopupState.isOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateDivision id={updatePopupState.id} />\r\n      </UpdatePopup>\r\n\r\n      <ConfirmDialog\r\n        title={deleteConfirmDialog.title}\r\n        subtitle={deleteConfirmDialog.subtitle}\r\n        isOpen={deleteConfirmDialog.isOpen}\r\n        onClose={handleDeleteConfirmDialog}\r\n        onConfirm={deleteConfirmDialog.onConfirm}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\nexport default DivisionList;\r\n"]},"metadata":{},"sourceType":"module"}