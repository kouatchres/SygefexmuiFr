{"ast":null,"code":"import _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\NewUpdateRegionHook.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { MiniStyledPage } from \"../styles/StyledPage\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { Form, Formik } from \"formik\";\nimport { updateRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getSingleRegionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { StyledForm, ButtonStyled, StyledButton, SygexInput } from \"../utils/FormInputs\";\nvar validationSchema = Yup.object().shape({\n  regName: Yup.string().required(\"Nom Région Obligatoire\"),\n  regCode: Yup.string().required(\"Code Région Obligatoire\")\n});\n\nvar NewUpdateRegionHook = function NewUpdateRegionHook(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useForm = useForm({\n    regCode: \"\",\n    regName: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      state = _useForm2[0],\n      setState = _useForm2[1];\n\n  var client = useApolloClient();\n  console.log(id);\n\n  var loadRegionData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, error, getRegionData, regName, regCode;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getSingleRegionQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              error = _yield$client$query.error;\n              getRegionData = data.region;\n              regName = getRegionData.regName, regCode = getRegionData.regCode;\n              setState({\n                regName: regName,\n                regCode: regCode\n              });\n              return _context.abrupt(\"return\", getRegionData);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRegionData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var initialValues = {\n    regName: \"\",\n    regCode: \"\"\n  };\n  useEffect(function () {\n    loadRegionData();\n  }, []);\n  console.log(state);\n\n  var _useMutation = useMutation(updateRegionMutation, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateRegion = _useMutation2[0];\n\n  return __jsx(Formik, {\n    initialValues: state || initialValues,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setSubmitting = _ref3.setSubmitting, resetForm = _ref3.resetForm;\n                _context2.next = 3;\n                return updateRegion({\n                  variables: _objectSpread({}, values)\n                });\n\n              case 3:\n                res = _context2.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting;\n    return __jsx(MiniStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Modification de R\\xE9gion\"), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(SygexInput, {\n      type: \"text\",\n      id: \"regName\",\n      name: \"regName\",\n      label: \"Nom R\\xE9gion\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), __jsx(SygexInput, {\n      type: \"text\",\n      id: \"regCode\",\n      name: \"regCode\",\n      label: \"Code R\\xE9gion\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Valid\", isSubmitting ? \"cation\" : \"er\")))));\n  });\n};\n\n_s(NewUpdateRegionHook, \"e8+QtkS6DH5PksIqXOI/Aek+enc=\", false, function () {\n  return [useForm, useApolloClient, useMutation];\n});\n\n_c = NewUpdateRegionHook;\nexport default NewUpdateRegionHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUpdateRegionHook\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/NewUpdateRegionHook.jsx"],"names":["React","useEffect","useMutation","useApolloClient","MiniStyledPage","Yup","useForm","Form","Formik","updateRegionMutation","getSingleRegionQuery","StyledForm","ButtonStyled","StyledButton","SygexInput","validationSchema","object","shape","regName","string","required","regCode","NewUpdateRegionHook","id","state","setState","client","console","log","loadRegionData","query","variables","data","error","getRegionData","region","initialValues","updateRegion","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { MiniStyledPage } from \"../styles/StyledPage\";\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { updateRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getSingleRegionQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n  SygexInput,\r\n} from \"../utils/FormInputs\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  regName: Yup.string().required(\"Nom Région Obligatoire\"),\r\n  regCode: Yup.string().required(\"Code Région Obligatoire\"),\r\n});\r\nconst NewUpdateRegionHook = ({ id }) => {\r\n  const [state, setState] = useForm({ regCode: \"\", regName: \"\" });\r\n  const client = useApolloClient();\r\n\r\n  console.log(id);\r\n\r\n  const loadRegionData = async () => {\r\n    const { data, error } = await client.query({\r\n      query: getSingleRegionQuery,\r\n      variables: { id },\r\n    });\r\n    const getRegionData = data.region;\r\n    const { regName, regCode } = getRegionData;\r\n    setState({\r\n      regName: regName,\r\n      regCode: regCode,\r\n    });\r\n    return getRegionData;\r\n  };\r\n\r\n  const initialValues = {\r\n    regName: \"\",\r\n    regCode: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.log(state);\r\n\r\n  const [updateRegion] = useMutation(updateRegionMutation, {\r\n    variables: { id },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={state || initialValues}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await updateRegion({ variables: { ...values } });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <MiniStyledPage>\r\n          <Form>\r\n            <h4>Modification de Région</h4>\r\n            <StyledForm disabled={isSubmitting} aria-busy={isSubmitting}>\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"regName\"\r\n                name=\"regName\"\r\n                label=\"Nom Région\"\r\n                disabled={isSubmitting}\r\n              />\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"regCode\"\r\n                name=\"regCode\"\r\n                label=\"Code Région\"\r\n                disabled={isSubmitting}\r\n              />\r\n              <ButtonStyled>\r\n                <StyledButton type=\"submit\">\r\n                  Valid{isSubmitting ? \"cation\" : \"er\"}\r\n                </StyledButton>\r\n              </ButtonStyled>\r\n            </StyledForm>\r\n          </Form>\r\n        </MiniStyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewUpdateRegionHook;\r\n"]},"metadata":{},"sourceType":"module"}