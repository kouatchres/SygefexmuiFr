{"ast":null,"code":"import _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\rank\\\\UpdateRank.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { MiniStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport { updateRankMutation } from '../queries&Mutations&Functions/Mutations';\nimport { singleRankQuery } from '../queries&Mutations&Functions/Queries';\nimport useForm from '../utils/useForm';\nimport styled from 'styled-components';\nvar Controls = styled.div.withConfig({\n  displayName: \"UpdateRank__Controls\",\n  componentId: \"wdaecl-0\"\n})([\"padding:0 2rem;\"]);\n_c = Controls;\n\nvar UpdateGenderHooks = function UpdateGenderHooks(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useForm = useForm({\n    rankCode: '',\n    rankName: ''\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      state = _useForm2[0],\n      setState = _useForm2[1];\n\n  var client = useApolloClient();\n\n  var loadRankData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getRankData, rankName, rankCode;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: singleRankQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getRankData = data.rank;\n              console.log(getRankData);\n              rankName = getRankData.rankName, rankCode = getRankData.rankCode;\n              setState({\n                rankCode: rankCode,\n                rankName: rankName\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRankData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRankData();\n  }, []);\n  var validationSchema = Yup.object().shape({\n    rankName: Yup.string().required(\"Nom du sexe obligatoire\"),\n    rankCode: Yup.string().required(\"Code du sexe  obligatoire\")\n  });\n\n  var _useMutation = useMutation(updateRankMutation, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateRank = _useMutation2[0];\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: state || initialValues,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n        var resetForm, setSubmitting, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                resetForm = _ref3.resetForm, setSubmitting = _ref3.setSubmitting;\n                _context2.next = 3;\n                return updateRank({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    id: id\n                  })\n                });\n\n              case 3:\n                res = _context2.sent;\n                // Router.push({\n                // \tpathname: '/show/singleExam',\n                // \tquery: { id }\n                // });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, function (_ref5) {\n    var values = _ref5.values,\n        isSubmitting = _ref5.isSubmitting;\n    return __jsx(MiniStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, \"Modification d'info poste d'examinateur\"), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, __jsx(Controls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }, __jsx(SygexInput, {\n      type: \"text\",\n      id: \"rankName\",\n      name: \"rankName\",\n      label: \"Nom du poste\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), __jsx(SygexInput, {\n      type: \"text\",\n      id: \"rankCode\",\n      name: \"rankCode\",\n      label: \"Code du poste\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), __jsx(ButtonStyled, {\n      className: \"submitButton\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, \"valid\", isSubmitting ? 'ation en cours' : 'er'))))));\n  });\n};\n\n_s(UpdateGenderHooks, \"8+5XokmcKUF8/XLnIb0zEEcFNaE=\", false, function () {\n  return [useForm, useApolloClient, useMutation];\n});\n\n_c2 = UpdateGenderHooks;\nexport default UpdateGenderHooks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Controls\");\n$RefreshReg$(_c2, \"UpdateGenderHooks\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/rank/UpdateRank.jsx"],"names":["React","useEffect","Yup","Formik","Form","useApolloClient","useMutation","MiniStyledPage","Error","SygexInput","StyledForm","ButtonStyled","StyledButton","updateRankMutation","singleRankQuery","useForm","styled","Controls","div","UpdateGenderHooks","id","rankCode","rankName","state","setState","client","loadRankData","query","variables","data","getRankData","rank","console","log","validationSchema","object","shape","string","required","updateRank","initialValues","values","resetForm","setSubmitting","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\r\n\r\nimport { MiniStyledPage } from '../styles/StyledPage';\r\nimport Error from '../ErrorMessage.js';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport { updateRankMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { singleRankQuery } from '../queries&Mutations&Functions/Queries';\r\nimport useForm from '../utils/useForm';\r\n\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Controls = styled.div`\r\npadding:0 2rem;\r\n`;\r\nconst UpdateGenderHooks = ({ id }) => {\r\n\tconst [state, setState] = useForm({ rankCode: '', rankName: '' })\r\n\tconst client = useApolloClient()\r\n\r\n\r\n\tconst loadRankData = async () => {\r\n\t\tconst { data } = await client.query({\r\n\t\t\tquery: singleRankQuery,\r\n\t\t\tvariables: { id }\r\n\r\n\t\t})\r\n\t\tconst getRankData = data.rank\r\n\t\tconsole.log(getRankData)\r\n\t\tconst {\r\n\t\t\trankName,\r\n\t\t\trankCode,\r\n\t\t} = getRankData\r\n\r\n\t\tsetState({ rankCode: rankCode, rankName: rankName })\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tloadRankData()\r\n\t}, [])\r\n\r\n\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\trankName: Yup.string().required(\"Nom du sexe obligatoire\"),\r\n\t\trankCode: Yup.string().required(\"Code du sexe  obligatoire\"),\r\n\t})\r\n\tconst [updateRank] = useMutation(updateRankMutation, {\r\n\t\tvariables: { id }\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tmethod=\"POST\"\r\n\t\t\tinitialValues={state || initialValues}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={async (values, { resetForm, setSubmitting }) => {\r\n\t\t\t\tconst res = await updateRank({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\tid: id\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\t// Router.push({\r\n\t\t\t\t// \tpathname: '/show/singleExam',\r\n\t\t\t\t// \tquery: { id }\r\n\t\t\t\t// });\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconsole.log(JSON.stringify(values, null, 2));\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tresetForm(true);\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t}, 200);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ values, isSubmitting }) => (\r\n\r\n\t\t\t\t<MiniStyledPage>\r\n\t\t\t\t\t<h4>Modification d'info poste d'examinateur</h4>\r\n\t\t\t\t\t<StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Controls>\r\n\t\t\t\t\t\t\t\t<SygexInput\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"rankName\"\r\n\t\t\t\t\t\t\t\t\tname=\"rankName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Nom du poste\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SygexInput\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"rankCode\"\r\n\t\t\t\t\t\t\t\t\tname=\"rankCode\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Code du poste\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ButtonStyled className=\"submitButton\">\r\n\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tvalid{isSubmitting ? 'ation en cours' : 'er'}\r\n\t\t\t\t\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t\t\t\t</ButtonStyled>\r\n\t\t\t\t\t\t\t</Controls>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</StyledForm>\r\n\t\t\t\t</MiniStyledPage>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nexport default UpdateGenderHooks;\r\n"]},"metadata":{},"sourceType":"module"}