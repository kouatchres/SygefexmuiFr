{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\UpdateDivision.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from \"@material-ui/core/Styles\";\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { singleDivisionQuery, getAllRegionsDivisionsAndTownsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { updateDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport Notification from \"../utils/Notification\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  divName: Yup.string().required(\"Nom département Obligatoire\"),\n  divCode: Yup.string().required(\"Code département Obligatoire\")\n});\n\nconst UpdateRegion = ({\n  id\n}) => {\n  const classes = useStyles();\n  const [state, setState] = useForm({\n    divCode: \"\",\n    divName: \"\"\n  });\n  const client = useApolloClient();\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  console.log(id);\n\n  const loadSubDivData = async () => {\n    const {\n      data,\n      loading\n    } = await client.query({\n      query: singleDivisionQuery,\n      variables: {\n        id\n      } // pollInterval: 500,\n\n    });\n    console.log(data);\n\n    const {\n      divName,\n      divCode\n    } = _objectSpread({}, data.division);\n\n    setState({\n      divName: divName,\n      divCode: divCode\n    });\n  };\n\n  const initialValues = {\n    divName: \"\",\n    divCode: \"\"\n  };\n  useEffect(() => {\n    loadSubDivData();\n  }, []);\n  console.log(state);\n  const [updateDivision] = useMutation(updateDivisionMutation, {\n    variables: {\n      id\n    }\n  });\n  return __jsx(Formik, {\n    initialValues: state || initialValues,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await updateDivision({\n        variables: _objectSpread({}, values)\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"département modifié avec success\",\n          type: \"success\"\n        });\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, \"Modifier d\\xE9partement\"))), __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, __jsx(Field, {\n      name: \"divName\",\n      component: TextField,\n      type: \"text\",\n      fullWidth: true,\n      label: \"Libell\\xE9 d\\xE9partement\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"divName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), __jsx(Field, {\n      name: \"divCode\",\n      component: TextField,\n      type: \"text\",\n      fullWidth: true,\n      label: \"Code d\\xE9partement\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"divCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 40\n      }\n    }), isSubmitting ? \"Modification en cours\" : \"Modifier département\"))))));\n  });\n};\n\nexport default UpdateRegion;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/UpdateDivision.jsx"],"names":["makeStyles","React","useState","useEffect","useMutation","useApolloClient","Yup","useForm","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","ErrorMessage","Formik","Form","Field","singleDivisionQuery","getAllRegionsDivisionsAndTownsQuery","updateDivisionMutation","TextField","Notification","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","borderRadius","centerAll","validationSchema","object","shape","divName","string","required","divCode","UpdateRegion","id","classes","state","setState","client","notify","setNotify","isOpen","message","type","console","log","loadSubDivData","data","loading","query","variables","division","initialValues","updateDivision","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core/Styles\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  singleDivisionQuery,\r\n  getAllRegionsDivisionsAndTownsQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { updateDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\n\r\nimport Notification from \"../utils/Notification\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  divName: Yup.string().required(\"Nom département Obligatoire\"),\r\n  divCode: Yup.string().required(\"Code département Obligatoire\"),\r\n});\r\nconst UpdateRegion = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useForm({ divCode: \"\", divName: \"\" });\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  console.log(id);\r\n\r\n  const loadSubDivData = async () => {\r\n    const { data, loading } = await client.query({\r\n      query: singleDivisionQuery,\r\n      variables: { id },\r\n      // pollInterval: 500,\r\n    });\r\n    console.log(data);\r\n    const { divName, divCode } = { ...data.division };\r\n    setState({\r\n      divName: divName,\r\n      divCode: divCode,\r\n    });\r\n  };\r\n\r\n  const initialValues = {\r\n    divName: \"\",\r\n    divCode: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubDivData();\r\n  }, []);\r\n  console.log(state);\r\n\r\n  const [updateDivision] = useMutation(updateDivisionMutation, {\r\n    variables: { id },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={state || initialValues}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await updateDivision({\r\n          variables: { ...values },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"département modifié avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Modifier département\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item className={classes.centerAll}>\r\n                    <Field\r\n                      name=\"divName\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      label=\"Libellé département\"\r\n                      variant=\"outlined\"\r\n                      disabled={isSubmitting}\r\n                      helpertext={<ErrorMessage name=\"divName\" />}\r\n                    />\r\n                    <Field\r\n                      name=\"divCode\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      label=\"Code département\"\r\n                      variant=\"outlined\"\r\n                      disabled={isSubmitting}\r\n                      helpertext={<ErrorMessage name=\"divCode\" />}\r\n                    />\r\n                    <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                    <Button disabled={isSubmitting} onClick={submitForm}>\r\n                      {isSubmitting && <CircularProgress />}\r\n                      {isSubmitting\r\n                        ? \"Modification en cours\"\r\n                        : \"Modifier département\"}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default UpdateRegion;\r\n"]},"metadata":{},"sourceType":"module"}