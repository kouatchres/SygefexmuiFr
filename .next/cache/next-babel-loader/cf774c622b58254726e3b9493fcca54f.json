{"ast":null,"code":"import _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionToModifyHook.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Link from \"next/link\";\nimport { StyledForm, SygefexSelect, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport Error from \"../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport useForm from \"../utils/useForm\";\nimport DeleteRegion from \"../region/DeleteRegion\";\nimport { getAllRegionsOfACountryQuery, getAllCountrysQuery, getDivisionsOfARegionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\nvar InputGroup = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__InputGroup\",\n  componentId: \"hrmbrl-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;min-width:12rem;\"]);\n_c = InputGroup;\nvar Buttons = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__Buttons\",\n  componentId: \"hrmbrl-1\"\n})([\"display:grid;grid-template-columns:1fr;grid-auto-flow:column;grid-gap:1rem;margin:0 auto;\"]);\n_c2 = Buttons;\nvar TwoGroups = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__TwoGroups\",\n  componentId: \"hrmbrl-2\"\n})([\"display:flex;flex-direction:column;margin:0 auto;min-width:12rem;\"]);\n_c3 = TwoGroups;\n\nvar DivisionToModifyHook = function DivisionToModifyHook() {\n  _s();\n\n  var _useForm = useForm({\n    divisionID: \"\",\n    regionID: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 3),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleReactSelectChange = _useForm2[2];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    var val = type === \"number\" ? parseInt(value) : value;\n    setState(_defineProperty({}, name, val));\n  };\n\n  var _useQuery = useQuery(getAllCountrysQuery),\n      data = _useQuery.data,\n      loadingCount = _useQuery.loading,\n      errorCount = _useQuery.error;\n\n  {\n    loadingCount && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Loading Countries from DB...\");\n  }\n  {\n    errorCount && __jsx(Error, {\n      error: errorCount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    });\n  }\n\n  var _data = _objectSpread({}, data),\n      countries = _data.countries;\n\n  console.log(countries);\n  var reducedCountries = countries && countries.reduce(function (item) {\n    return item;\n  });\n  var refinedCountry = removeTypename(reducedCountries);\n  console.log(refinedCountry);\n\n  var _refinedCountry = _objectSpread({}, refinedCountry),\n      id = _refinedCountry.id;\n\n  console.log(id);\n\n  var _useQuery2 = useQuery(getAllRegionsOfACountryQuery, {\n    skip: !id,\n    variables: {\n      id: id\n    }\n  }),\n      dataRegions = _useQuery2.data,\n      loadingReg = _useQuery2.loading,\n      errorReg = _useQuery2.error;\n\n  {\n    loadingReg && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Loading regions from DB...\");\n  }\n  {\n    errorReg && __jsx(Error, {\n      error: errorReg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    });\n  }\n  var getCountry = dataRegions && dataRegions.country;\n\n  var _getCountry = _objectSpread({}, getCountry),\n      region = _getCountry.region;\n\n  console.log(dataRegions);\n  var getRegionsOptions = region && region.map(function (item) {\n    return {\n      value: item.id,\n      label: item.regName\n    };\n  });\n  state.regionID && console.log(state.regionID);\n\n  var _useQuery3 = useQuery(getDivisionsOfARegionQuery, {\n    skip: !state.regionID,\n    variables: {\n      id: state.regionID\n    }\n  }),\n      dataRegion = _useQuery3.data,\n      loadingRegion = _useQuery3.loading,\n      errRegion = _useQuery3.error;\n\n  {\n    loadingRegion && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }\n    }, \"loading...\");\n  }\n  {\n    errRegion && __jsx(Error, {\n      error: errRegion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }\n    });\n  }\n  console.log(dataRegion);\n  var getRegion = dataRegion && dataRegion.region;\n\n  var _getRegion = _objectSpread({}, getRegion),\n      division = _getRegion.division;\n\n  console.log(division);\n  var getDivisionOptions = division && division.map(function (item) {\n    return {\n      value: item.id,\n      label: item.divName\n    };\n  });\n  console.log(state.divisionID);\n  return __jsx(Formik, {\n    method: \"POST\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        isSubmitting = _ref.isSubmitting;\n    return __jsx(MinimStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Correction Info D\\xE9partement\"), __jsx(Error, {\n      error: errorReg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loadingReg,\n      \"aria-busy\": isSubmitting || loadingReg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, __jsx(TwoGroups, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, __jsx(SygefexSelect, {\n      name: \"regionID\",\n      onChange: handleReactSelectChange,\n      options: getRegionsOptions,\n      placeholder: \"La Région\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }), __jsx(SygefexSelect, {\n      name: \"divisionID\",\n      onChange: handleReactSelectChange,\n      options: getDivisionOptions,\n      placeholder: \"La Département\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    })), __jsx(Buttons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \"Supprimer\")), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: \"../updates/updateDivision\",\n        query: state.divisionID && {\n          id: state.divisionID\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Modifier\")))))))));\n  });\n};\n\n_s(DivisionToModifyHook, \"rdcCzNXLP7qskT1fwk4zuZns1wE=\", false, function () {\n  return [useForm, useQuery, useQuery, useQuery];\n});\n\n_c4 = DivisionToModifyHook;\nexport default DivisionToModifyHook;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputGroup\");\n$RefreshReg$(_c2, \"Buttons\");\n$RefreshReg$(_c3, \"TwoGroups\");\n$RefreshReg$(_c4, \"DivisionToModifyHook\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionToModifyHook.jsx"],"names":["React","MinimStyledPage","useQuery","Link","StyledForm","SygefexSelect","ButtonStyled","StyledButton","Error","Formik","Form","styled","useForm","DeleteRegion","getAllRegionsOfACountryQuery","getAllCountrysQuery","getDivisionsOfARegionQuery","removeTypename","InputGroup","div","Buttons","TwoGroups","DivisionToModifyHook","divisionID","regionID","state","setState","handleReactSelectChange","handleChange","e","target","name","value","type","val","parseInt","data","loadingCount","loading","errorCount","error","countries","console","log","reducedCountries","reduce","item","refinedCountry","id","skip","variables","dataRegions","loadingReg","errorReg","getCountry","country","region","getRegionsOptions","map","label","regName","dataRegion","loadingRegion","errRegion","getRegion","division","getDivisionOptions","divName","values","isSubmitting","pathname","query"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  StyledForm,\r\n  SygefexSelect,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport Error from \"../ErrorMessage\";\r\nimport { Formik, Form } from \"formik\";\r\nimport styled from \"styled-components\";\r\nimport useForm from \"../utils/useForm\";\r\nimport DeleteRegion from \"../region/DeleteRegion\";\r\nimport {\r\n  getAllRegionsOfACountryQuery,\r\n  getAllCountrysQuery,\r\n  getDivisionsOfARegionQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n  min-width: 12rem;\r\n`;\r\nconst Buttons = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: column;\r\n  grid-gap: 1rem;\r\n  margin: 0 auto;\r\n`;\r\nconst TwoGroups = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  min-width: 12rem;\r\n`;\r\n\r\nconst DivisionToModifyHook = () => {\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    divisionID: \"\",\r\n    regionID: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const { data, loading: loadingCount, error: errorCount } = useQuery(\r\n    getAllCountrysQuery\r\n  );\r\n  {\r\n    loadingCount && <p>Loading Countries from DB...</p>;\r\n  }\r\n  {\r\n    errorCount && <Error error={errorCount} />;\r\n  }\r\n  const { countries } = { ...data };\r\n  console.log(countries);\r\n  const reducedCountries = countries && countries.reduce((item) => item);\r\n  const refinedCountry = removeTypename(reducedCountries);\r\n  console.log(refinedCountry);\r\n  const { id } = { ...refinedCountry };\r\n  console.log(id);\r\n\r\n  const { data: dataRegions, loading: loadingReg, error: errorReg } = useQuery(\r\n    getAllRegionsOfACountryQuery,\r\n    {\r\n      skip: !id,\r\n      variables: { id },\r\n    }\r\n  );\r\n  {\r\n    loadingReg && <p>Loading regions from DB...</p>;\r\n  }\r\n  {\r\n    errorReg && <Error error={errorReg} />;\r\n  }\r\n  const getCountry = dataRegions && dataRegions.country;\r\n  const { region } = { ...getCountry };\r\n  console.log(dataRegions);\r\n  const getRegionsOptions =\r\n    region &&\r\n    region.map((item) => ({\r\n      value: item.id,\r\n      label: item.regName,\r\n    }));\r\n  state.regionID && console.log(state.regionID);\r\n\r\n  const {\r\n    data: dataRegion,\r\n    loading: loadingRegion,\r\n    error: errRegion,\r\n  } = useQuery(getDivisionsOfARegionQuery, {\r\n    skip: !state.regionID,\r\n    variables: { id: state.regionID },\r\n  });\r\n  {\r\n    loadingRegion && <p>loading...</p>;\r\n  }\r\n  {\r\n    errRegion && <Error error={errRegion} />;\r\n  }\r\n  console.log(dataRegion);\r\n  const getRegion = dataRegion && dataRegion.region;\r\n  const { division } = { ...getRegion };\r\n  console.log(division);\r\n  const getDivisionOptions =\r\n    division &&\r\n    division.map((item) => ({ value: item.id, label: item.divName }));\r\n\r\n  console.log(state.divisionID);\r\n\r\n  return (\r\n    <Formik method=\"POST\">\r\n      {({ values, isSubmitting }) => (\r\n        <MinimStyledPage>\r\n          <h4>Correction Info Département</h4>\r\n          <Error error={errorReg} />\r\n          <StyledForm\r\n            disabled={isSubmitting || loadingReg}\r\n            aria-busy={isSubmitting || loadingReg}\r\n          >\r\n            <Form>\r\n              <TwoGroups>\r\n                <InputGroup>\r\n                  <SygefexSelect\r\n                    name=\"regionID\"\r\n                    onChange={handleReactSelectChange}\r\n                    options={getRegionsOptions}\r\n                    placeholder={\"La Région\"}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <SygefexSelect\r\n                    name=\"divisionID\"\r\n                    onChange={handleReactSelectChange}\r\n                    options={getDivisionOptions}\r\n                    placeholder={\"La Département\"}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </InputGroup>\r\n                <Buttons>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\" id={id}>\r\n                      Supprimer\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\">\r\n                      <Link\r\n                        href={{\r\n                          pathname: \"../updates/updateDivision\",\r\n                          query: state.divisionID && { id: state.divisionID },\r\n                        }}\r\n                      >\r\n                        <a target=\"_blank\">Modifier</a>\r\n                      </Link>\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </Buttons>\r\n              </TwoGroups>\r\n            </Form>\r\n          </StyledForm>\r\n        </MinimStyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default DivisionToModifyHook;\r\n"]},"metadata":{},"sourceType":"module"}