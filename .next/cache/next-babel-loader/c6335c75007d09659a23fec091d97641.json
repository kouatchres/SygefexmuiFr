{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\DetailedResultsList.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport tableIcons from \"../../utils/icons/tableIcons\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\n\nconst DetailedResults = ({\n  id\n}) => {\n  const client = useApolloClient();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"candRegistrationNumber\",\n      title: \"No Inscrit\"\n    }, {\n      field: \"specialtyCode\",\n      title: \"Code Serie\"\n    }, {\n      field: \"aptitude\",\n      title: \"Aptitude\"\n    }, {\n      field: \"EPF1\",\n      title: \"EPF1\"\n    }, {\n      field: \"EPF2\",\n      title: \"EPF2\"\n    }, {\n      field: \"cand1stName\",\n      title: \"Nom\"\n    }, {\n      field: \"cand2ndName\",\n      title: \"Prenom\"\n    }, {\n      field: \"cand3rdName\",\n      title: \"Autre Noms\"\n    }, {\n      field: \"gender\",\n      title: \"Gender\"\n    }, {\n      field: \"registrationId\",\n      title: \"Resultats\"\n    }],\n    data: []\n  });\n\n  const loadCandScoreData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: centerExamSessionForResultsQuery,\n      variables: {\n        id\n      }\n    });\n    console.log(data);\n\n    const {\n      centerExamSession\n    } = _objectSpread({}, data);\n\n    const {\n      registration\n    } = _objectSpread({}, centerExamSession);\n\n    const getCand = registration && registration.map(item => _objectSpread({\n      candRegistrationNumber: item.candRegistrationNumber,\n      specialty: item.specialty.specialtyName,\n      specialtyCode: item.specialty.specialtyCode,\n      aptitude: item.aptitude,\n      EPF1: item.EPF1,\n      EPF2: item.EPF2,\n      registrationId: item.id\n    }, item.candidate));\n    console.log({\n      registration\n    });\n    console.log(getCand);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: getCand\n    }));\n  };\n\n  useEffect(() => {\n    loadCandScoreData(); // loadTitleData();\n  }, []);\n  console.dir(state.data);\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        style: {\n          // backgroundColor: \"#01579b\",\n          borderTopRightRadius: \"0.5rem\",\n          borderTopLeftRadius: \"0.5rem\" // color: \"#fff\",\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, __jsx(MTableToolbar, _extends({\n        style: {\n          // textColor: \"#000\",\n          textColor: \"#fff\"\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      })))\n    },\n    icons: tableIcons,\n    title: \"Resultats des Candidats>>>>>>>>>>>>>??????????                \",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      paging: true,\n      pageSize: 100,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [60, 120, 200, 400],\n      // rows selection options\n      headerStyle: {\n        color: \"#fff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#01579b\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 400);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data\n              });\n            });\n          }\n        }, 400);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 400);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DetailedResults;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/DetailedResultsList.jsx"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Paper","tableIcons","useApolloClient","centerExamSessionForResultsQuery","DetailedResults","id","client","state","setState","columns","field","title","data","loadCandScoreData","error","query","variables","console","log","centerExamSession","registration","getCand","map","item","candRegistrationNumber","specialty","specialtyName","specialtyCode","aptitude","EPF1","EPF2","registrationId","candidate","prev","dir","marginTop","Toolbar","props","borderTopRightRadius","borderTopLeftRadius","textColor","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","color","paddingTop","paddingBottom","backgroundColor","maxHeight","rowStyle","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,gCAAT,QAAiD,2CAAjD;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAClC,QAAMC,MAAM,GAAGJ,eAAe,EAA9B;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC;AACjCY,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,wBAAT;AAAmCC,MAAAA,KAAK,EAAE;AAA1C,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAHO,EAIP;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAJO,EAKP;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KALO,EAMP;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KANO,EAOP;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAPO,EAQP;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KARO,EASP;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KATO,EAUP;AAAED,MAAAA,KAAK,EAAE,gBAAT;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAVO,CADwB;AAajCC,IAAAA,IAAI,EAAE;AAb2B,GAAD,CAAlC;;AAgBA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAM;AAAEC,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAkB,MAAMN,MAAM,CAACS,KAAP,CAAa;AACzCA,MAAAA,KAAK,EAAEZ,gCADkC;AAEzCa,MAAAA,SAAS,EAAE;AAAEX,QAAAA;AAAF;AAF8B,KAAb,CAA9B;AAIAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,UAAM;AAAEO,MAAAA;AAAF,0BAA6BP,IAA7B,CAAN;;AACA,UAAM;AAAEQ,MAAAA;AAAF,0BAAwBD,iBAAxB,CAAN;;AACA,UAAME,OAAO,GACXD,YAAY,IACZA,YAAY,CAACE,GAAb,CAAkBC,IAAD;AACfC,MAAAA,sBAAsB,EAAED,IAAI,CAACC,sBADd;AAEfC,MAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,CAAeC,aAFX;AAGfC,MAAAA,aAAa,EAAEJ,IAAI,CAACE,SAAL,CAAeE,aAHf;AAIfC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJA;AAKfC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IALI;AAMfC,MAAAA,IAAI,EAAEP,IAAI,CAACO,IANI;AAOfC,MAAAA,cAAc,EAAER,IAAI,CAAClB;AAPN,OAQZkB,IAAI,CAACS,SARO,CAAjB,CAFF;AAYAf,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,MAAAA;AAAF,KAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAb,IAAAA,QAAQ,CAAEyB,IAAD,oCAAgBA,IAAhB;AAAsBrB,MAAAA,IAAI,EAAES;AAA5B,MAAD,CAAR;AACD,GAvBD;;AAyBAzB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,iBAAiB,GADH,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAI,EAAAA,OAAO,CAACiB,GAAR,CAAY3B,KAAK,CAACK,IAAlB;AACA,SACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEuB,MAAAA,SAAS,EAAE;AAAb,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAGC,KAAD,IACP;AACE,QAAA,KAAK,EAAE;AACL;AACAC,UAAAA,oBAAoB,EAAE,QAFjB;AAGLC,UAAAA,mBAAmB,EAAE,QAHhB,CAIL;;AAJK,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,MAAC,aAAD;AACE,QAAA,KAAK,EAAE;AACL;AACAC,UAAAA,SAAS,EAAE;AAFN;AADT,SAKMH,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF;AAFQ,KADd;AAqBE,IAAA,KAAK,EAAEpC,UArBT;AAsBE,IAAA,KAAK,EAAC,gEAtBR;AAuBE,IAAA,OAAO,EAAEM,KAAK,CAACE,OAvBjB;AAwBE,IAAA,IAAI,EAAEF,KAAK,CAACK,IAxBd;AAyBE,IAAA,OAAO,EAAE;AACP6B,MAAAA,MAAM,EAAE,IADD;AAEPC,MAAAA,QAAQ,EAAE,GAFH;AAEQ;AACfC,MAAAA,mBAAmB,EAAE,KAHd;AAGqB;AAC5BC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,CAJV;AAI+B;AACtCC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,MADI;AAEXC,QAAAA,UAAU,EAAE,QAFD;AAGXC,QAAAA,aAAa,EAAE,QAHJ;AAIXC,QAAAA,eAAe,EAAE,SAJN;AAKXC,QAAAA,SAAS,EAAE;AALA,OALN;AAYPC,MAAAA,QAAQ,EAAE;AACRL,QAAAA,KAAK,EAAE;AADC;AAZH,KAzBX;AAyCE,IAAA,QAAQ,EAAE;AACRM,MAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP/C,UAAAA,QAAQ,CAAEiD,SAAD,IAAe;AACtB,kBAAM7C,IAAI,GAAG,CAAC,GAAG6C,SAAS,CAAC7C,IAAd,CAAb;AACAA,YAAAA,IAAI,CAAC8C,IAAL,CAAUL,OAAV;AACA,mDAAYI,SAAZ;AAAuB7C,cAAAA;AAAvB;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD,CAFM;AAYR+C,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIK,OAAJ,EAAa;AACXpD,YAAAA,QAAQ,CAAEiD,SAAD,IAAe;AACtB,oBAAM7C,IAAI,GAAG,CAAC,GAAG6C,SAAS,CAAC7C,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACiD,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BP,OAA9B;AACA,qDAAYI,SAAZ;AAAuB7C,gBAAAA;AAAvB;AACD,aAJO,CAAR;AAKD;AACF,SATS,EASP,GATO,CAAV;AAUD,OAXD,CAbM;AAyBRkD,MAAAA,WAAW,EAAGF,OAAD,IACX,IAAIN,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACP/C,UAAAA,QAAQ,CAAEiD,SAAD,IAAe;AACtB,kBAAM7C,IAAI,GAAG,CAAC,GAAG6C,SAAS,CAAC7C,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACmD,MAAL,CAAYnD,IAAI,CAACiD,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mDAAYH,SAAZ;AAAuB7C,cAAAA;AAAvB;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD;AA1BM,KAzCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmFD,CAnID;;AAoIA,eAAeR,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport tableIcons from \"../../utils/icons/tableIcons\";\r\n\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\n\r\nconst DetailedResults = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { field: \"candRegistrationNumber\", title: \"No Inscrit\" },\r\n      { field: \"specialtyCode\", title: \"Code Serie\" },\r\n      { field: \"aptitude\", title: \"Aptitude\" },\r\n      { field: \"EPF1\", title: \"EPF1\" },\r\n      { field: \"EPF2\", title: \"EPF2\" },\r\n      { field: \"cand1stName\", title: \"Nom\" },\r\n      { field: \"cand2ndName\", title: \"Prenom\" },\r\n      { field: \"cand3rdName\", title: \"Autre Noms\" },\r\n      { field: \"gender\", title: \"Gender\" },\r\n      { field: \"registrationId\", title: \"Resultats\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadCandScoreData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: centerExamSessionForResultsQuery,\r\n      variables: { id },\r\n    });\r\n    console.log(data);\r\n    const { centerExamSession } = { ...data };\r\n    const { registration } = { ...centerExamSession };\r\n    const getCand =\r\n      registration &&\r\n      registration.map((item) => ({\r\n        candRegistrationNumber: item.candRegistrationNumber,\r\n        specialty: item.specialty.specialtyName,\r\n        specialtyCode: item.specialty.specialtyCode,\r\n        aptitude: item.aptitude,\r\n        EPF1: item.EPF1,\r\n        EPF2: item.EPF2,\r\n        registrationId: item.id,\r\n        ...item.candidate,\r\n      }));\r\n    console.log({ registration });\r\n    console.log(getCand);\r\n    setState((prev) => ({ ...prev, data: getCand }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCandScoreData();\r\n    // loadTitleData();\r\n  }, []);\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div\r\n              style={{\r\n                // backgroundColor: \"#01579b\",\r\n                borderTopRightRadius: \"0.5rem\",\r\n                borderTopLeftRadius: \"0.5rem\",\r\n                // color: \"#fff\",\r\n              }}\r\n            >\r\n              <MTableToolbar\r\n                style={{\r\n                  // textColor: \"#000\",\r\n                  textColor: \"#fff\",\r\n                }}\r\n                {...props}\r\n              />\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={tableIcons}\r\n        title=\"Resultats des Candidats>>>>>>>>>>>>>??????????                \"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        options={{\r\n          paging: true,\r\n          pageSize: 100, // make initial page size\r\n          emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n          pageSizeOptions: [60, 120, 200, 400], // rows selection options\r\n          headerStyle: {\r\n            color: \"#fff\",\r\n            paddingTop: \"0.5rem\",\r\n            paddingBottom: \"0.5rem\",\r\n            backgroundColor: \"#01579b\",\r\n            maxHeight: \"0.5rem !important\",\r\n          },\r\n          rowStyle: {\r\n            color: \"#000\",\r\n          },\r\n        }}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 400);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 400);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 400);\r\n            }),\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\nexport default DetailedResults;\r\n"]},"metadata":{},"sourceType":"module"}