{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllEducationTypesQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSubjectSpecialtiesOfASpecialtyQuery, getRegisteredCandidatesPerSpecialty, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID, removeTypename, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nimport Notification from \"../utils/Notification\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    maxWidth: \"60%\",\n    // minWidth: \"60%\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nconst validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nconst ExamRegistration = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    edcuTypeID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    educTypes: [],\n    specialties: [],\n    centerNumber: \"\",\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\",\n    centerExamSessionSpecialty: {}\n  });\n  const {\n    centerNumber,\n    examID,\n    sessionID,\n    exams,\n    sessions,\n    educTypes,\n    centerByNumber,\n    examSessions,\n    centerExamSessions\n  } = state;\n\n  const loadEducTypeData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllEducationTypesQuery\n    });\n    const getEducationTypes = data && data.educationTypes;\n    const refinedEducTypes = getEducationTypes && removeTypename(getEducationTypes);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      educTypes: refinedEducTypes\n    }));\n  };\n\n  const getEducTypesOptions = educTypes && educTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n\n  const loadExamData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  useEffect(() => {\n    loadExamData();\n    loadEducTypeData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running the exam session query\");\n    const {\n      data\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: \"\"\n    }));\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerByNumber: \"\"\n    }));\n    loadCenterData();\n  }, [centerNumber]);\n\n  const loadCESData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions\n    }));\n  };\n\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: \"\"\n    }));\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  const getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n  const getCESSSubjIDs = state.centerExamSessionSpecialtyID && state.centerExamSessionSpecialtyID.split(\"/\");\n  console.dir({\n    getCESSSubjIDs\n  });\n  const {\n    data: dataRegistration\n  } = useQuery(getRegisteredCandidatesPerSpecialty, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[0],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[0]\n    }\n  });\n  const {\n    data: dataSubjSpecialty\n  } = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[1],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[1]\n    }\n  });\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\n\n  const {\n    subjectSpecialty\n  } = _objectSpread({}, getSubjSpecialty);\n\n  const refinedSubjectSpecialty = subjectSpecialty && removeTypename(subjectSpecialty);\n  const [createAttendance, {\n    loadingMut,\n    error\n  }] = useMutation(createAttendanceMutation); // const newSpecialty = specialties && specialties.map((item) => item);\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  // console.log(refinedSpecialty);\n  // const getSpecialtyOptions =\n  //   refinedSpecialty &&\n  //   refinedSpecialty.map((item) => ({\n  //     id: item.specialty.id,\n  //     value: item.id,\n  //     label: item.specialty.specialtyName,\n  //   }));\n  // console.log({ state });\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\n  // const [createAttendance, { loadingMut, error }] = useMutation(\n  //   createAttendanceMutation\n  // );\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createAttendance({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          candExamSecretCode: values.candExamSecretCode.value,\n          centerExamSessionSpecialty: getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\n          subjectSpecialty: refinedSubjectSpecialty && getObjectFromID(values.subjectSpecialty.value)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"Présence indiquée avec success\",\n          type: \"success\"\n        });\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }, \"Pr\\xE9sence candidats \\xE0 l'Ecrit\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"educTypeID\");\n      },\n      name: \"educTypeID\",\n      label: \"Type d'enseignement\",\n      component: Select,\n      placeholder: \"Type d'enseignement\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"educTypeID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 37\n        }\n      }),\n      options: getEducTypesOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"La Sp\\xE9cialit\\xE9\",\n      onChange: event => {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 27\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      component: Select,\n      label: \"Candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      options: getExamsOptions,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"collected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"collected\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Collecte de materiels\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"handin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"handin\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Remise de copies\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Inscrire Candidat\")))))));\n  });\n};\n\nexport default ExamRegistration;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useState","useEffect","Error","Yup","FRadioGroup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","useMutation","useQuery","createAttendanceMutation","getExamSessionQuery","getAllExamsQuery","getAllEducationTypesQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","getRegisteredCandidatesPerSpecialty","getSingleCenterQuery","getObjectFromID","removeTypename","getSelectedObject","useForm","Notification","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","maxWidth","borderRadius","borderBottom","borderTop","titleStyled","centerAll","minWidth","validationSchema","object","shape","ExamRegistration","classes","client","notify","setNotify","isOpen","message","type","initialValues","centerNumber","state","setState","handleSelectChange","handleInputChange","candCode","examID","edcuTypeID","sessionID","exams","sessions","educTypes","specialties","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","loadEducTypeData","data","query","getEducationTypes","educationTypes","refinedEducTypes","prev","getEducTypesOptions","map","item","value","id","label","educationTypeName","loadExamData","getExams","console","log","refinedExams","removeExamName","examName","others","getExamName","getExamsOptions","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","getCESSSubjIDs","centerExamSessionSpecialtyID","split","dataRegistration","dataSubjSpecialty","getSubjSpecialty","specialty","subjectSpecialty","refinedSubjectSpecialty","createAttendance","loadingMut","error","values","setSubmitting","resetForm","res","candExamSecretCode","setTimeout","JSON","stringify","submitForm","isSubmitting","centerCode","event","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  getObjectFromID,\r\n  removeTypename,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"60%\",\r\n    // minWidth: \"60%\",\r\n    borderRadius: \"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst ExamRegistration = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    edcuTypeID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    educTypes: [],\r\n    specialties: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    educTypes,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n  } = state;\r\n\r\n  const loadEducTypeData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllEducationTypesQuery,\r\n    });\r\n\r\n    const getEducationTypes = data && data.educationTypes;\r\n    const refinedEducTypes =\r\n      getEducationTypes && removeTypename(getEducationTypes);\r\n    setState((prev) => ({ ...prev, educTypes: refinedEducTypes }));\r\n  };\r\n\r\n  const getEducTypesOptions =\r\n    educTypes &&\r\n    educTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadEducTypeData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: \"\",\r\n    }));\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerByNumber: \"\",\r\n    }));\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: \"\",\r\n    }));\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  const getCESSSubjIDs =\r\n    state.centerExamSessionSpecialtyID &&\r\n    state.centerExamSessionSpecialtyID.split(\"/\");\r\n  console.dir({ getCESSSubjIDs });\r\n  const { data: dataRegistration } = useQuery(\r\n    getRegisteredCandidatesPerSpecialty,\r\n    {\r\n      skip: getCESSSubjIDs && !getCESSSubjIDs[0],\r\n      variables: { id: getCESSSubjIDs && getCESSSubjIDs[0] },\r\n    }\r\n  );\r\n\r\n  const { data: dataSubjSpecialty } = useQuery(\r\n    getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n    {\r\n      skip: getCESSSubjIDs && !getCESSSubjIDs[1],\r\n      variables: { id: getCESSSubjIDs && getCESSSubjIDs[1] },\r\n    }\r\n  );\r\n\r\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n  const { subjectSpecialty } = { ...getSubjSpecialty };\r\n\r\n  const refinedSubjectSpecialty =\r\n    subjectSpecialty && removeTypename(subjectSpecialty);\r\n\r\n  const [createAttendance, { loadingMut, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n\r\n  // const newSpecialty = specialties && specialties.map((item) => item);\r\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  // console.log(refinedSpecialty);\r\n  // const getSpecialtyOptions =\r\n  //   refinedSpecialty &&\r\n  //   refinedSpecialty.map((item) => ({\r\n  //     id: item.specialty.id,\r\n  //     value: item.id,\r\n  //     label: item.specialty.specialtyName,\r\n  //   }));\r\n  // console.log({ state });\r\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\r\n  // const [createAttendance, { loadingMut, error }] = useMutation(\r\n  //   createAttendanceMutation\r\n  // );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode.value,\r\n            centerExamSessionSpecialty:\r\n              getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\r\n            subjectSpecialty:\r\n              refinedSubjectSpecialty &&\r\n              getObjectFromID(values.subjectSpecialty.value),\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Présence indiquée avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Présence candidats à l'Ecrit\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"educTypeID\");\r\n                        }}\r\n                        name=\"educTypeID\"\r\n                        label=\"Type d'enseignement\"\r\n                        component={Select}\r\n                        placeholder=\"Type d'enseignement\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"educTypeID\" />}\r\n                        options={getEducTypesOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"La Spécialité\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"La Spécialité\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        component={Select}\r\n                        label=\"Candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        options={getExamsOptions}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"collected\" />}\r\n                        required\r\n                        name=\"collected\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Collecte de materiels\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"handin\" />}\r\n                        required\r\n                        name=\"handin\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Remise de copies\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Inscrire Candidat\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default ExamRegistration;\r\n"]},"metadata":{},"sourceType":"module"}