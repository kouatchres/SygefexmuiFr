{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subject\\\\UpdateSubject.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { MiniStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport { updateSubjectMutation } from '../queries&Mutations&Functions/Mutations';\nimport { singleSubjectQuery } from '../queries&Mutations&Functions/Queries';\nimport useForm from '../utils/useForm';\nimport styled from 'styled-components';\nconst Controls = styled.div.withConfig({\n  displayName: \"UpdateSubject__Controls\",\n  componentId: \"sc-1xjrkcu-0\"\n})([\"padding:0 2rem;\"]);\n\nconst UpdateSubject = ({\n  id\n}) => {\n  const [state, setState] = useForm({\n    subjectCode: '',\n    subjectName: ''\n  });\n  const client = useApolloClient();\n\n  const loadSubjData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: singleSubjectQuery,\n      variables: {\n        id\n      }\n    });\n    const getSubjData = data.subject;\n    console.log(getSubjData);\n    const {\n      subjectName,\n      subjectCode\n    } = getSubjData;\n    setState({\n      subjectCode: subjectCode,\n      subjectName: subjectName\n    });\n  };\n\n  useEffect(() => {\n    loadSubjData();\n  }, []);\n  const validationSchema = Yup.object().shape({\n    subjectName: Yup.string().required(\"Nom de la matière obligatoire\"),\n    subjectCode: Yup.string().required(\"Code de la matière  obligatoire\")\n  });\n  const [updateGender] = useMutation(updateSubjectMutation, {\n    variables: {\n      id\n    }\n  });\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: state || initialValues,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      const res = await updateGender({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          id: id\n        })\n      }); // Router.push({\n      // \tpathname: '/show/singleExam',\n      // \tquery: { id }\n      // });\n\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(MiniStyledPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, \"Modification d'info mati\\xE8re\"), __jsx(StyledForm, {\n    disabled: isSubmitting,\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }, __jsx(SygexInput, {\n    type: \"text\",\n    id: \"subjectName\",\n    name: \"subjectName\",\n    label: \"Nom de la mati\\xE8re\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(SygexInput, {\n    type: \"text\",\n    id: \"subjectCode\",\n    name: \"subjectCode\",\n    label: \"Code de la mati\\xE8re\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(ButtonStyled, {\n    className: \"submitButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, \"valid\", isSubmitting ? 'ation en cours' : 'er')))))));\n};\n\nexport default UpdateSubject;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subject/UpdateSubject.jsx"],"names":["React","useEffect","Yup","Formik","Form","useApolloClient","useMutation","MiniStyledPage","Error","SygexInput","StyledForm","ButtonStyled","StyledButton","updateSubjectMutation","singleSubjectQuery","useForm","styled","Controls","div","UpdateSubject","id","state","setState","subjectCode","subjectName","client","loadSubjData","data","query","variables","getSubjData","subject","console","log","validationSchema","object","shape","string","required","updateGender","initialValues","values","resetForm","setSubmitting","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\r\nimport { MiniStyledPage } from '../styles/StyledPage';\r\nimport Error from '../ErrorMessage.js';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport { updateSubjectMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { singleSubjectQuery } from '../queries&Mutations&Functions/Queries';\r\nimport useForm from '../utils/useForm';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Controls = styled.div`\r\npadding:0 2rem;\r\n`;\r\nconst UpdateSubject = ({ id }) => {\r\n\tconst [state, setState] = useForm({ subjectCode: '', subjectName: '' })\r\n\tconst client = useApolloClient()\r\n\r\n\r\n\tconst loadSubjData = async () => {\r\n\t\tconst { data } = await client.query({\r\n\t\t\tquery: singleSubjectQuery,\r\n\t\t\tvariables: { id }\r\n\r\n\t\t})\r\n\t\tconst getSubjData = data.subject\r\n\t\tconsole.log(getSubjData)\r\n\t\tconst {\r\n\t\t\tsubjectName,\r\n\t\t\tsubjectCode,\r\n\t\t} = getSubjData\r\n\r\n\t\tsetState({ subjectCode: subjectCode, subjectName: subjectName })\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tloadSubjData()\r\n\t}, [])\r\n\r\n\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\tsubjectName: Yup.string().required(\"Nom de la matière obligatoire\"),\r\n\t\tsubjectCode: Yup.string().required(\"Code de la matière  obligatoire\"),\r\n\t})\r\n\tconst [updateGender] = useMutation(updateSubjectMutation, {\r\n\t\tvariables: { id }\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tmethod=\"POST\"\r\n\t\t\tinitialValues={state || initialValues}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={async (values, { resetForm, setSubmitting }) => {\r\n\t\t\t\tconst res = await updateGender({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\tid: id\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\t// Router.push({\r\n\t\t\t\t// \tpathname: '/show/singleExam',\r\n\t\t\t\t// \tquery: { id }\r\n\t\t\t\t// });\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconsole.log(JSON.stringify(values, null, 2));\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tresetForm(true);\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t}, 200);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ values, isSubmitting }) => (\r\n\r\n\t\t\t\t<MiniStyledPage>\r\n\t\t\t\t\t<h4>Modification d'info matière</h4>\r\n\t\t\t\t\t<StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Controls>\r\n\t\t\t\t\t\t\t\t<SygexInput\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"subjectName\"\r\n\t\t\t\t\t\t\t\t\tname=\"subjectName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Nom de la matière\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SygexInput\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"subjectCode\"\r\n\t\t\t\t\t\t\t\t\tname=\"subjectCode\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Code de la matière\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ButtonStyled className=\"submitButton\">\r\n\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tvalid{isSubmitting ? 'ation en cours' : 'er'}\r\n\t\t\t\t\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t\t\t\t</ButtonStyled>\r\n\t\t\t\t\t\t\t</Controls>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</StyledForm>\r\n\t\t\t\t</MiniStyledPage>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nexport default UpdateSubject;\r\n"]},"metadata":{},"sourceType":"module"}