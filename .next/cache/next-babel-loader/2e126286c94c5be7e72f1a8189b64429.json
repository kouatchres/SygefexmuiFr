{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\candidate\\\\NewUpdateCandidate.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { MiniStyledPage } from \"../styles/StyledPage\";\nimport Error from \"../ErrorMessage.js\";\nimport { Formik, Form } from \"formik\";\nimport useForm from \"../utils/useForm\";\nimport format from \"date-fns\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { updateCandidateMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport { singleCandidateQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { FormikDatepicker, FormikRadio } from \"@dccs/react-formik-mui\";\nimport { FormLabel, RadioGroup } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nvar InputGroup = styled.div.withConfig({\n  displayName: \"NewUpdateCandidate__InputGroup\",\n  componentId: \"tj9fwa-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;min-width:12rem;.RadioSet{display:flex;flex-direction:row;}\"]);\n_c = InputGroup;\nvar RadioButtons = styled.div.withConfig({\n  displayName: \"NewUpdateCandidate__RadioButtons\",\n  componentId: \"tj9fwa-1\"\n})([\"display:flex;padding:0 0.5rem;label{font-size:1.3rem;}flex-direction:row;align-items:center;.RadioSet{FormikRadio{font-size:1.5rem;}padding:0 1rem;display:flex;flex-direction:row;label{font-size:1.3rem;}}\"]);\n_c2 = RadioButtons;\nvar TwoGroups = styled.div.withConfig({\n  displayName: \"NewUpdateCandidate__TwoGroups\",\n  componentId: \"tj9fwa-2\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(15rem,1fr));\"]);\n_c3 = TwoGroups;\nvar AllControls = styled.div.withConfig({\n  displayName: \"NewUpdateCandidate__AllControls\",\n  componentId: \"tj9fwa-3\"\n})([\"margin:1rem 0;display:flex;flex-direction:column;min-width:15rem;\"]);\n_c4 = AllControls;\nvar PicFrame = styled.div.withConfig({\n  displayName: \"NewUpdateCandidate__PicFrame\",\n  componentId: \"tj9fwa-4\"\n})([\"display:flex;flex-direction:column;img{margin:1rem auto;margin-top:1rem;height:18rem;width:15rem;border-radius:0.5rem;background-size:contain;background-position:center;}\"]);\n_c5 = PicFrame;\n\nvar NewUpdateCandidate = function NewUpdateCandidate(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var client = useApolloClient();\n\n  var _useForm = useForm([]),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      candidateInfo = _useForm2[0],\n      setCandidateInfo = _useForm2[1];\n\n  var uploadFile = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var files, data, res, file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = e.target.files;\n              data = new FormData();\n              data.append(\"file\", files[0]);\n              data.append(\"upload_preset\", \"ineximages\");\n              _context.next = 6;\n              return fetch(\"https://api.cloudinary.com/v1_1/inex/image/upload\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return res.json();\n\n            case 9:\n              file = _context.sent;\n              console.log(file);\n              setCandidateInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  image: file.secure_url\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadFile(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getObjectFromID = function getObjectFromID(suppliedID) {\n    var theObject = {\n      id: \"\".concat(suppliedID)\n    };\n    return theObject;\n  };\n\n  var loadCandidateData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query, error, data, getCandInfo;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: singleCandidateQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context2.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getCandInfo = data.candidate;\n              setCandidateInfo(getCandInfo);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadCandidateData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCandidateData();\n  }, []);\n\n  var initialValues = _defineProperty({\n    cand1stName: \"\",\n    cand2ndName: \"\",\n    cand3rdName: \"\",\n    momName: \"\",\n    dadName: \"\",\n    email: \"\",\n    image: \"\",\n    gender: \"\",\n    phoneNumb: \"\",\n    placeOfBirth: \"\",\n    dateOfBirth: \"\",\n    birthCertNumber: \"\"\n  }, \"gender\", \"\");\n\n  var validationSchema = Yup.object().shape({\n    cand1stName: Yup.string().required(\"Nom obligatoire\"),\n    cand2ndName: Yup.string().required(\"Prénom obligatoire\"),\n    cand3rdName: Yup.string(),\n    momName: Yup.string().required(\"Noms de la mere obligatoire\"),\n    dadName: Yup.string().required(\"Noms du pere obligatoire\"),\n    placeOfBirth: Yup.string().required(\"Lieu de naissance obligatoire\"),\n    birthCertNumber: Yup.string().required(\"Numéro de l'acte de naissance obligatoire\"),\n    phoneNumb: Yup.number().required(\"Numéro de portable obligatoire\"),\n    gender: Yup.string().required(\"Choix du sexe obligatoire\"),\n    dateOfBirth: Yup.date().min(new Date(\"01-01-1900\")).max(new Date()).required(\"Date de naissance obligatoire\"),\n    email: Yup.string().email(\"Email invalide\").required(\"Email obligatoire\")\n  }); // const Create\n\n  var _useMutation = useMutation(updateCandidateMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateCandidate = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorMut = _useMutation2$.errorMut,\n      loadingMut = _useMutation2$.loadingMut;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: candidateInfo || initialValues,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _ref4) {\n        var resetForm, setSubmitting, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                resetForm = _ref4.resetForm, setSubmitting = _ref4.setSubmitting;\n                _context3.next = 3;\n                return updateCandidate({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    id: id\n                  })\n                });\n\n              case 3:\n                res = _context3.sent;\n                Router.push({\n                  pathname: \"/show/singleCand\",\n                  query: {\n                    id: id\n                  }\n                });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, function (_ref6) {\n    var values = _ref6.values,\n        setFieldValue = _ref6.setFieldValue,\n        isSubmitting = _ref6.isSubmitting;\n    return __jsx(MiniStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \"Correction Info Candidat\"), __jsx(Error, {\n      error: errorMut,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }), __jsx(StyledForm, {\n      disabled: loadingMut || isSubmitting,\n      \"aria-busy\": loadingMut || isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, __jsx(AllControls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, __jsx(TwoGroups, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, __jsx(SygexInput, {\n      disabled: isSubmitting,\n      name: \"file\",\n      type: \"file\",\n      onChange: uploadFile,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      id: \"cand1stName\",\n      name: \"cand1stName\",\n      type: \"text\",\n      label: \"Nom\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      id: \"cand2ndName\",\n      name: \"cand2ndName\",\n      type: \"text\",\n      label: \"Pr\\xE9nom\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"cand3rdName\",\n      id: \"cand3rdName\",\n      type: \"text\",\n      label: \"Autres Noms\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"placeOfBirth\",\n      id: \"placeOfBirth\",\n      type: \"text\",\n      label: \"Lieu de Naissance\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"dadName\",\n      id: \"dadName\",\n      type: \"text\",\n      label: \"Noms du pere\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"momName\",\n      id: \"momName\",\n      type: \"text\",\n      label: \"Noms de la mere\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"birthCertNumber\",\n      id: \"birthCertNumber\",\n      type: \"text\",\n      label: \"Num\\xE9ro l'Acte de Naissance\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"phoneNumb\",\n      id: \"phoneNumb\",\n      type: \"number\",\n      label: \"Num\\xE9ro de portable\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    })), __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }, __jsx(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, __jsx(FormikDatepicker, {\n      name: \"dateOfBirth\",\n      label: \"Brith Date\",\n      format: \"DD MMMM YYYY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    })), __jsx(SygexInput, {\n      name: \"email\",\n      id: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }), __jsx(RadioButtons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, __jsx(FormLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }, \"Sexe\"), __jsx(RadioGroup, {\n      name: \"Sexe\",\n      className: \"RadioSet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 23\n      }\n    }, __jsx(FormikRadio, {\n      label: \"Female\",\n      name: \"gender\",\n      value: \"Femele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }), __jsx(FormikRadio, {\n      label: \"Male\",\n      name: \"gender\",\n      value: \"Male\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    })))), __jsx(PicFrame, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    }, __jsx(\"img\", {\n      src: candidateInfo.image,\n      alt: candidateInfo.cand1stName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }))), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n  });\n};\n\n_s(NewUpdateCandidate, \"9AdY7jpiFNKW5O+BO+CUp73t2Gs=\", false, function () {\n  return [useApolloClient, useForm, useMutation];\n});\n\n_c6 = NewUpdateCandidate;\nexport default NewUpdateCandidate; //\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"InputGroup\");\n$RefreshReg$(_c2, \"RadioButtons\");\n$RefreshReg$(_c3, \"TwoGroups\");\n$RefreshReg$(_c4, \"AllControls\");\n$RefreshReg$(_c5, \"PicFrame\");\n$RefreshReg$(_c6, \"NewUpdateCandidate\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/candidate/NewUpdateCandidate.jsx"],"names":["React","useState","useEffect","useMutation","useApolloClient","MiniStyledPage","Error","Formik","Form","useForm","format","Router","styled","Yup","updateCandidateMutation","SygexInput","StyledForm","ButtonStyled","StyledButton","singleCandidateQuery","FormikDatepicker","FormikRadio","FormLabel","RadioGroup","MuiPickersUtilsProvider","MomentUtils","InputGroup","div","RadioButtons","TwoGroups","AllControls","PicFrame","NewUpdateCandidate","id","client","candidateInfo","setCandidateInfo","uploadFile","e","files","target","data","FormData","append","fetch","method","body","res","json","file","console","log","prev","image","secure_url","getObjectFromID","suppliedID","theObject","loadCandidateData","query","variables","error","getCandInfo","candidate","initialValues","cand1stName","cand2ndName","cand3rdName","momName","dadName","email","gender","phoneNumb","placeOfBirth","dateOfBirth","birthCertNumber","validationSchema","object","shape","string","required","number","date","min","Date","max","updateCandidate","errorMut","loadingMut","values","resetForm","setSubmitting","push","pathname","setTimeout","JSON","stringify","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { MiniStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport useForm from \"../utils/useForm\";\r\nimport format from \"date-fns\";\r\nimport Router from \"next/router\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport { updateCandidateMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  SygexInput,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport { singleCandidateQuery } from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport { FormikDatepicker, FormikRadio } from \"@dccs/react-formik-mui\";\r\nimport { FormLabel, RadioGroup } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n  min-width: 12rem;\r\n  .RadioSet {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst RadioButtons = styled.div`\r\n  display: flex;\r\n  padding: 0 0.5rem;\r\n  label {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  flex-direction: row;\r\n  align-items: center;\r\n  .RadioSet {\r\n    FormikRadio {\r\n      font-size: 1.5rem;\r\n    }\r\n    padding: 0 1rem;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    label {\r\n      font-size: 1.3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TwoGroups = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\r\n  /* grid-gap: 0.09rem; */\r\n`;\r\n\r\nconst AllControls = styled.div`\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 15rem;\r\n`;\r\n\r\nconst PicFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  img {\r\n    margin: 1rem auto;\r\n    margin-top: 1rem;\r\n    height: 18rem;\r\n    width: 15rem;\r\n    border-radius: 0.5rem;\r\n    background-size: contain;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst NewUpdateCandidate = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const [candidateInfo, setCandidateInfo] = useForm([]);\r\n\r\n  const uploadFile = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"ineximages\");\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/inex/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const file = await res.json();\r\n    console.log(file);\r\n    setCandidateInfo((prev) => ({ ...prev, image: file.secure_url }));\r\n  };\r\n\r\n  const getObjectFromID = (suppliedID) => {\r\n    const theObject = { id: `${suppliedID}` };\r\n    return theObject;\r\n  };\r\n\r\n  const loadCandidateData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: singleCandidateQuery,\r\n      variables: { id },\r\n    });\r\n    const getCandInfo = data.candidate;\r\n    setCandidateInfo(getCandInfo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCandidateData();\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    cand1stName: \"\",\r\n    cand2ndName: \"\",\r\n    cand3rdName: \"\",\r\n    momName: \"\",\r\n    dadName: \"\",\r\n    email: \"\",\r\n    image: \"\",\r\n    gender: \"\",\r\n    phoneNumb: \"\",\r\n    placeOfBirth: \"\",\r\n    dateOfBirth: \"\",\r\n    birthCertNumber: \"\",\r\n    gender: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    cand1stName: Yup.string().required(\"Nom obligatoire\"),\r\n    cand2ndName: Yup.string().required(\"Prénom obligatoire\"),\r\n    cand3rdName: Yup.string(),\r\n    momName: Yup.string().required(\"Noms de la mere obligatoire\"),\r\n    dadName: Yup.string().required(\"Noms du pere obligatoire\"),\r\n    placeOfBirth: Yup.string().required(\"Lieu de naissance obligatoire\"),\r\n    birthCertNumber: Yup.string().required(\r\n      \"Numéro de l'acte de naissance obligatoire\"\r\n    ),\r\n    phoneNumb: Yup.number().required(\"Numéro de portable obligatoire\"),\r\n\r\n    gender: Yup.string().required(\"Choix du sexe obligatoire\"),\r\n    dateOfBirth: Yup.date()\r\n      .min(new Date(\"01-01-1900\"))\r\n      .max(new Date())\r\n      .required(\"Date de naissance obligatoire\"),\r\n    email: Yup.string().email(\"Email invalide\").required(\"Email obligatoire\"),\r\n  });\r\n\r\n  // const Create\r\n  const [updateCandidate, { errorMut, loadingMut }] = useMutation(\r\n    updateCandidateMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={candidateInfo || initialValues}\r\n      enableReinitialize={true}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await updateCandidate({\r\n          variables: {\r\n            ...values,\r\n            id,\r\n          },\r\n        });\r\n        Router.push({\r\n          pathname: \"/show/singleCand\",\r\n          query: { id },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ values, setFieldValue, isSubmitting }) => (\r\n        <MiniStyledPage>\r\n          <h4>Correction Info Candidat</h4>\r\n          <Error error={errorMut} />\r\n          <StyledForm\r\n            disabled={loadingMut || isSubmitting}\r\n            aria-busy={loadingMut || isSubmitting}\r\n          >\r\n            <Form>\r\n              <AllControls>\r\n                <TwoGroups>\r\n                  <InputGroup>\r\n                    <SygexInput\r\n                      disabled={isSubmitting}\r\n                      name=\"file\"\r\n                      type=\"file\"\r\n                      onChange={uploadFile}\r\n                    />\r\n\r\n                    <SygexInput\r\n                      id=\"cand1stName\"\r\n                      name=\"cand1stName\"\r\n                      type=\"text\"\r\n                      label=\"Nom\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      id=\"cand2ndName\"\r\n                      name=\"cand2ndName\"\r\n                      type=\"text\"\r\n                      label=\"Prénom\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"cand3rdName\"\r\n                      id=\"cand3rdName\"\r\n                      type=\"text\"\r\n                      label=\"Autres Noms\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"placeOfBirth\"\r\n                      id=\"placeOfBirth\"\r\n                      type=\"text\"\r\n                      label=\"Lieu de Naissance\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"dadName\"\r\n                      id=\"dadName\"\r\n                      type=\"text\"\r\n                      label=\"Noms du pere\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"momName\"\r\n                      id=\"momName\"\r\n                      type=\"text\"\r\n                      label=\"Noms de la mere\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n\r\n                    <SygexInput\r\n                      name=\"birthCertNumber\"\r\n                      id=\"birthCertNumber\"\r\n                      type=\"text\"\r\n                      label=\"Numéro l'Acte de Naissance\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"phoneNumb\"\r\n                      id=\"phoneNumb\"\r\n                      type=\"number\"\r\n                      label=\"Numéro de portable\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </InputGroup>\r\n                  <InputGroup>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      <FormikDatepicker\r\n                        name=\"dateOfBirth\"\r\n                        label=\"Brith Date\"\r\n                        format=\"DD MMMM YYYY\"\r\n                      ></FormikDatepicker>\r\n                    </MuiPickersUtilsProvider>\r\n                    <SygexInput\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <RadioButtons>\r\n                      <FormLabel>Sexe</FormLabel>\r\n                      <RadioGroup name=\"Sexe\" className=\"RadioSet\">\r\n                        <FormikRadio\r\n                          label=\"Female\"\r\n                          name=\"gender\"\r\n                          value=\"Femele\"\r\n                        />\r\n                        <FormikRadio label=\"Male\" name=\"gender\" value=\"Male\" />\r\n                      </RadioGroup>\r\n                    </RadioButtons>\r\n                  </InputGroup>\r\n                  <PicFrame>\r\n                    <img\r\n                      src={candidateInfo.image}\r\n                      alt={candidateInfo.cand1stName}\r\n                    />\r\n                  </PicFrame>\r\n                </TwoGroups>\r\n                <ButtonStyled>\r\n                  <StyledButton type=\"submit\" disabled={isSubmitting}>\r\n                    Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                  </StyledButton>\r\n                </ButtonStyled>\r\n              </AllControls>\r\n            </Form>\r\n          </StyledForm>\r\n        </MiniStyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewUpdateCandidate;\r\n\r\n//\r\n"]},"metadata":{},"sourceType":"module"}