{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionList.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport MyDialog from \"../utils/MyDialog\";\nimport { Edit as EditIcon, Add as AddIcon } from \"@material-ui/icons\";\nimport Button from \"@material-ui/core/Button\";\nimport NewDivision from \"./NewDivision\";\n\nconst DivisionList = () => {\n  const client = useApolloClient();\n  const {\n    0: isDialogOpen,\n    1: setIsDialogOpen\n  } = useState(false);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\",\n      grouping: false\n    }, {\n      field: \"divName\",\n      title: \"Division Name\"\n    }, {\n      field: \"divCode\",\n      title: \"Division Code\",\n      grouping: false\n    }],\n    data: []\n  });\n\n  const loadDivisionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllRegionsAndDivisionsQuery\n    });\n\n    const {\n      regions\n    } = _objectSpread({}, data);\n\n    const getDivisions = regions.map(item => {\n      const divInfos = item.division.map(division => _objectSpread({\n        regName: item.regName,\n        regCode: item.regCode\n      }, division));\n      return divInfos;\n    });\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: getDivisions.flat(1)\n    }));\n  };\n\n  useEffect(() => {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n\n  const handleDialogClose = event => {\n    setIsDialogOpen(false);\n  }; // const handleId = (event) => {\n  //   setDialogId(event.target.value);\n  // };\n  // const handleWord = (event) => {\n  //   setDialogWord(event.target.value);\n  // };\n\n\n  console.dir(state.data);\n  const actions = [{\n    icon: () => __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Add User\",\n    isFreeAction: true,\n    onClick: (event, rowData) => {\n      setIsDialogOpen(true);\n    }\n  }, {\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Edit User\",\n    onClick: (event, rowData) => {\n      setIsDialogOpen(true);\n      console.log(rowData.id);\n    }\n  }];\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    title: \"Users List\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(MyDialog, {\n    title: \"Add User\",\n    isOpen: isDialogOpen,\n    onClose: handleDialogClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(NewDivision, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DivisionList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionList.jsx"],"names":["React","useEffect","useState","MaterialTable","Paper","useApolloClient","getAllRegionsAndDivisionsQuery","tableIcons","MyDialog","Edit","EditIcon","Add","AddIcon","Button","NewDivision","DivisionList","client","isDialogOpen","setIsDialogOpen","state","setState","columns","field","title","grouping","data","loadDivisionData","error","query","regions","getDivisions","map","item","divInfos","division","regName","regCode","prev","flat","console","log","handleDialogClose","event","dir","actions","icon","tooltip","isFreeAction","onClick","rowData","id","marginTop","position","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport MyDialog from \"../utils/MyDialog\";\r\nimport { Edit as EditIcon, Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NewDivision from \"./NewDivision\";\r\n\r\nconst DivisionList = () => {\r\n  const client = useApolloClient();\r\n\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n        grouping: false,\r\n      },\r\n      { field: \"divName\", title: \"Division Name\" },\r\n      { field: \"divCode\", title: \"Division Code\", grouping: false },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsAndDivisionsQuery,\r\n    });\r\n    const { regions } = { ...data };\r\n\r\n    const getDivisions = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => ({\r\n        regName: item.regName,\r\n        regCode: item.regCode,\r\n        ...division,\r\n      }));\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getDivisions.flat(1) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  const handleDialogClose = (event) => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  // const handleId = (event) => {\r\n  //   setDialogId(event.target.value);\r\n  // };\r\n\r\n  // const handleWord = (event) => {\r\n  //   setDialogWord(event.target.value);\r\n  // };\r\n\r\n  console.dir(state.data);\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Add User\",\r\n      isFreeAction: true,\r\n      onClick: (event, rowData) => {\r\n        setIsDialogOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Edit User\",\r\n      onClick: (event, rowData) => {\r\n        setIsDialogOpen(true);\r\n        console.log(rowData.id)\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n        title=\"Users List\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n      />\r\n      <MyDialog\r\n        title=\"Add User\"\r\n        isOpen={isDialogOpen}\r\n        onClose={handleDialogClose}\r\n      >\r\n        <NewDivision />\r\n      </MyDialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default DivisionList;\r\n"]},"metadata":{},"sourceType":"module"}