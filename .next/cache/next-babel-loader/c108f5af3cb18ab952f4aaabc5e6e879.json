{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\candidate\\\\ResultDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { roundFloatNumber } from \"../../queries&Mutations&Functions/Functions\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  containerStyled: {\n    paddingLeft: \"0.2rem\",\n    display: \"grid\",\n    gridTemplateColumns: \"4fr 0.3fr 1.5fr 1.5fr\",\n    alignItems: \"left\",\n    justifyItems: \"left\",\n    borderBottom: \"0.1rem solid #000\"\n  }\n});\n\nconst ResultDetails = ({\n  score\n}) => {\n  const classes = useStyles();\n\n  const {\n    subjectAve,\n    coeff,\n    subjectSpecialty\n  } = _objectSpread({}, score);\n\n  const {\n    subject\n  } = _objectSpread({}, subjectSpecialty);\n\n  return __jsx(Grid, {\n    container: true,\n    className: classes.containerStyled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, subject.subjectName))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, coeff))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, subjectAve))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, roundFloatNumber(coeff * subjectAve, 3)))));\n};\n\nexport default ResultDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/candidate/ResultDetails.jsx"],"names":["React","roundFloatNumber","Grid","Typography","makeStyles","useStyles","containerStyled","paddingLeft","display","gridTemplateColumns","alignItems","justifyItems","borderBottom","ResultDetails","score","classes","subjectAve","coeff","subjectSpecialty","subject","subjectName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,6CAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAE5BE,EAAAA,eAAe,EAAC;AACjBC,IAAAA,WAAW,EAAC,QADK;AAEdC,IAAAA,OAAO,EAAE,MAFK;AAGdC,IAAAA,mBAAmB,EAAE,uBAHP;AAIdC,IAAAA,UAAU,EAAE,MAJE;AAKdC,IAAAA,YAAY,EAAE,MALA;AAMdC,IAAAA,YAAY,EAAC;AANC;AAFY,CAAD,CAA5B;;AAgBA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAEnC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AACA,QAAM;AAAEW,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,wBAA+CJ,KAA/C,CAAN;;AACA,QAAM;AAAEK,IAAAA;AAAF,wBAAmBD,gBAAnB,CAAN;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEH,OAAO,CAACT,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAa,IAAA,OAAO,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOa,OAAO,CAACC,WAAf,CADF,CADF,CADA,EAMA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAa,IAAA,OAAO,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAP,CADF,CADF,CANA,EAWA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAa,IAAA,OAAO,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,UAAP,CADF,CADF,CAXA,EAgBA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAa,IAAA,OAAO,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOf,gBAAgB,CAACgB,KAAK,GAAGD,UAAT,EAAqB,CAArB,CAAvB,CADF,CADF,CAhBA,CADF;AAwBD,CA9BD;;AA+BA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\nimport { roundFloatNumber } from \"../../queries&Mutations&Functions/Functions\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n \r\n containerStyled:{\r\npaddingLeft:\"0.2rem\",\r\n   display: \"grid\",\r\n   gridTemplateColumns: \"4fr 0.3fr 1.5fr 1.5fr\",\r\n   alignItems: \"left\",\r\n   justifyItems: \"left\",\r\n   borderBottom:\"0.1rem solid #000\",\r\n  \r\n  }\r\n\r\n})\r\n \r\n\r\n\r\nconst ResultDetails = ({ score }) => {\r\n\r\n  const classes = useStyles()\r\n  const { subjectAve, coeff, subjectSpecialty } = { ...score };\r\n  const { subject } = { ...subjectSpecialty };\r\n\r\n  return (\r\n    <Grid container className={classes.containerStyled}>\r\n    <Grid item>\r\n      <Typography  variant=\"body1\">\r\n        <span>{subject.subjectName}</span>\r\n      </Typography>\r\n      </Grid>\r\n    <Grid item>\r\n      <Typography  variant=\"body1\">\r\n        <span>{coeff}</span>\r\n      </Typography>\r\n      </Grid>\r\n    <Grid item>\r\n      <Typography  variant=\"body1\">\r\n        <span>{subjectAve}</span>\r\n      </Typography>\r\n      </Grid>\r\n    <Grid item>\r\n      <Typography  variant=\"body1\">\r\n        <span>{roundFloatNumber(coeff * subjectAve, 3)}</span>\r\n      </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ResultDetails;\r\n"]},"metadata":{},"sourceType":"module"}