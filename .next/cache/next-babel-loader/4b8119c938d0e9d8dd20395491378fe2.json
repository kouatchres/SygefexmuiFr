{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\rank\\\\NewRankList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport useTable from \"../utils/useTable\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { Paper, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport Popup from \"../utils/Popup\";\nimport Button from \"@material-ui/core/Button\";\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\nvar headCells = [{\n  id: \"rankName\",\n  label: \"Libelle Poste\"\n}, {\n  id: \"rankCode\",\n  label: \"Code Poste\"\n}, {\n  id: \"id\",\n  label: \"ID\"\n}];\n\nvar NewRankList = function NewRankList() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useTable = useTable(),\n      TblContainer = _useTable.TblContainer;\n\n  var _useState = useState([]),\n      ranks = _useState[0],\n      setRanks = _useState[1];\n\n  var loadRanksData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, ranks;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRanksQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), ranks = _data.ranks;\n              console.log(ranks);\n              setRanks(ranks);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRanksData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRanksData();\n    console.log(ranks);\n  }, []);\n  return __jsx(Paper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(TblContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, ranks && ranks.map(function (item) {\n    return __jsx(TableRow, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, item.rankName), __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, item.rankCode), __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, item.id));\n  }))));\n};\n\n_s(NewRankList, \"Mo+mmryMZBRvE4zy8oB91bvnLMc=\", false, function () {\n  return [useApolloClient, useTable];\n});\n\n_c = NewRankList;\nexport default NewRankList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRankList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/rank/NewRankList.jsx"],"names":["React","useState","useEffect","useTable","useApolloClient","Paper","TableBody","TableRow","TableCell","Popup","Button","getAllRanksQuery","headCells","id","label","NewRankList","client","TblContainer","ranks","setRanks","loadRanksData","query","error","data","console","log","map","item","rankName","rankCode"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAIA,IAAMC,SAAS,GAAC,CACd;AAAEC,EAAAA,EAAE,EAAC,UAAL;AAAiBC,EAAAA,KAAK,EAAC;AAAvB,CADc,EAEd;AAAED,EAAAA,EAAE,EAAC,UAAL;AAAiBC,EAAAA,KAAK,EAAC;AAAvB,CAFc,EAGd;AAAED,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,KAAK,EAAC;AAAjB,CAHc,CAAhB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,MAAMC,MAAM,GAAGZ,eAAe,EAA9B;;AADwB,kBAECD,QAAQ,EAFT;AAAA,MAEhBc,YAFgB,aAEhBA,YAFgB;;AAAA,kBAGEhB,QAAQ,CAAC,EAAD,CAHV;AAAA,MAGjBiB,KAHiB;AAAA,MAGVC,QAHU;;AAKxB,MAAMC,aAAa;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUJ,MAAM,CAACK,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAEV;AADkC,eAAb,CADV;;AAAA;AAAA;AACZW,cAAAA,KADY,uBACZA,KADY;AACLC,cAAAA,IADK,uBACLA,IADK;AAAA,wCAIGA,IAJH,GAIZL,KAJY,SAIZA,KAJY;AAKpBM,cAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEAC,cAAAA,QAAQ,CAAED,KAAF,CAAR;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbE,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAUAlB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,aAAa;AAEbI,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IACJA,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD;AAAA,WACR,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACd,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYc,IAAI,CAACC,QAAjB,CADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACE,QAAjB,CAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACd,EAAjB,CAHF,CADQ;AAAA,GAAV,CAFJ,CADF,CADF,CADF;AAgBD,CArCD;;GAAME,W;UACWX,e,EACUD,Q;;;KAFrBY,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useTable from \"../utils/useTable\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { Paper, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\nimport Popup from \"../utils/Popup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getAllRanksQuery } from \"../queries&Mutations&Functions/Queries\";\r\n\r\n\r\n\r\nconst headCells=[\r\n  { id:\"rankName\", label:\"Libelle Poste\"},\r\n  { id:\"rankCode\", label:\"Code Poste\"},\r\n  { id:\"id\", label:\"ID\"},\r\n]\r\n\r\nconst NewRankList = () => {\r\n  const client = useApolloClient();\r\n  const { TblContainer } = useTable();\r\n  const [ranks, setRanks] = useState([]);\r\n\r\n  const loadRanksData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRanksQuery,\r\n    });\r\n    const { ranks } = { ...data };\r\n    console.log(ranks);\r\n\r\n    setRanks( ranks );\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRanksData();\r\n\r\n    console.log(ranks);\r\n  }, []);\r\n\r\n  return (\r\n    <Paper>\r\n      <TblContainer>\r\n        <TableBody>\r\n          {ranks &&\r\n            ranks.map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.rankName}</TableCell>\r\n                <TableCell>{item.rankCode}</TableCell>\r\n                <TableCell>{item.id}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default NewRankList;\r\n"]},"metadata":{},"sourceType":"module"}