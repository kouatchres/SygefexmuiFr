{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport RegistrationDetails from './RegistrationDetails';\nimport Error from \"../../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nconst CenterRegistrationDetails = ({\n  id\n}) => {\n  // static propTypes = { id: PropTypes.string.isRequired };\n  const client = useApolloClient();\n  const classes = useStyles();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"No\",\n      title: \"Region\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"divName\",\n      title: \"Dept\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"townName\",\n      title: \"Ville\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerName\",\n      title: \"Centre\",\n      options: {\n        width: 400,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerNumber\",\n      title: \"No\",\n      // grouping: false,\n      type: \"numeric\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }],\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  });\n  const initialValues = {};\n\n  const loadCenterRegistrationInfo = async () => {\n    const {\n      data\n    } = await client.query({\n      query: centerExamSessionForResultsQuery,\n      variables: {\n        id\n      }\n    });\n    const getCenterExamSession = data.centerExamSession;\n    const {\n      registration,\n      center,\n      examSession\n    } = getCenterExamSession;\n\n    const {\n      exam,\n      session\n    } = _objectSpread({}, examSession);\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      center,\n      registration,\n      exam,\n      session\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterRegistrationInfo();\n  }, []);\n  const {\n    center,\n    session,\n    exam,\n    registration\n  } = registrationInfo;\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 2\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(\"div\", {\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.pageStyled,\n    elevation: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    className: classes.centerAll,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    className: classes.titleStyled,\n    color: \"primary\",\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Resultats Complets Du: \", exam && exam.examName, \", Session: \", session && session.sessionName, \", centre: \", center && center.centerCode))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 18\n    }\n  }, __jsx(MaterialTable, {\n    className: classes.head,\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#829079\",\n          borderTopRightRadius: \"0.5rem\",\n          borderTopLeftRadius: \"0.5rem\",\n          color: \"#ede6b9\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, __jsx(MTableToolbar, _extends({\n        style: {\n          // textColor: \"#000\",\n          textColor: \"#fff\"\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      })))\n    },\n    icons: tableIcons,\n    title: \"Liste des Candidats..................                            \",\n    columns: state.columns,\n    data: state.registration,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        // backgroundColor: \"#abb\",\n        color: \"#ede6b9\",\n        backgroundColor: \"#b9925e\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    actions: actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouveau Centre\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(NewCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), __jsx(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, __jsx(UpdateCenter, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }))))))));\n};\n\nexport default CenterRegistrationDetails; // {\n//     registration && registration.map((item) => (\n//         <RegistrationDetails key={item.id} registration={item} />\n//     ))\n// }","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","RegistrationDetails","Error","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","state","setState","columns","field","title","options","headerNoWrap","type","center","exam","session","registration","initialValues","loadCenterRegistrationInfo","data","query","variables","getCenterExamSession","centerExamSession","examSession","prev","registrationInfo","values","isSubmitting","examName","sessionName","centerCode","head","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","textColor","tableIcons","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","actions","isAddPopupOpen","handleAddPopupClose","deleteConfirmDialog","subtitle","isOpen","handleDeleteConfirmDialog","onConfirm","notify","setNotify","updatePopupState","handleUpdatePopupClose"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport RegistrationDetails from './RegistrationDetails'\r\nimport Error from \"../../ErrorMessage\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails =({id})=> {\r\n    // static propTypes = { id: PropTypes.string.isRequired };\r\nconst client = useApolloClient()\r\nconst classes= useStyles()\r\nconst [state, setState] = useState({\r\n   columns: [\r\n      {\r\n        field: \"No\",\r\n        title: \"Region\",\r\noptions: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n\r\n      },\r\n     \r\n      { field: \"divName\", title: \"Dept\",\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"townName\", title: \"Ville\" ,\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"centerName\", title: \"Centre\",\r\n      options: {\r\n            width: 400,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      \r\n      {\r\n        field: \"centerNumber\",\r\n        title: \"No\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n        options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n      },\r\n    ],\r\n     center:\"\", exam:\"\", session:\"\", registration:[],\r\n})\r\n\r\n\r\nconst initialValues ={}\r\n\r\nconst loadCenterRegistrationInfo=async()=>{\r\n    const { data} = await client.query({\r\nquery:centerExamSessionForResultsQuery,\r\nvariables:{id}\r\n\r\n    })\r\n\r\n    const getCenterExamSession  = data.centerExamSession \r\n                    const {  registration, center,examSession } = getCenterExamSession\r\n                    const { exam, session } = { ...examSession }\r\n\r\n    setState((prev)=>({...prev,center, registration,exam,session }))\r\n}\r\n\r\n        useEffect(()=>{\r\n        loadCenterRegistrationInfo()\r\n        },[])\r\nconst { center, session, exam, registration } =registrationInfo\r\n\r\n\r\n\r\n\r\n                    return (\r\n\r\n\r\n <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats Complets Du: {exam && exam.examName}, Session: {session && session.sessionName}, centre: {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                 <div>\r\n        <MaterialTable\r\n          className={classes.head}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#829079\",\r\n                  borderTopRightRadius: \"0.5rem\",\r\n                  borderTopLeftRadius: \"0.5rem\",\r\n                  color: \"#ede6b9\",\r\n                }}\r\n              >\r\n                <MTableToolbar\r\n                  style={{\r\n                    // textColor: \"#000\",\r\n                    textColor: \"#fff\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            ),\r\n          }}\r\n          icons={tableIcons}\r\n          title=\"Liste des Candidats..................                            \"\r\n          columns={state.columns}\r\n          data={state.registration}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            grouping: true,\r\n            paging: true,\r\n            pageSize: 50, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n            headerStyle: {\r\n              paddingTop: \"0.5rem\",\r\n              paddingBottom: \"0.5rem\",\r\n              // backgroundColor: \"#abb\",\r\n              color: \"#ede6b9\",\r\n              backgroundColor: \"#b9925e\",\r\n              maxHeight: \"0.5rem !important\",\r\n            },\r\n            rowStyle: {\r\n              color: \"#000\",\r\n            },\r\n          }}\r\n          actions={actions}\r\n        />\r\n        <AddPopup\r\n          title=\"Nouveau Centre\"\r\n          isOpen={isAddPopupOpen}\r\n          onClose={handleAddPopupClose}\r\n        >\r\n          <NewCenter />\r\n        </AddPopup>\r\n        <ConfirmDialog\r\n          title={deleteConfirmDialog.title}\r\n          subtitle={deleteConfirmDialog.subtitle}\r\n          isOpen={deleteConfirmDialog.isOpen}\r\n          onClose={handleDeleteConfirmDialog}\r\n          onConfirm={deleteConfirmDialog.onConfirm}\r\n        />\r\n        <Notification notify={notify} setNotify={setNotify} />\r\n\r\n        <UpdatePopup\r\n          // title={updatePopupState.id}\r\n          isOpen={updatePopupState.isOpen}\r\n          onClose={handleUpdatePopupClose}\r\n        >\r\n          <UpdateCenter id={updatePopupState.id} />\r\n        </UpdatePopup>\r\n      </div>\r\n                </Grid>\r\n            </Form>\r\n          </Paper>\r\n          </div>\r\n            )}\r\n    </Formik>\r\n        );\r\n               \r\n}\r\n\r\nexport default CenterRegistrationDetails;\r\n\r\n      \r\n                                          // {\r\n                                          //     registration && registration.map((item) => (\r\n                                          //         <RegistrationDetails key={item.id} registration={item} />\r\n                                          //     ))\r\n                                          // }"]},"metadata":{},"sourceType":"module"}