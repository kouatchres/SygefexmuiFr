{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\centerExamSessionSpecialty\\\\CenterTakesSpecialty.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport Error from \"../ErrorMessage.js\";\nimport { Formik, Form } from \"formik\";\nimport { SygexInput, SygefexSelect, StyledForm, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { getSelectedObject, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllEducationTypesQuery, getAllSpecialtiesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nconst InputGroup = styled.div.withConfig({\n  displayName: \"CenterTakesSpecialty__InputGroup\",\n  componentId: \"sc-1154a7o-0\"\n})([\"display:flex;flex-direction:column;min-width:13rem;margin:0 1rem;\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"CenterTakesSpecialty__AllControls\",\n  componentId: \"sc-1154a7o-1\"\n})([\"display:flex;flex-direction:column;\"]);\nconst validationSchema = Yup.object().shape({\n  // exam: Yup\n  //     .string()\n  //     .required(\"Choix De l'examen Obligatoire\"),\n  // session: Yup\n  //     .string()\n  //     .required(\"Choix de la session Obligatoire\"),\n  // centerNumber: Yup\n  //     .number()\n  //     .min(0, 'Pas de Numéro négative')\n  //     .required('Numéro du centre obligatoire'),\n  // educType: Yup\n  //     .string()\n  //     .required(\"Choix du Type d'enseignement Obligatoire\"),\n  specialty: Yup.string().required(\"Série Obligatoire\")\n});\n\nconst NewCenterTakesSpecialty = () => {\n  const initialValues = {\n    centerName: \"\",\n    centerNumber: \"\",\n    specialty: \"\"\n  };\n  const [state, setState, handleReactSelectChange] = useForm({\n    examID: \"\",\n    sessionID: \"\",\n    educTypeID: \"\",\n    centerNumber: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState({\n      [name]: val\n    });\n  };\n\n  const makeCenterVariableObject = centerCodeValue => {\n    const storedCenter = {\n      centerNumber: `${centerCodeValue}`\n    };\n    return storedCenter;\n  };\n\n  const makeExaminerObject = profCodeValue => {\n    const storedProf = {\n      examinerCode: `${profCodeValue}`\n    };\n    return storedProf;\n  };\n\n  const makeCESSObject = candCodeValue => {\n    const objCESS = {\n      id: `${candCodeValue}`\n    };\n    return objCESS;\n  };\n\n  const {\n    data: dataExams,\n    loading: loadingExams,\n    errorExams\n  } = useQuery(getAllExamsQuery);\n  const getExams = dataExams && dataExams.exams;\n  console.log(getExams);\n  const removeExamName = getExams && getExams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n  const refinedExams = getExams && removeTypename(removeExamName);\n  const getExamOptions = getExams && getExams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n  const {\n    data: dataSession,\n    loading: loadingSession,\n    errorSession\n  } = useQuery(getAllSessionsQuery);\n  const getSessions = dataSession && dataSession.sessions;\n  const refinedSessions = removeTypename(getSessions);\n  const getSessionOptions = getSessions && getSessions.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.sessionName\n  }));\n  const {\n    data: dataExamSession,\n    loading: loadingExamSession,\n    errorExamSession\n  } = useQuery(getExamSessionQuery, {\n    skip: !state.examID || !state.sessionID,\n    variables: {\n      exam: getExams && getSelectedObject(refinedExams, state.examID),\n      session: getSessions && getSelectedObject(refinedSessions, state.sessionID)\n    }\n  });\n  console.log(dataExamSession);\n  const getExamSessions = dataExamSession && dataExamSession.examSessions;\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\n  const reducedES = refinedES && refinedES[0];\n  console.log(reducedES);\n  const {\n    data: dataCenter,\n    loading: loadingCenter,\n    errorCenter\n  } = useQuery(getSingleCenterQuery, {\n    skip: !state.centerNumber,\n    variables: {\n      centerNumber: state.centerNumber\n    }\n  });\n  const getCenterByNumber = dataCenter && dataCenter.centerByNumber;\n  const refinedCenter = getCenterByNumber && removeTypename(getCenterByNumber);\n  console.log(getCenterByNumber);\n  const {\n    data: dataCES,\n    loading: loadingCES,\n    error: errorCES\n  } = useQuery(getSingleCenterExamSessionQuery, {\n    skip: !reducedES || !getCenterByNumber,\n    variables: {\n      examSession: reducedES && reducedES,\n      center: refinedCenter && refinedCenter\n    }\n  });\n  console.log(dataCES);\n  const getCenterExamSessionsByCode = dataCES && dataCES.centerExamSessionsByCode;\n  console.log(getCenterExamSessionsByCode); // remove typename from the object\n\n  const refinedCenterExamSessionsByCode = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode); // transform the array into a single object\n\n  const getCES = refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\n  console.log(getCES);\n  const {\n    data: dataEducType,\n    loading: loadingEducType,\n    errorEducType\n  } = useQuery(getAllEducationTypesQuery);\n  console.log(dataEducType);\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\n  const getEducTypeOptions = getEducationTypes && getEducationTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n  const {\n    data: dataSpecialty,\n    loading: loadingSpecialty,\n    errorSpecialty\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\n    skip: !state.educTypeID,\n    variables: {\n      id: state.educTypeID\n    }\n  });\n  console.log(dataSpecialty);\n  const getEducationType = dataSpecialty && dataSpecialty.educationType;\n\n  const specialtyEducType = _objectSpread({}, getEducationType);\n\n  const {\n    specialty\n  } = specialtyEducType;\n  console.log(specialty);\n  const removeSpecialtyName = specialty && specialty.map((_ref2) => {\n    let {\n      specialtyName\n    } = _ref2,\n        others = _objectWithoutProperties(_ref2, [\"specialtyName\"]);\n\n    return others;\n  });\n  const refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\n  const getSpecialtyOptions = specialty && specialty.map(item => ({\n    value: item.id,\n    label: item.specialtyName\n  }));\n  const [createCenterExamSessionSpecialty, {\n    error\n  }] = useMutation(createCenterExamSessionSpecialtyMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      const res = await createCenterExamSessionSpecialty({\n        variables: {\n          specialty: refinedSpecialty && getSelectedObject(refinedSpecialty, values.specialty.value),\n          centerExamSession: getCES && getCES\n        }\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res.data.createCenterExamSessionSpecialty);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(MinimStyledPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"Sp\\xE9cialit\\xE9s offertes par Centre\"), __jsx(Error, {\n      error: error || errorExams || errorSession || errorCenter || errorCES || errorExamSession || errorSpecialty || errorEducType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loadingExams || loadingSession || loadingCenter || loadingCES || loadingExamSession || loadingSpecialty || loadingEducType,\n      \"aria-busy\": isSubmitting || loadingExams || loadingSession || loadingCenter || loadingCES || loadingExamSession || loadingSpecialty || loadingEducType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, __jsx(AllControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, __jsx(SygexInput, {\n      value: getCenterByNumber && getCenterByNumber.centerCode,\n      name: \"centerName\",\n      type: \"text\",\n      label: \" Nom du centre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      onChange: handleChange,\n      name: \"centerNumber\",\n      type: \"number\",\n      value: state.centerNumber || \"\",\n      label: \"Num\\xE9ro du centre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"sessionID\",\n      options: getSessionOptions,\n      placeholder: \"La Session\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"examID\",\n      options: getExamOptions,\n      placeholder: \"L'Examen\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"educTypeID\",\n      options: getEducTypeOptions,\n      placeholder: \"Type d'Enseignement\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: value => setFieldValue(\"specialty\", value),\n      name: \"specialty\",\n      options: getSpecialtyOptions,\n      placeholder: \"La Série\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    })), __jsx(ButtonStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n  });\n};\n\nexport default NewCenterTakesSpecialty;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/centerExamSessionSpecialty/CenterTakesSpecialty.jsx"],"names":["React","useMutation","useQuery","MinimStyledPage","Error","Formik","Form","SygexInput","SygefexSelect","StyledForm","ButtonStyled","StyledButton","styled","Yup","useForm","getSelectedObject","removeTypename","createCenterExamSessionSpecialtyMutation","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllEducationTypesQuery","getAllSpecialtiesOfAnEducationTypeQuery","InputGroup","div","AllControls","validationSchema","object","shape","specialty","string","required","NewCenterTakesSpecialty","initialValues","centerName","centerNumber","state","setState","handleReactSelectChange","examID","sessionID","educTypeID","handleChange","e","name","value","type","target","val","parseInt","makeCenterVariableObject","centerCodeValue","storedCenter","makeExaminerObject","profCodeValue","storedProf","examinerCode","makeCESSObject","candCodeValue","objCESS","id","data","dataExams","loading","loadingExams","errorExams","getExams","exams","console","log","removeExamName","map","examName","others","refinedExams","getExamOptions","item","label","dataSession","loadingSession","errorSession","getSessions","sessions","refinedSessions","getSessionOptions","sessionName","dataExamSession","loadingExamSession","errorExamSession","skip","variables","exam","session","getExamSessions","examSessions","refinedES","reducedES","dataCenter","loadingCenter","errorCenter","getCenterByNumber","centerByNumber","refinedCenter","dataCES","loadingCES","error","errorCES","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessionsByCode","getCES","dataEducType","loadingEducType","errorEducType","getEducationTypes","educationTypes","getEducTypeOptions","educationTypeName","dataSpecialty","loadingSpecialty","errorSpecialty","getEducationType","educationType","specialtyEducType","removeSpecialtyName","specialtyName","refinedSpecialty","getSpecialtyOptions","createCenterExamSessionSpecialty","values","resetForm","setSubmitting","res","centerExamSession","setTimeout","JSON","stringify","setFieldValue","isSubmitting","centerCode"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  SygexInput,\r\n  SygefexSelect,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport {\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSpecialtiesOfAnEducationTypeQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 13rem;\r\n  margin: 0 1rem;\r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* min-width: 17rem; */\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // exam: Yup\r\n  //     .string()\r\n  //     .required(\"Choix De l'examen Obligatoire\"),\r\n  // session: Yup\r\n  //     .string()\r\n  //     .required(\"Choix de la session Obligatoire\"),\r\n  // centerNumber: Yup\r\n  //     .number()\r\n  //     .min(0, 'Pas de Numéro négative')\r\n  //     .required('Numéro du centre obligatoire'),\r\n  // educType: Yup\r\n  //     .string()\r\n  //     .required(\"Choix du Type d'enseignement Obligatoire\"),\r\n  specialty: Yup.string().required(\"Série Obligatoire\"),\r\n});\r\n\r\nconst NewCenterTakesSpecialty = () => {\r\n  const initialValues = {\r\n    centerName: \"\",\r\n    centerNumber: \"\",\r\n    specialty: \"\",\r\n  };\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    educTypeID: \"\",\r\n    centerNumber: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n  const makeCESSObject = (candCodeValue) => {\r\n    const objCESS = {\r\n      id: `${candCodeValue}`,\r\n    };\r\n    return objCESS;\r\n  };\r\n\r\n  const { data: dataExams, loading: loadingExams, errorExams } = useQuery(\r\n    getAllExamsQuery\r\n  );\r\n\r\n  const getExams = dataExams && dataExams.exams;\r\n  console.log(getExams);\r\n  const removeExamName =\r\n    getExams && getExams.map(({ examName, ...others }) => others);\r\n  const refinedExams = getExams && removeTypename(removeExamName);\r\n  const getExamOptions =\r\n    getExams &&\r\n    getExams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const { data: dataSession, loading: loadingSession, errorSession } = useQuery(\r\n    getAllSessionsQuery\r\n  );\r\n\r\n  const getSessions = dataSession && dataSession.sessions;\r\n  const refinedSessions = removeTypename(getSessions);\r\n  const getSessionOptions =\r\n    getSessions &&\r\n    getSessions.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.sessionName,\r\n    }));\r\n\r\n  const {\r\n    data: dataExamSession,\r\n    loading: loadingExamSession,\r\n    errorExamSession,\r\n  } = useQuery(getExamSessionQuery, {\r\n    skip: !state.examID || !state.sessionID,\r\n    variables: {\r\n      exam: getExams && getSelectedObject(refinedExams, state.examID),\r\n      session:\r\n        getSessions && getSelectedObject(refinedSessions, state.sessionID),\r\n    },\r\n  });\r\n\r\n  console.log(dataExamSession);\r\n  const getExamSessions = dataExamSession && dataExamSession.examSessions;\r\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n  const reducedES = refinedES && refinedES[0];\r\n  console.log(reducedES);\r\n\r\n  const { data: dataCenter, loading: loadingCenter, errorCenter } = useQuery(\r\n    getSingleCenterQuery,\r\n    {\r\n      skip: !state.centerNumber,\r\n      variables: {\r\n        centerNumber: state.centerNumber,\r\n      },\r\n    }\r\n  );\r\n\r\n  const getCenterByNumber = dataCenter && dataCenter.centerByNumber;\r\n  const refinedCenter = getCenterByNumber && removeTypename(getCenterByNumber);\r\n  console.log(getCenterByNumber);\r\n\r\n  const { data: dataCES, loading: loadingCES, error: errorCES } = useQuery(\r\n    getSingleCenterExamSessionQuery,\r\n    {\r\n      skip: !reducedES || !getCenterByNumber,\r\n      variables: {\r\n        examSession: reducedES && reducedES,\r\n        center: refinedCenter && refinedCenter,\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(dataCES);\r\n  const getCenterExamSessionsByCode =\r\n    dataCES && dataCES.centerExamSessionsByCode;\r\n  console.log(getCenterExamSessionsByCode);\r\n  // remove typename from the object\r\n  const refinedCenterExamSessionsByCode =\r\n    getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // transform the array into a single object\r\n  const getCES =\r\n    refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\r\n  console.log(getCES);\r\n\r\n  const {\r\n    data: dataEducType,\r\n    loading: loadingEducType,\r\n    errorEducType,\r\n  } = useQuery(getAllEducationTypesQuery);\r\n\r\n  console.log(dataEducType);\r\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n  const getEducTypeOptions =\r\n    getEducationTypes &&\r\n    getEducationTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const {\r\n    data: dataSpecialty,\r\n    loading: loadingSpecialty,\r\n    errorSpecialty,\r\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\r\n    skip: !state.educTypeID,\r\n    variables: { id: state.educTypeID },\r\n  });\r\n\r\n  console.log(dataSpecialty);\r\n\r\n  const getEducationType = dataSpecialty && dataSpecialty.educationType;\r\n\r\n  const specialtyEducType = { ...getEducationType };\r\n  const { specialty } = specialtyEducType;\r\n  console.log(specialty);\r\n  const removeSpecialtyName =\r\n    specialty && specialty.map(({ specialtyName, ...others }) => others);\r\n  const refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\r\n  const getSpecialtyOptions =\r\n    specialty &&\r\n    specialty.map((item) => ({ value: item.id, label: item.specialtyName }));\r\n\r\n  const [createCenterExamSessionSpecialty, { error }] = useMutation(\r\n    createCenterExamSessionSpecialtyMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await createCenterExamSessionSpecialty({\r\n          variables: {\r\n            specialty:\r\n              refinedSpecialty &&\r\n              getSelectedObject(refinedSpecialty, values.specialty.value),\r\n            centerExamSession: getCES && getCES,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res.data.createCenterExamSessionSpecialty);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ values, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <MinimStyledPage>\r\n            <h4>Spécialités offertes par Centre</h4>\r\n            <Error error={\r\n              error || \r\n               errorExams ||\r\n                errorSession ||\r\n                errorCenter ||\r\n                errorCES ||\r\n                errorExamSession ||\r\n                errorSpecialty ||\r\n                errorEducType} />\r\n           \r\n            <StyledForm\r\n              disabled={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCenter ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loadingSpecialty ||\r\n                loadingEducType\r\n              }\r\n              aria-busy={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCenter ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loadingSpecialty ||\r\n                loadingEducType\r\n              }\r\n            >\r\n              <Form>\r\n                <AllControls>\r\n                  <InputGroup>\r\n                    <SygexInput\r\n                      value={getCenterByNumber && getCenterByNumber.centerCode}\r\n                      name=\"centerName\"\r\n                      type=\"text\"\r\n                      label=\" Nom du centre\"\r\n                    />\r\n                    <SygexInput\r\n                      onChange={handleChange}\r\n                      name=\"centerNumber\"\r\n                      type=\"number\"\r\n                      value={state.centerNumber || \"\"}\r\n                      label=\"Numéro du centre\"\r\n                    />\r\n\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"sessionID\"\r\n                      options={getSessionOptions}\r\n                      placeholder={\"La Session\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"examID\"\r\n                      options={getExamOptions}\r\n                      placeholder={\"L'Examen\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"educTypeID\"\r\n                      options={getEducTypeOptions}\r\n                      placeholder={\"Type d'Enseignement\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) => setFieldValue(\"specialty\", value)}\r\n                      name=\"specialty\"\r\n                      options={getSpecialtyOptions}\r\n                      placeholder={\"La Série\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </InputGroup>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\">\r\n                      Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </AllControls>\r\n              </Form>\r\n            </StyledForm>\r\n          </MinimStyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewCenterTakesSpecialty;\r\n"]},"metadata":{},"sourceType":"module"}