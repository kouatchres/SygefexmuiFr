{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\rank\\\\RankList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport useTable from \"../utils/useTable\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { Paper } from \"@material-ui/core\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport Popup from \"../utils/Popup\";\nimport Button from \"@material-ui/core/Button\";\nimport getAllRanksQuery from \"../queries&Mutations&Functions/Queries\";\n\nvar RankList = function RankList() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useState = useState([]),\n      ranks = _useState.ranks,\n      setRanks = _useState.setRanks;\n\n  var loadRankData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, ranks;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRanksQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              ranks = data.ranks;\n              setRanks({\n                ranks: ranks\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRankData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect = (function () {\n    loadRankData();\n  }, []);\n\n  var _useTable = useTable(),\n      TblContainer = _useTable.TblContainer;\n\n  return __jsx(Paper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(TblContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, ranks && rranks.map(function (item) {\n    return __jsx(TableRow, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, item.rankName), __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, item.rankCode), __jsx(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, item.id));\n  }))));\n};\n\n_s(RankList, \"YshwizE+nCZm/9zCzSgyeAYcRyU=\", false, function () {\n  return [useApolloClient, useTable];\n});\n\n_c = RankList;\nexport default RankList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RankList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/rank/RankList.jsx"],"names":["React","useState","useEffect","useTable","useApolloClient","Paper","tableIcons","Popup","Button","getAllRanksQuery","RankList","client","ranks","setRanks","loadRankData","query","error","data","TblContainer","rranks","map","item","id","rankName","rankCode"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,MAAM,GAAGP,eAAe,EAA9B;;AADqB,kBAEOH,QAAQ,CAAC,EAAD,CAFf;AAAA,MAEbW,KAFa,aAEbA,KAFa;AAAA,MAENC,QAFM,aAENA,QAFM;;AAIrB,MAAMC,YAAY;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWH,MAAM,CAACI,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAEN;AADkC,eAAb,CADX;;AAAA;AAAA;AACXO,cAAAA,KADW,uBACXA,KADW;AACJC,cAAAA,IADI,uBACJA,IADI;AAIXL,cAAAA,KAJW,GAIDK,IAJC,CAIXL,KAJW;AAKnBC,cAAAA,QAAQ,CAAC;AAAED,gBAAAA,KAAK,EAALA;AAAF,eAAD,CAAR;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZE,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAQAZ,EAAAA,SAAS,IACN,YAAM;AACLY,IAAAA,YAAY;AACb,GAFA,EAGD,EAJO,CAAT;;AAZqB,kBAkBIX,QAAQ,EAlBZ;AAAA,MAkBbe,YAlBa,aAkBbA,YAlBa;;AAmBrB,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,IACJO,MAAM,CAACC,GAAP,CAAW,UAACC,IAAD;AAAA,WACT,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACE,QAAjB,CADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACG,QAAjB,CAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYH,IAAI,CAACC,EAAjB,CAHF,CADS;AAAA,GAAX,CAFJ,CADF,CADF,CADF;AAgBD,CAnCD;;GAAMZ,Q;UACWN,e,EAiBUD,Q;;;KAlBrBO,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useTable from \"../utils/useTable\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport Popup from \"../utils/Popup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport getAllRanksQuery from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst RankList = () => {\r\n  const client = useApolloClient();\r\n  const { ranks, setRanks } = useState([]);\r\n\r\n  const loadRankData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRanksQuery,\r\n    });\r\n    const { ranks } = data;\r\n    setRanks({ ranks });\r\n  };\r\n\r\n  useEffect =\r\n    (() => {\r\n      loadRankData();\r\n    },\r\n    []);\r\n\r\n  const { TblContainer } = useTable();\r\n  return (\r\n    <Paper>\r\n      <TblContainer>\r\n        <TableBody>\r\n          {ranks &&\r\n            rranks.map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.rankName}</TableCell>\r\n                <TableCell>{item.rankCode}</TableCell>\r\n                <TableCell>{item.id}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default RankList;\r\n"]},"metadata":{},"sourceType":"module"}