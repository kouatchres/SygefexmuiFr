{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport { useRouter } from \"next/router\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport Button from \"@material-ui/core/Button\";\nimport NewDivision from \"./NewDivision\";\nimport UpdateDivision from \"./UpdateDivision\";\n\nvar DivisionList = function DivisionList() {\n  _s();\n\n  var router = useRouter();\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      isAddPopupOpen = _useState[0],\n      setIsAddPopupOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      isUpdatePopupOpen = _useState2[0],\n      setIsUpdatePopupOpen = _useState2[1];\n\n  var _useState3 = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\",\n      grouping: false\n    }, {\n      field: \"divName\",\n      title: \"Division Name\"\n    }, {\n      field: \"divCode\",\n      title: \"Division Code\",\n      grouping: false\n    }],\n    data: []\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var loadDivisionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, regions, getDivisions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsAndDivisionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), regions = _data.regions;\n              getDivisions = regions.map(function (item) {\n                var divInfos = item.division.map(function (division) {\n                  return _objectSpread({\n                    regName: item.regName,\n                    regCode: item.regCode\n                  }, division);\n                });\n                return divInfos;\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: getDivisions.flat(1)\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadDivisionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n\n  var handleAddPopupClose = function handleAddPopupClose(event) {\n    setIsAddPopupOpen(false);\n  };\n\n  var handleUpdatePopupClose = function handleUpdatePopupClose(event) {\n    setIsUpdatePopupOpen(false);\n  }; // const handleId = (event) => {\n  //   setDialogId(event.target.value);\n  // };\n  // const handleWord = (event) => {\n  //   setDialogWord(event.target.value);\n  // };\n\n\n  console.dir(state.data);\n  var actions = [{\n    icon: function icon() {\n      return __jsx(AddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Add User\",\n    isFreeAction: true,\n    onClick: function onClick(event, rowData) {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Edit User\",\n    onClick: function onClick(event, rowData) {\n      id: {\n        rowData.id;\n      }\n\n      setIsUpdatePopupOpen(true); // console.log(rowData.id);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Delete User\",\n    onClick: function onClick(event, rowData) {\n      return confirm(\"You want to delete \" + rowData.id);\n    }\n  }];\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    },\n    icons: tableIcons,\n    title: \"Users List\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), __jsx(AddPopup, {\n    title: \"Add User\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(NewDivision, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), __jsx(UpdatePopup, {\n    id: rowData.id,\n    title: \"Add User\",\n    isOpen: isUpdatePopupOpen,\n    onClose: handleUpdatePopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateDivision, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(DivisionList, \"KqgfV0KYv2JFf+atEOkcr5Fedro=\", false, function () {\n  return [useRouter, useApolloClient];\n});\n\n_c = DivisionList;\nexport default DivisionList; // <UpdatePopup\n//   title=\"Update Division\"\n//   isOpen={AddPopupOpen\n//   onClose={handleDialogClose}\n// >\n//   <UpdateDivision />\n// </UpdatePopup>\n\nvar _c;\n\n$RefreshReg$(_c, \"DivisionList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionList.jsx"],"names":["React","useEffect","useState","MaterialTable","Paper","useApolloClient","getAllRegionsAndDivisionsQuery","tableIcons","AddPopup","UpdatePopup","useRouter","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","Button","NewDivision","UpdateDivision","DivisionList","router","client","isAddPopupOpen","setIsAddPopupOpen","isUpdatePopupOpen","setIsUpdatePopupOpen","columns","field","title","grouping","data","state","setState","loadDivisionData","query","error","regions","getDivisions","map","item","divInfos","division","regName","regCode","prev","flat","console","log","handleAddPopupClose","event","handleUpdatePopupClose","dir","actions","icon","tooltip","isFreeAction","onClick","rowData","id","confirm","marginTop","position","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsAndDivisionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NewDivision from \"./NewDivision\";\r\nimport UpdateDivision from \"./UpdateDivision\";\r\n\r\nconst DivisionList = () => {\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [isUpdatePopupOpen, setIsUpdatePopupOpen] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n        grouping: false,\r\n      },\r\n      { field: \"divName\", title: \"Division Name\" },\r\n      { field: \"divCode\", title: \"Division Code\", grouping: false },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsAndDivisionsQuery,\r\n    });\r\n    const { regions } = { ...data };\r\n\r\n    const getDivisions = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => ({\r\n        regName: item.regName,\r\n        regCode: item.regCode,\r\n        ...division,\r\n      }));\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getDivisions.flat(1) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  const handleAddPopupClose = (event) => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = (event) => {\r\n    setIsUpdatePopupOpen(false);\r\n  };\r\n\r\n  // const handleId = (event) => {\r\n  //   setDialogId(event.target.value);\r\n  // };\r\n\r\n  // const handleWord = (event) => {\r\n  //   setDialogWord(event.target.value);\r\n  // };\r\n\r\n  console.dir(state.data);\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Add User\",\r\n      isFreeAction: true,\r\n      onClick: (event, rowData) => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Edit User\",\r\n      onClick: (event, rowData) => {\r\n        id: {\r\n          rowData.id;\r\n        }\r\n        setIsUpdatePopupOpen(true);\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Delete User\",\r\n      onClick: (event, rowData) => confirm(\"You want to delete \" + rowData.id),\r\n    },\r\n  ];\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n        title=\"Users List\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n      />\r\n      <AddPopup\r\n        title=\"Add User\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <NewDivision />\r\n      </AddPopup>\r\n      <UpdatePopup\r\n        id={rowData.id}\r\n        title=\"Add User\"\r\n        isOpen={isUpdatePopupOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateDivision id={id} />\r\n      </UpdatePopup>\r\n    </Paper>\r\n  );\r\n};\r\nexport default DivisionList;\r\n\r\n// <UpdatePopup\r\n//   title=\"Update Division\"\r\n//   isOpen={AddPopupOpen\r\n//   onClose={handleDialogClose}\r\n// >\r\n//   <UpdateDivision />\r\n// </UpdatePopup>\r\n"]},"metadata":{},"sourceType":"module"}