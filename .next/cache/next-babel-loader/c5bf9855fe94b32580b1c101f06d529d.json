{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { useRouter } from \"next/router\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getRegisteredCandidatesPerSpecialty, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSpecialtiesOfACenterExamSessionQuery, getAllSubjectSpecialtiesOfASpecialtyQuery, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSpecialtyID, getSelectedObject, candExamSessionCode } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({\n  handin: Yup.string().required(\"indiquer la remise de copie\"),\n  collected: Yup.string().required(\"Indiquer la collecte de matÃ©riels\"),\n  candExamSecretCode: Yup.string().required(\"Choisir le cadidat en question\")\n});\n\nvar Attendance = function Attendance() {\n  _s();\n\n  var _useForm3;\n\n  var classes = useStyles();\n  var router = useRouter();\n  var client = useApolloClient();\n  var initialValues = {\n    candExamSecretCode: \"\",\n    handin: \"\",\n    collected: \"\"\n  };\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var _useForm = useForm((_useForm3 = {\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    specialties: [],\n    specialty: {}\n  }, _defineProperty(_useForm3, \"centerNumber\", \"\"), _defineProperty(_useForm3, \"centerByNumber\", \"\"), _defineProperty(_useForm3, \"examSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessionSpecialty\", {}), _defineProperty(_useForm3, \"candsPerSeries\", []), _useForm3)),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      sessions = state.sessions,\n      specialties = state.specialties,\n      specialty = state.specialty,\n      centerByNumber = state.centerByNumber,\n      examSessions = state.examSessions,\n      centerExamSessions = state.centerExamSessions,\n      centerExamSessionSpecialty = state.centerExamSessionSpecialty,\n      candsPerSeries = state.candsPerSeries;\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var makeCandVariableObject = function makeCandVariableObject(candCodeValue) {\n    var storedCandidate = {\n      candCode: \"\".concat(candCodeValue)\n    };\n    return storedCandidate;\n  };\n\n  var candRegistrationNumber = function candRegistrationNumber(centerCode, exam, session) {\n    return \"\".concat(centerCode + exam + session);\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        loading: true\n      });\n    });\n    loadExamData();\n    loadSessionData();\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        loading: false\n      });\n    });\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running the exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        examSessions: \"\"\n      });\n    });\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, error, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              error = _yield$client$query4.error;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        centerByNumber: \"\"\n      });\n    });\n    loadCenterData();\n  }, [centerNumber]);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        centerExamSessions: \"\"\n      });\n    });\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  var getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n\n  var loadCESS = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query6, error, data, getCenterExamSession, _getCenterExamSession, centerExamSessionSpecialty;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                query: getAllSpecialtiesOfACenterExamSessionQuery,\n                variables: getCESID\n              });\n\n            case 2:\n              _yield$client$query6 = _context6.sent;\n              error = _yield$client$query6.error;\n              data = _yield$client$query6.data;\n              console.log(data);\n              getCenterExamSession = data && data.centerExamSession;\n              _getCenterExamSession = _objectSpread({}, getCenterExamSession), centerExamSessionSpecialty = _getCenterExamSession.centerExamSessionSpecialty;\n              console.log({\n                centerExamSessionSpecialty: centerExamSessionSpecialty\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  specialties: centerExamSessionSpecialty\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadCESS() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESS();\n  }, [getCESID, centerNumber]);\n  var newSpecialty = specialties && specialties.map(function (item) {\n    return item;\n  });\n  var refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  console.log(refinedSpecialty);\n  var getSpecialtyOptions = refinedSpecialty && refinedSpecialty.map(function (item) {\n    return {\n      id: item.specialty.id,\n      value: item.id,\n      label: item.specialty.specialtyName\n    };\n  });\n  console.log({\n    state: state\n  });\n  var getSpecialty = getSpecialtyID(specialties, centerExamSessionSpecialty);\n\n  var loadSubjectSpecialtyData = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _yield$client$query7, error, data, loading, getSubjSpecialty, _getSubjSpecialty, subjectSpecialty;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return client.query({\n                skip: !specialty,\n                query: getAllSubjectSpecialtiesOfASpecialtyQuery,\n                variables: {\n                  id: getSpecialty && getSpecialty.id\n                }\n              });\n\n            case 2:\n              _yield$client$query7 = _context7.sent;\n              error = _yield$client$query7.error;\n              data = _yield$client$query7.data;\n              loading = _yield$client$query7.loading;\n              console.log(data);\n              getSubjSpecialty = data && data.specialty;\n              _getSubjSpecialty = _objectSpread({}, getSubjSpecialty), subjectSpecialty = _getSubjSpecialty.subjectSpecialty; // console.log(subjectSpecialty);\n\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  subjectSpecialty: subjectSpecialty\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function loadSubjectSpecialtyData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadSubjectSpecialtyData();\n  }, [specialty]);\n  var getSubjectsOptions = subjectSpecialty && subjectSpecialty.map(function (item) {\n    return {\n      value: item,\n      label: item.subject.subjectName\n    };\n  });\n\n  var loadCenterRegistrationInfo = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var _yield$client$query8, data, _data$centerExamSessi, registration, center, examSession, regCandInfo;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log(\"running the candidate query\");\n              _context8.next = 3;\n              return client.query({\n                query: getRegisteredCandidatesPerSpecialty,\n                variables: {\n                  id: centerExamSessionSpecialty\n                }\n              });\n\n            case 3:\n              _yield$client$query8 = _context8.sent;\n              data = _yield$client$query8.data;\n              console.log(data);\n              _data$centerExamSessi = data.centerExamSessionSpecialty, registration = _data$centerExamSessi.registration, center = _data$centerExamSessi.center, examSession = _data$centerExamSessi.examSession;\n              console.log(registration);\n              regCandInfo = registration.map(function (item) {\n                return _objectSpread({\n                  candCode: item.candExamSecretCode,\n                  candRegNo: item.candRegistrationNumber\n                }, item.candidate);\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  candsPerSeries: regCandInfo\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function loadCenterRegistrationInfo() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  console.log({\n    candsPerSeries: candsPerSeries\n  });\n  useEffect(function () {\n    loadCenterRegistrationInfo();\n  }, [centerExamSessionSpecialty]);\n  var getCandOptions = candsPerSeries.map(function (item) {\n    return {\n      value: item.candCode,\n      label: item.candRegNo\n    };\n  });\n\n  var _useMutation = useMutation(createAttendanceMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createAttendance = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(values, _ref10) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                setSubmitting = _ref10.setSubmitting, resetForm = _ref10.resetForm;\n                _context9.next = 3;\n                return createAttendance({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    candExamSecretCode: values.candExamSecretCode,\n                    centerExamSessionSpecialty: getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\n                    subjectSpecialty: specialties && getSpecialtyID(specialties, centerExamSessionSpecialty)\n                  })\n                });\n\n              case 3:\n                res = _context9.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"PrÃ©sence indiquÃ©e avec success\",\n                    type: \"success\"\n                  });\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x, _x2) {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 5\n    }\n  }, function (_ref12) {\n    var submitForm = _ref12.submitForm,\n        setFieldValue = _ref12.setFieldValue,\n        isSubmitting = _ref12.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 23\n      }\n    }, \"Pr\\xE9sence aux \\xE9preuves\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"Sp\\xE9cialit\\xE9\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 27\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"subjectSpecialty\",\n      label: \"Mati\\xE8res\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"subjectSpecialty\");\n      },\n      component: Select,\n      placeholder: \"Mati\\xE8res\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"subjectSpecialty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 27\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      component: Select,\n      label: \"Matricule candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      options: getCandOptions,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"collected\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"collected\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Collecte de mat\\xE9riels\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"handin\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"handin\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Remise de copies\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Validation en cours\" : \"Valide prÃ©sence\")))))));\n  });\n};\n\n_s(Attendance, \"KRcmWKd3byMSBYAj0ywfjITJ/C8=\", false, function () {\n  return [useStyles, useRouter, useApolloClient, useForm, useMutation];\n});\n\n_c = Attendance;\nexport default Attendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attendance\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useState","useEffect","Error","Yup","FRadioGroup","useRouter","createAttendanceMutation","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","getExamSessionQuery","getAllExamsQuery","getRegisteredCandidatesPerSpecialty","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSpecialtiesOfACenterExamSessionQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","getSingleCenterQuery","removeTypename","getSpecialtyID","getSelectedObject","candExamSessionCode","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","handin","string","required","collected","candExamSecretCode","Attendance","classes","router","client","initialValues","isOpen","message","type","notify","setNotify","centerNumber","candCode","examID","sessionID","exams","sessions","specialties","specialty","state","setState","handleSelectChange","handleInputChange","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","candsPerSeries","makeCenterVariableObject","centerCodeValue","storedCenter","makeCandVariableObject","candCodeValue","storedCandidate","candRegistrationNumber","centerCode","exam","session","loadExamData","query","error","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loading","loadExamSessionData","skip","variables","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","loadCESS","getCenterExamSession","centerExamSession","newSpecialty","refinedSpecialty","getSpecialtyOptions","specialtyName","getSpecialty","loadSubjectSpecialtyData","getSubjSpecialty","subjectSpecialty","getSubjectsOptions","subject","subjectName","loadCenterRegistrationInfo","registration","regCandInfo","candRegNo","candidate","getCandOptions","createAttendance","loadingMut","values","setSubmitting","resetForm","getCESSSubjIDs","getObjectFromID","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n  candExamSessionCode,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  handin: Yup.string().required(\"indiquer la remise de copie\"),\r\n  collected: Yup.string().required(\"Indiquer la collecte de matÃ©riels\"),\r\n  candExamSecretCode: Yup.string().required(\"Choisir le cadidat en question\"),\r\n});\r\n\r\nconst Attendance = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    candExamSecretCode: \"\",\r\n    handin: \"\",\r\n    collected: \"\",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    specialties: [],\r\n    specialty: {},\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n    candsPerSeries: [],\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    specialties,\r\n    specialty,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    centerExamSessionSpecialty,\r\n    candsPerSeries,\r\n  } = state;\r\n\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candCode: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  const candRegistrationNumber = (centerCode, exam, session) => {\r\n    return `${centerCode + exam + session}`;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n    }));\r\n    loadExamData();\r\n    loadSessionData();\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: false,\r\n    }));\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: \"\",\r\n    }));\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerByNumber: \"\",\r\n    }));\r\n\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: \"\",\r\n    }));\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  const loadCESS = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n      variables: getCESID,\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSession = data && data.centerExamSession;\r\n    const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n    console.log({ centerExamSessionSpecialty });\r\n    setState((prev) => ({\r\n      ...prev,\r\n      specialties: centerExamSessionSpecialty,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESS();\r\n  }, [getCESID, centerNumber]);\r\n\r\n  const newSpecialty = specialties && specialties.map((item) => item);\r\n  const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  console.log(refinedSpecialty);\r\n  const getSpecialtyOptions =\r\n    refinedSpecialty &&\r\n    refinedSpecialty.map((item) => ({\r\n      id: item.specialty.id,\r\n      value: item.id,\r\n      label: item.specialty.specialtyName,\r\n    }));\r\n    \r\n  console.log({ state });\r\n  const getSpecialty=getSpecialtyID(specialties, centerExamSessionSpecialty);\r\n\r\n\r\n  const loadSubjectSpecialtyData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      skip: !specialty,\r\n      query: getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n      variables: {\r\n        id: getSpecialty && getSpecialty.id,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getSubjSpecialty = data && data.specialty;\r\n    const { subjectSpecialty } = {\r\n      ...getSubjSpecialty,\r\n    };\r\n    // console.log(subjectSpecialty);\r\n    setState((prev) => ({ ...prev, subjectSpecialty }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubjectSpecialtyData();\r\n  }, [specialty]);\r\n\r\n  const getSubjectsOptions =\r\n    subjectSpecialty &&\r\n    subjectSpecialty.map((item) => ({\r\n      value: item,\r\n      label: item.subject.subjectName,\r\n    }));\r\n\r\n  const loadCenterRegistrationInfo = async () => {\r\n    console.log(\"running the candidate query\");\r\n    const { data } = await client.query({\r\n      query: getRegisteredCandidatesPerSpecialty,\r\n      variables: { id: centerExamSessionSpecialty },\r\n    });\r\n\r\n    console.log(data);\r\n    const {\r\n      registration,\r\n      center,\r\n      examSession,\r\n    } = data.centerExamSessionSpecialty;\r\n    console.log(registration);\r\n\r\n    const regCandInfo = registration.map((item) => ({\r\n      candCode: item.candExamSecretCode,\r\n      candRegNo: item.candRegistrationNumber,\r\n      ...item.candidate,\r\n    }));\r\n\r\n    setState((prev) => ({ ...prev, candsPerSeries: regCandInfo }));\r\n  };\r\n\r\n  console.log({ candsPerSeries });\r\n  useEffect(() => {\r\n    loadCenterRegistrationInfo();\r\n  }, [centerExamSessionSpecialty]);\r\n\r\n  const getCandOptions = candsPerSeries.map((item) => ({\r\n    value: item.candCode,\r\n    label: item.candRegNo,\r\n  }));\r\n\r\n  const [createAttendance, { loadingMut, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode,\r\n            centerExamSessionSpecialty:\r\n              getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\r\n            subjectSpecialty:\r\n              specialties &&\r\n              getSpecialtyID(specialties, centerExamSessionSpecialty),\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"PrÃ©sence indiquÃ©e avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        PrÃ©sence aux Ã©preuves\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"NumÃ©ro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"SpÃ©cialitÃ©\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"SpÃ©cialitÃ©\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"subjectSpecialty\"\r\n                        label=\"MatiÃ¨res\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"subjectSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"MatiÃ¨res\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={\r\n                          <ErrorMessage name=\"subjectSpecialty\" />\r\n                        }\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        component={Select}\r\n                        label=\"Matricule candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        options={getCandOptions}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"collected\" />}\r\n                        required\r\n                        name=\"collected\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Collecte de matÃ©riels\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"handin\" />}\r\n                        required\r\n                        name=\"handin\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Remise de copies\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Validation en cours\"\r\n                          : \"Valide prÃ©sence\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Attendance;\r\n"]},"metadata":{},"sourceType":"module"}