{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\center\\\\CenterListDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { deleteCenterMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport { getAllRegionsDivisionsTownsCentersQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport Notification from \"../utils/Notification\";\nimport NewCenter from \"./NewCenter\";\nimport UpdateCenter from \"./UpdateCenter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  head: {\n    backgroundColor: \"#fff\",\n    position: \"sticky\",\n    top: 0\n  }\n}));\n\nconst CenterList = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: isAddPopupOpen,\n    1: setIsAddPopupOpen\n  } = useState(false);\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const {\n    0: deleteConfirmDialog,\n    1: setDeleteConfirmDialog\n  } = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"townName\",\n      title: \"Ville\"\n    }, {\n      field: \"centerName\",\n      title: \"Centre\" //  options: {\n      //         width: 500,\n      //         headerNoWrap: true,\n      //         filter: true,\n      //         sort: false\n      //     } \n\n    }, // { field: \"centerCode\", title: \"Code Centre\", grouping: false },\n    {\n      field: \"centerNumber\",\n      title: \"Code\",\n      // grouping: false,\n      type: \"numeric\",\n      options: {\n        width: 30,\n        headerNoWrap: true,\n        filter: true,\n        sort: false\n      }\n    }, {\n      field: \"centerSecretCode\",\n      title: \"Code secret\",\n      // grouping: false,\n      type: \"numeric\"\n    }],\n    data: []\n  });\n\n  const loadDivisionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllRegionsDivisionsTownsCentersQuery\n    });\n\n    const {\n      regions\n    } = _objectSpread({}, data);\n\n    const getTowns = regions.map(item => {\n      const divInfos = item.division.map(division => {\n        const subDivInfos = division.subDivision.map(subDivision => {\n          const townInfos = subDivision.town.map(ville => {\n            const centerInfos = ville.center.map(centre => _objectSpread({\n              regName: item.regName,\n              regCode: item.regCode,\n              divName: division.divName,\n              divCode: division.divCode,\n              townName: ville.townName,\n              townCode: ville.townCode\n            }, centre));\n            return centerInfos;\n          });\n          return townInfos;\n        });\n        return subDivInfos;\n      });\n      return divInfos;\n    });\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: getTowns.flat(4)\n    }));\n  };\n\n  useEffect(() => {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n\n  const handleAddPopupClose = () => {\n    setIsAddPopupOpen(false);\n  };\n\n  const handleUpdatePopupClose = () => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const handleDeleteConfirmDialog = () => {\n    setDeleteConfirmDialog(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const [deleteCenter, {\n    loading\n  }] = useMutation(deleteCenterMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    } // update: updateCache(),\n\n  });\n  const actions = [{\n    icon: () => __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Ajouter Nouveau Centre\",\n    isFreeAction: true,\n    onClick: () => {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Modifier Centre\",\n    onClick: (event, rowData) => {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      });\n    }\n  }, {\n    icon: () => __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Supprimer Centre\",\n    onClick: (event, rowData) => setDeleteConfirmDialog({\n      id: rowData.id,\n      isOpen: true,\n      title: \"Etes-vous sur de suprimer cette inofrmation\",\n      subtitle: \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\n      onConfirm: () => {\n        rowData.id && deleteCenter(rowData.id);\n        setNotify({\n          isOpen: true,\n          message: \"Centre Supprimé avec success\",\n          type: \"error\"\n        });\n      }\n    })\n  }];\n  console.dir(state.data);\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, __jsx(MaterialTable, {\n    className: classes.head,\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#829079\",\n          borderTopRightRadius: \"0.5rem\",\n          borderTopLeftRadius: \"0.5rem\",\n          color: \"#ede6b9\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, __jsx(MTableToolbar, _extends({\n        style: {\n          // textColor: \"#000\",\n          textColor: \"#fff\"\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      })))\n    },\n    icons: tableIcons,\n    title: \"Information detaill\\xE9e des Centres..................  ..............                          \",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        // backgroundColor: \"#abb\",\n        color: \"#ede6b9\",\n        backgroundColor: \"#b9925e\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      },\n      fixedHeader: \"false\"\n    },\n    actions: actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouveau Centre\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, __jsx(NewCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }), __jsx(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, __jsx(UpdateCenter, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CenterList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/center/CenterListDetails.jsx"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Paper","makeStyles","useApolloClient","useMutation","useQuery","deleteCenterMutation","tableIcons","ConfirmDialog","AddPopup","UpdatePopup","getAllRegionsDivisionsTownsCentersQuery","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","Notification","NewCenter","UpdateCenter","useStyles","theme","root","width","marginTop","spacing","unit","overflowX","head","backgroundColor","position","top","CenterList","classes","client","isAddPopupOpen","setIsAddPopupOpen","updatePopupState","setUpdatePopupState","isOpen","id","notify","setNotify","message","type","deleteConfirmDialog","setDeleteConfirmDialog","title","subtitle","state","setState","columns","field","options","headerNoWrap","filter","sort","data","loadDivisionData","error","query","regions","getTowns","map","item","divInfos","division","subDivInfos","subDivision","townInfos","town","ville","centerInfos","center","centre","regName","regCode","divName","divCode","townName","townCode","prev","flat","console","log","handleAddPopupClose","handleUpdatePopupClose","handleDeleteConfirmDialog","deleteCenter","loading","variables","actions","icon","tooltip","isFreeAction","onClick","event","rowData","onConfirm","dir","Toolbar","props","borderTopRightRadius","borderTopLeftRadius","color","textColor","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","fixedHeader"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { deleteCenterMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport { getAllRegionsDivisionsTownsCentersQuery } from \"../queries&Mutations&Functions/Queries\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\nimport Notification from \"../utils/Notification\";\r\nimport NewCenter from \"./NewCenter\";\r\nimport UpdateCenter from \"./UpdateCenter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  head: {\r\n    backgroundColor: \"#fff\",\r\n    position: \"sticky\",\r\n    top: 0,\r\n  },\r\n}));\r\n\r\nconst CenterList = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      \r\n      { field: \"townName\", title: \"Ville\" },\r\n      { field: \"centerName\", title: \"Centre\",\r\n    //  options: {\r\n    //         width: 500,\r\n    //         headerNoWrap: true,\r\n    //         filter: true,\r\n    //         sort: false\r\n    //     } \r\n      },\r\n      // { field: \"centerCode\", title: \"Code Centre\", grouping: false },\r\n      {\r\n        field: \"centerNumber\",\r\n        title: \"Code\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n          options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n            filter: true,\r\n            sort: false\r\n         },\r\n      },\r\n      {\r\n        field: \"centerSecretCode\",\r\n        title: \"Code secret\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n      },\r\n    ],\r\n    data: [],\r\n  });\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsDivisionsTownsCentersQuery,\r\n    });\r\n    const { regions } = { ...data };\r\n\r\n    const getTowns = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => {\r\n        const subDivInfos = division.subDivision.map((subDivision) => {\r\n          const townInfos = subDivision.town.map((ville) => {\r\n            const centerInfos = ville.center.map((centre) => ({\r\n              regName: item.regName,\r\n              regCode: item.regCode,\r\n              divName: division.divName,\r\n              divCode: division.divCode,\r\n              townName: ville.townName,\r\n              townCode: ville.townCode,\r\n              ...centre,\r\n            }));\r\n            return centerInfos;\r\n          });\r\n          return townInfos;\r\n        });\r\n        return subDivInfos;\r\n      });\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getTowns.flat(4) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  const handleAddPopupClose = () => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const [deleteCenter, { loading }] = useMutation(deleteCenterMutation, {\r\n    variables: { id: deleteConfirmDialog.id },\r\n    // update: updateCache(),\r\n  });\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Ajouter Nouveau Centre\",\r\n      isFreeAction: true,\r\n      onClick: () => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifier Centre\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer Centre\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteCenter(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Centre Supprimé avec success\",\r\n              type: \"error\",\r\n            });\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div>\r\n        <MaterialTable\r\n          className={classes.head}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#829079\",\r\n                  borderTopRightRadius: \"0.5rem\",\r\n                  borderTopLeftRadius: \"0.5rem\",\r\n                  color: \"#ede6b9\",\r\n                }}\r\n              >\r\n                <MTableToolbar\r\n                  style={{\r\n                    // textColor: \"#000\",\r\n                    textColor: \"#fff\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            ),\r\n          }}\r\n          icons={tableIcons}\r\n          title=\"Information detaillée des Centres..................  ..............                          \"\r\n          columns={state.columns}\r\n          data={state.data}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            grouping: true,\r\n            paging: true,\r\n            pageSize: 50, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n            headerStyle: {\r\n              paddingTop: \"0.5rem\",\r\n              paddingBottom: \"0.5rem\",\r\n              // backgroundColor: \"#abb\",\r\n              color: \"#ede6b9\",\r\n              backgroundColor: \"#b9925e\",\r\n              maxHeight: \"0.5rem !important\",\r\n            },\r\n            rowStyle: {\r\n              color: \"#000\",\r\n            },\r\n            fixedHeader:\"false\",\r\n          }}\r\n          actions={actions}\r\n        />\r\n        <AddPopup\r\n          title=\"Nouveau Centre\"\r\n          isOpen={isAddPopupOpen}\r\n          onClose={handleAddPopupClose}\r\n        >\r\n          <NewCenter />\r\n        </AddPopup>\r\n        <ConfirmDialog\r\n          title={deleteConfirmDialog.title}\r\n          subtitle={deleteConfirmDialog.subtitle}\r\n          isOpen={deleteConfirmDialog.isOpen}\r\n          onClose={handleDeleteConfirmDialog}\r\n          onConfirm={deleteConfirmDialog.onConfirm}\r\n        />\r\n        <Notification notify={notify} setNotify={setNotify} />\r\n\r\n        <UpdatePopup\r\n          // title={updatePopupState.id}\r\n          isOpen={updatePopupState.isOpen}\r\n          onClose={handleUpdatePopupClose}\r\n        >\r\n          <UpdateCenter id={updatePopupState.id} />\r\n        </UpdatePopup>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CenterList;\r\n"]},"metadata":{},"sourceType":"module"}