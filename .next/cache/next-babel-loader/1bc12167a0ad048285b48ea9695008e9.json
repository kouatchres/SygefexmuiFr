{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\center\\\\UpdateCenter.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport { MiniStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage';\nimport { Formik, Form } from 'formik';\nimport useForm from '../utils/useForm';\nimport * as Yup from 'yup';\nimport { SygexInput, StyledForm, StyledButton, ButtonStyled } from '../utils/FormInputs';\nimport { singleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { updateCenterMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport Notification from \"../utils/Notification\";\nimport styled from 'styled-components';\nvar Controls = styled.div.withConfig({\n  displayName: \"UpdateCenter__Controls\",\n  componentId: \"hg34ox-0\"\n})([\"padding:0 2rem;\"]);\n_c = Controls;\n\nvar UpdateCenter = function UpdateCenter(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var client = useApolloClient();\n\n  var _useForm = useForm({\n    centerCode: \"\",\n    centerName: \"\",\n    centerNumber: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      state = _useForm2[0],\n      setState = _useForm2[1];\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      notify = _useState2[0],\n      setNotify = _useState2[1];\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, centerData, centerCode, centerName, centerNumber;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: singleCenterQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              error && __jsx(Error, {\n                error: error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 15\n                }\n              });\n              centerData = _objectSpread({}, data.center);\n              centerCode = centerData.centerCode, centerName = centerData.centerName, centerNumber = centerData.centerNumber;\n              setState({\n                centerCode: centerCode,\n                centerName: centerName,\n                centerNumber: centerNumber\n              });\n              console.log(centerData);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCenterData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, []);\n  var initialValues = {\n    centerCode: \"\",\n    centerName: \"\",\n    centerNumber: \"\"\n  };\n  var validationSchema = Yup.object().shape({\n    centerName: Yup.string().required('Libellé du centre obligatoire'),\n    centerCode: Yup.string().required('Code du centre  obligatoire'),\n    centerNumber: Yup.number().required('Numéro  du centre obligatoire')\n  });\n\n  var _useMutation = useMutation(updateCenterMutation, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateCenter = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loading,\n      errorMut = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: state || initialValues,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n        var resetForm, setSubmitting, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                resetForm = _ref3.resetForm, setSubmitting = _ref3.setSubmitting;\n                _context2.next = 3;\n                return updateCenter({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    id: id\n                  })\n                });\n\n              case 3:\n                res = _context2.sent;\n                setNotify({\n                  isOpen: true,\n                  message: \"Centre Supprimodifié avec success\",\n                  type: \"error\"\n                });\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 200);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting;\n    return __jsx(MiniStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Correction Info Centre\"), __jsx(Error, {\n      error: errorMut,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loadingMut,\n      \"aria-busy\": isSubmitting || loadingMut,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(Controls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(SygexInput, {\n      id: \"centerName\",\n      name: \"centerName\",\n      type: \"text\",\n      label: \"Nom du centre\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), __jsx(SygexInput, {\n      id: \"centerCode\",\n      name: \"centerCode\",\n      type: \"text\",\n      label: \"Code du centre\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), __jsx(SygexInput, {\n      name: \"centerNumber\",\n      id: \"centerNumber\",\n      type: \"number\",\n      label: \"Num\\xE9ro du centre\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n  });\n};\n\n_s(UpdateCenter, \"GHtSdxIozx2JrAhXq5JMNd0M04g=\", false, function () {\n  return [useApolloClient, useForm, useMutation];\n});\n\n_c2 = UpdateCenter;\nexport default UpdateCenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Controls\");\n$RefreshReg$(_c2, \"UpdateCenter\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/center/UpdateCenter.jsx"],"names":["React","useEffect","useMutation","useApolloClient","MiniStyledPage","Error","Formik","Form","useForm","Yup","SygexInput","StyledForm","StyledButton","ButtonStyled","singleCenterQuery","updateCenterMutation","Notification","styled","Controls","div","UpdateCenter","id","client","centerCode","centerName","centerNumber","state","setState","useState","isOpen","message","type","notify","setNotify","loadCenterData","query","variables","error","data","centerData","center","console","log","initialValues","validationSchema","object","shape","string","required","number","updateCenter","loadingMut","loading","errorMut","values","resetForm","setSubmitting","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport { useMutation, useApolloClient } from '@apollo/react-hooks'\r\nimport { MiniStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage';\r\nimport { Formik, Form } from 'formik';\r\nimport useForm from '../utils/useForm'\r\nimport * as Yup from 'yup';\r\nimport { SygexInput, StyledForm, StyledButton, ButtonStyled } from '../utils/FormInputs'\r\nimport { singleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport { updateCenterMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Controls = styled.div`\r\npadding:0 2rem;\r\n`;\r\nconst UpdateCenter = ({ id }) => {\r\n  const client = useApolloClient()\r\n  const [state, setState] = useForm({\r\n    centerCode: \"\",\r\n    centerName: \"\",\r\n    centerNumber: \"\",\r\n  })\r\n\r\n  \r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n\r\n\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: singleCenterQuery,\r\n      variables: { id }\r\n    })\r\n    {error && <Error error={error}/>}\r\n    const centerData = { ...data.center }\r\n    const {\r\n      centerCode,\r\n      centerName,\r\n      centerNumber,\r\n    } = centerData\r\n    setState({\r\n      centerCode: centerCode,\r\n      centerName: centerName,\r\n      centerNumber: centerNumber,\r\n\r\n    })\r\n    console.log(centerData)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    loadCenterData()\r\n  }, [])\r\n\r\n  const initialValues = {\r\n    centerCode: \"\",\r\n    centerName: \"\",\r\n    centerNumber: \"\",\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    centerName: Yup.string().required('Libellé du centre obligatoire'),\r\n    centerCode: Yup.string().required('Code du centre  obligatoire'),\r\n    centerNumber: Yup.number().required('Numéro  du centre obligatoire'),\r\n  });\r\n\r\n  const [updateCenter, { loading: loadingMut, error: errorMut }] = useMutation(updateCenterMutation, {\r\n    variables: { id }\r\n  })\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={state || initialValues}\r\n      enableReinitialize\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await updateCenter({\r\n          variables: { ...values, id },\r\n        });\r\n         setNotify({\r\n           isOpen: true,\r\n           message: \"Centre Supprimodifié avec success\",\r\n           type: \"error\",\r\n         });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n\r\n    >\r\n      {({ isSubmitting }) => (\r\n\r\n        <MiniStyledPage>\r\n          <h4>Correction Info Centre</h4>\r\n          <Error error={errorMut} />\r\n          <StyledForm disabled={isSubmitting  ||loadingMut} aria-busy={isSubmitting  ||loadingMut} >\r\n            <Form>\r\n              <Controls>\r\n                <SygexInput\r\n                  id=\"centerName\"\r\n                  name=\"centerName\"\r\n                  type=\"text\"\r\n                  label=\"Nom du centre\"\r\n                  disabled={isSubmitting}\r\n\r\n                />\r\n                <SygexInput\r\n                  id=\"centerCode\"\r\n                  name=\"centerCode\"\r\n                  type=\"text\"\r\n                  label=\"Code du centre\"\r\n                  disabled={isSubmitting}\r\n\r\n                />\r\n                <SygexInput\r\n                  name=\"centerNumber\"\r\n                  id=\"centerNumber\"\r\n                  type=\"number\"\r\n                  label=\"Numéro du centre\"\r\n                  disabled={isSubmitting}\r\n                />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                <ButtonStyled >\r\n                  <StyledButton type=\"submit\" disabled={isSubmitting}  >Valid{isSubmitting ? \"ation en cours\" : \"er\"}</StyledButton>\r\n                </ButtonStyled>\r\n              </Controls>\r\n            </Form>\r\n          </StyledForm>\r\n        </MiniStyledPage>\r\n      )\r\n      }\r\n    </Formik >\r\n\r\n  );\r\n}\r\n\r\nexport default UpdateCenter;\r\n"]},"metadata":{},"sourceType":"module"}