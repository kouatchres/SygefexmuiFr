{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\RegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { format } from \"date-fns\";\nconst RegionRow = styled.div.withConfig({\n  displayName: \"RegistrationDetails__RegionRow\",\n  componentId: \"c27uxu-0\"\n})([\"display:grid;grid-template-columns:2fr repeat(8,1fr);grid-gap:0.5rem;font-size:1.2rem;border-bottom:1px solid black;padding-left:15px;\"]);\nconst CellBlock = styled.div.withConfig({\n  displayName: \"RegistrationDetails__CellBlock\",\n  componentId: \"c27uxu-1\"\n})([\"align-items:left;justify-items:left;align-content:left;\"]);\n\nconst RegistrationDetails = ({\n  registrat\n}) => {\n  const {\n    candRegistrationNumber,\n    candidate,\n    id,\n    candExamSecretCode\n  } = _objectSpread({}, this.props.registration);\n\n  return __jsx(React.Fragment, null, __jsx(RegionRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/show/results/candResults\",\n      query: {\n        id\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, candRegistrationNumber, \" \")), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, candidate.cand1stName)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, candidate.cand2ndName)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, candidate.cand3rdName)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, format(candidate.dateOfBirth, \"MMM d, YYYY\"))), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, candidate.placeOfBirth)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, candidate.gender.genderName)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, candExamSecretCode)), __jsx(CellBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/show/results/candResults\",\n      query: {\n        id\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Resultats \")))));\n};\n\nexport default RegistrationDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/RegistrationDetails.jsx"],"names":["React","Component","PropTypes","styled","Link","format","RegionRow","div","CellBlock","RegistrationDetails","registrat","candRegistrationNumber","candidate","id","candExamSecretCode","props","registration","pathname","query","cand1stName","cand2ndName","cand3rdName","dateOfBirth","placeOfBirth","gender","genderName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"next/link\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst RegionRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr repeat(8, 1fr);\r\n  grid-gap: 0.5rem;\r\n  font-size: 1.2rem;\r\n  border-bottom: 1px solid black;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst CellBlock = styled.div`\r\n  /* min-width: 7vw; */\r\n  align-items: left;\r\n  justify-items: left;\r\n  align-content: left;\r\n`;\r\n\r\nconst RegistrationDetails =({registrat})=> {\r\n\r\n  \r\n    const { candRegistrationNumber, candidate, id, candExamSecretCode } = {\r\n      ...this.props.registration,\r\n    };\r\n    return (\r\n      <>\r\n        <RegionRow>\r\n          <CellBlock>\r\n            <Link\r\n              href={{\r\n                pathname: \"/show/results/candResults\",\r\n                query: { id },\r\n              }}\r\n            >\r\n              <a target=\"_blank\">{candRegistrationNumber} </a>\r\n            </Link>\r\n            <span></span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{candidate.cand1stName}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{candidate.cand2ndName}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{candidate.cand3rdName}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{format(candidate.dateOfBirth, \"MMM d, YYYY\")}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{candidate.placeOfBirth}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <span>{candidate.gender.genderName}</span>\r\n          </CellBlock>\r\n\r\n          <CellBlock>\r\n            <span>{candExamSecretCode}</span>\r\n          </CellBlock>\r\n          <CellBlock>\r\n            <Link\r\n              href={{\r\n                pathname: \"/show/results/candResults\",\r\n                query: { id },\r\n              }}\r\n            >\r\n              <a target=\"_blank\">Resultats </a>\r\n            </Link>\r\n          </CellBlock>\r\n        </RegionRow>\r\n      </>\r\n    );\r\n}\r\nexport default RegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}