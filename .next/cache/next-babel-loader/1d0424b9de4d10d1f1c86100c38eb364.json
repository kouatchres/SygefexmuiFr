{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\division\\\\DivisionToModifyHook.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Link from \"next/link\";\nimport { StyledForm, SygefexSelect, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport Error from \"../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport useForm from \"../utils/useForm\";\nimport DeleteRegion from \"../region/DeleteRegion\";\nimport { getAllRegionsOfACountryQuery, getAllCountrysQuery, getDivisionsOfARegionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\nconst InputGroup = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__InputGroup\",\n  componentId: \"hrmbrl-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;min-width:12rem;\"]);\nconst Buttons = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__Buttons\",\n  componentId: \"hrmbrl-1\"\n})([\"display:grid;grid-template-columns:1fr;grid-auto-flow:column;grid-gap:1rem;margin:0 auto;\"]);\nconst TwoGroups = styled.div.withConfig({\n  displayName: \"DivisionToModifyHook__TwoGroups\",\n  componentId: \"hrmbrl-2\"\n})([\"display:flex;flex-direction:column;margin:0 auto;min-width:12rem;\"]);\n\nconst DivisionToModifyHook = () => {\n  const [state, setState, handleReactSelectChange] = useForm({\n    divisionID: \"\",\n    regionID: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState({\n      [name]: val\n    });\n  };\n\n  const {\n    data,\n    loading: loadingCount,\n    error: errorCount\n  } = useQuery(getAllCountrysQuery);\n  {\n    loadingCount && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Loading Countries from DB...\");\n  }\n  {\n    errorCount && __jsx(Error, {\n      error: errorCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    });\n  }\n\n  const {\n    countries\n  } = _objectSpread({}, data);\n\n  console.log(countries);\n  const reducedCountries = countries && countries.reduce(item => item);\n  const refinedCountry = removeTypename(reducedCountries);\n  console.log(refinedCountry);\n\n  const {\n    id\n  } = _objectSpread({}, refinedCountry);\n\n  console.log(id);\n  const {\n    data: dataRegions,\n    loading: loadingReg,\n    error: errorReg\n  } = useQuery(getAllRegionsOfACountryQuery, {\n    skip: !id,\n    variables: {\n      id\n    }\n  });\n  {\n    loadingReg && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Loading regions from DB...\");\n  }\n  {\n    errorReg && __jsx(Error, {\n      error: errorReg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    });\n  }\n  const getCountry = dataRegions && dataRegions.country;\n\n  const {\n    region\n  } = _objectSpread({}, getCountry);\n\n  console.log(dataRegions);\n  const getRegionsOptions = region && region.map(item => ({\n    value: item.id,\n    label: item.regName\n  }));\n  state.regionID && console.log(state.regionID);\n  const {\n    data: dataRegion,\n    loading: loadingRegion,\n    error: errRegion\n  } = useQuery(getDivisionsOfARegionQuery, {\n    skip: !state.regionID,\n    variables: {\n      id: state.regionID\n    }\n  });\n  {\n    loadingRegion && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }\n    }, \"loading...\");\n  }\n  {\n    errRegion && __jsx(Error, {\n      error: errRegion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }\n    });\n  }\n  console.log(dataRegion);\n  const getRegion = dataRegion && dataRegion.region;\n\n  const {\n    division\n  } = _objectSpread({}, getRegion);\n\n  console.log(division);\n  const getDivisionOptions = division && division.map(item => ({\n    value: item.id,\n    label: item.divName\n  }));\n  console.log(state.divisionID);\n  return __jsx(Formik, {\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(MinimStyledPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Correction Info D\\xE9partement\"), __jsx(Error, {\n    error: errorReg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), __jsx(StyledForm, {\n    disabled: isSubmitting || loadingReg,\n    \"aria-busy\": isSubmitting || loadingReg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(TwoGroups, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(SygefexSelect, {\n    name: \"regionID\",\n    onChange: handleReactSelectChange,\n    options: getRegionsOptions,\n    placeholder: \"La Région\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), __jsx(SygefexSelect, {\n    name: \"divisionID\",\n    onChange: handleReactSelectChange,\n    options: getDivisionOptions,\n    placeholder: \"La Département\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), __jsx(Buttons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, __jsx(ButtonStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Supprimer\")), __jsx(ButtonStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"../updates/updateDivision\",\n      query: state.divisionID && {\n        id: state.divisionID\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"Modifier\"))))))))));\n};\n\nexport default DivisionToModifyHook;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/division/DivisionToModifyHook.jsx"],"names":["React","MinimStyledPage","useQuery","Link","StyledForm","SygefexSelect","ButtonStyled","StyledButton","Error","Formik","Form","styled","useForm","DeleteRegion","getAllRegionsOfACountryQuery","getAllCountrysQuery","getDivisionsOfARegionQuery","removeTypename","InputGroup","div","Buttons","TwoGroups","DivisionToModifyHook","state","setState","handleReactSelectChange","divisionID","regionID","handleChange","e","name","value","type","target","val","parseInt","data","loading","loadingCount","error","errorCount","countries","console","log","reducedCountries","reduce","item","refinedCountry","id","dataRegions","loadingReg","errorReg","skip","variables","getCountry","country","region","getRegionsOptions","map","label","regName","dataRegion","loadingRegion","errRegion","getRegion","division","getDivisionOptions","divName","values","isSubmitting","pathname","query"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  StyledForm,\r\n  SygefexSelect,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport Error from \"../ErrorMessage\";\r\nimport { Formik, Form } from \"formik\";\r\nimport styled from \"styled-components\";\r\nimport useForm from \"../utils/useForm\";\r\nimport DeleteRegion from \"../region/DeleteRegion\";\r\nimport {\r\n  getAllRegionsOfACountryQuery,\r\n  getAllCountrysQuery,\r\n  getDivisionsOfARegionQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n  min-width: 12rem;\r\n`;\r\nconst Buttons = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: column;\r\n  grid-gap: 1rem;\r\n  margin: 0 auto;\r\n`;\r\nconst TwoGroups = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  min-width: 12rem;\r\n`;\r\n\r\nconst DivisionToModifyHook = () => {\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    divisionID: \"\",\r\n    regionID: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const { data, loading: loadingCount, error: errorCount } = useQuery(\r\n    getAllCountrysQuery\r\n  );\r\n  {\r\n    loadingCount && <p>Loading Countries from DB...</p>;\r\n  }\r\n  {\r\n    errorCount && <Error error={errorCount} />;\r\n  }\r\n  const { countries } = { ...data };\r\n  console.log(countries);\r\n  const reducedCountries = countries && countries.reduce((item) => item);\r\n  const refinedCountry = removeTypename(reducedCountries);\r\n  console.log(refinedCountry);\r\n  const { id } = { ...refinedCountry };\r\n  console.log(id);\r\n\r\n  const { data: dataRegions, loading: loadingReg, error: errorReg } = useQuery(\r\n    getAllRegionsOfACountryQuery,\r\n    {\r\n      skip: !id,\r\n      variables: { id },\r\n    }\r\n  );\r\n  {\r\n    loadingReg && <p>Loading regions from DB...</p>;\r\n  }\r\n  {\r\n    errorReg && <Error error={errorReg} />;\r\n  }\r\n  const getCountry = dataRegions && dataRegions.country;\r\n  const { region } = { ...getCountry };\r\n  console.log(dataRegions);\r\n  const getRegionsOptions =\r\n    region &&\r\n    region.map((item) => ({\r\n      value: item.id,\r\n      label: item.regName,\r\n    }));\r\n  state.regionID && console.log(state.regionID);\r\n\r\n  const {\r\n    data: dataRegion,\r\n    loading: loadingRegion,\r\n    error: errRegion,\r\n  } = useQuery(getDivisionsOfARegionQuery, {\r\n    skip: !state.regionID,\r\n    variables: { id: state.regionID },\r\n  });\r\n  {\r\n    loadingRegion && <p>loading...</p>;\r\n  }\r\n  {\r\n    errRegion && <Error error={errRegion} />;\r\n  }\r\n  console.log(dataRegion);\r\n  const getRegion = dataRegion && dataRegion.region;\r\n  const { division } = { ...getRegion };\r\n  console.log(division);\r\n  const getDivisionOptions =\r\n    division &&\r\n    division.map((item) => ({ value: item.id, label: item.divName }));\r\n\r\n  console.log(state.divisionID);\r\n\r\n  return (\r\n    <Formik method=\"POST\">\r\n      {({ values, isSubmitting }) => (\r\n        <MinimStyledPage>\r\n          <h4>Correction Info Département</h4>\r\n          <Error error={errorReg} />\r\n          <StyledForm\r\n            disabled={isSubmitting || loadingReg}\r\n            aria-busy={isSubmitting || loadingReg}\r\n          >\r\n            <Form>\r\n              <TwoGroups>\r\n                <InputGroup>\r\n                  <SygefexSelect\r\n                    name=\"regionID\"\r\n                    onChange={handleReactSelectChange}\r\n                    options={getRegionsOptions}\r\n                    placeholder={\"La Région\"}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <SygefexSelect\r\n                    name=\"divisionID\"\r\n                    onChange={handleReactSelectChange}\r\n                    options={getDivisionOptions}\r\n                    placeholder={\"La Département\"}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </InputGroup>\r\n                <Buttons>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\" id={id}>\r\n                      Supprimer\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\">\r\n                      <Link\r\n                        href={{\r\n                          pathname: \"../updates/updateDivision\",\r\n                          query: state.divisionID && { id: state.divisionID },\r\n                        }}\r\n                      >\r\n                        <a target=\"_blank\">Modifier</a>\r\n                      </Link>\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </Buttons>\r\n              </TwoGroups>\r\n            </Form>\r\n          </StyledForm>\r\n        </MinimStyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default DivisionToModifyHook;\r\n"]},"metadata":{},"sourceType":"module"}