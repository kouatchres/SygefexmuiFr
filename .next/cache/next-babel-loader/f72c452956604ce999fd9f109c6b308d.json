{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\centerExamSessionSpecialty\\\\CenterSpecialtyDistribution.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getAllEducationTypesQuery, getAllSpecialtiesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { removeTypename, getSpecialtyID, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nvar validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nvar CESRegistration = function CESRegistration() {\n  _s();\n\n  var _useForm3;\n\n  var classes = useStyles();\n  var client = useApolloClient();\n  var initialValues = {// centerNumber: \"\",\n    // examID: \"\",\n    // sessionID: \",\n  };\n\n  var _useForm = useForm((_useForm3 = {\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    educTypeID: \"\"\n  }, _defineProperty(_useForm3, \"educTypeID\", \"\"), _defineProperty(_useForm3, \"exams\", []), _defineProperty(_useForm3, \"sessions\", []), _defineProperty(_useForm3, \"centerByNumber\", \"\"), _defineProperty(_useForm3, \"examSessions\", \"\"), _defineProperty(_useForm3, \"centerExamSessions\", []), _defineProperty(_useForm3, \"CESS\", \"\"), _useForm3)),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      educTypeID = state.educTypeID,\n      exams = state.exams,\n      examSessions = state.examSessions,\n      sessions = state.sessions,\n      centerExamSessions = state.centerExamSessions,\n      centerByNumber = state.centerByNumber;\n\n  var makeCenterVariableObject = function makeCenterVariableObject(centerCodeValue) {\n    var storedCenter = {\n      centerNumber: \"\".concat(centerCodeValue)\n    };\n    return storedCenter;\n  };\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadExamData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref2) {\n    var examName = _ref2.examName,\n        others = _objectWithoutProperties(_ref2, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSessionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.dir(\"running the exam session query\");\n              _context3.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query4, error, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context4.sent;\n              error = _yield$client$query4.error;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadCenterData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n  console.log(centerByNumber);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context5.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadCESData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getCES = centerExamSessions && centerExamSessions[0];\n  console.log(getCES);\n  useEffect(function () {\n    loadCESData();\n  }, [centerNumber, examSessions]);\n\n  var loadEducTypeData = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query6, error, data, getEducationTypes;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                query: getAllEducationTypesQuery\n              });\n\n            case 2:\n              _yield$client$query6 = _context6.sent;\n              error = _yield$client$query6.error;\n              data = _yield$client$query6.data;\n              console.log(dataEducType);\n              getEducationTypes = dataEducType && dataEducType.educationTypes;\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  educType: getEducationType\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadEducTypeData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var getEducTypeOptions = getEducationTypes && getEducationTypes.map(function (item) {\n    return {\n      value: item.id,\n      label: item.educationTypeName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadEducTypeData();\n    loadSessionData();\n  }, []);\n\n  var _useQuery = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\n    skip: !educTypeID,\n    variables: {\n      id: educTypeID\n    }\n  }),\n      dataSpecialty = _useQuery.data,\n      loadingSpecialty = _useQuery.loading,\n      errorSpecialty = _useQuery.errorSpecialty;\n\n  console.log(dataSpecialty);\n  var getEducationType = dataSpecialty && dataSpecialty.educationType;\n\n  var specialtyEducType = _objectSpread({}, getEducationType);\n\n  var specialty = specialtyEducType.specialty;\n  console.log(specialty);\n  var removeSpecialtyName = specialty && specialty.map(function (_ref8) {\n    var specialtyName = _ref8.specialtyName,\n        others = _objectWithoutProperties(_ref8, [\"specialtyName\"]);\n\n    return others;\n  });\n  var refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\n  var getSpecialtyOptions = specialty && specialty.map(function (item) {\n    return {\n      value: item.id,\n      label: item.specialtyName\n    };\n  });\n\n  var _useMutation = useMutation(createCenterExamSessionSpecialtyMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createCenterExamSessionSpecialty = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(values, _ref9) {\n        var resetForm, setSubmitting, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                resetForm = _ref9.resetForm, setSubmitting = _ref9.setSubmitting;\n                _context7.next = 3;\n                return createCenterExamSessionSpecialty({\n                  variables: {\n                    specialty: refinedSpecialty && getSelectedObject(refinedSpecialty, values.specialty.value),\n                    centerExamSession: getCES && getCES\n                  }\n                });\n\n              case 3:\n                res = _context7.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x, _x2) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, function (_ref11) {\n    var submitForm = _ref11.submitForm,\n        setFieldValue = _ref11.setFieldValue,\n        isSubmitting = _ref11.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, \"Inscription des Series aux centres\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"educTypeID\",\n      label: \"Type d'enseignement\",\n      component: Select,\n      placeholder: \"Type d'ensignement\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"educTypeID\");\n      },\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"educTypeID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 37\n        }\n      }),\n      options: getEducTypeOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"specialty\",\n      label: \"Serie\",\n      component: Select,\n      placeholder: \"Serie\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"specialty\");\n      },\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"specialty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 37\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Inscrire Centre\")))))));\n  });\n};\n\n_s(CESRegistration, \"LFSbI2/KV6o7azJBQWPGHyBoi2M=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useQuery, useMutation];\n});\n\n_c = CESRegistration;\nexport default CESRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"CESRegistration\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/centerExamSessionSpecialty/CenterSpecialtyDistribution.jsx"],"names":["React","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","useMutation","useQuery","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getAllEducationTypesQuery","getAllSpecialtiesOfAnEducationTypeQuery","createCenterExamSessionSpecialtyMutation","removeTypename","getSpecialtyID","getSelectedObject","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","CESRegistration","classes","client","initialValues","centerNumber","examID","sessionID","educTypeID","state","setState","handleSelectChange","handleInputChange","exams","examSessions","sessions","centerExamSessions","centerByNumber","makeCenterVariableObject","centerCodeValue","storedCenter","loadExamData","query","error","data","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCES","loadEducTypeData","dataEducType","getEducationTypes","educationTypes","educType","getEducationType","getEducTypeOptions","educationTypeName","dataSpecialty","loadingSpecialty","loading","errorSpecialty","educationType","specialtyEducType","specialty","removeSpecialtyName","specialtyName","refinedSpecialty","getSpecialtyOptions","createCenterExamSessionSpecialty","loadingMut","values","resetForm","setSubmitting","centerExamSession","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","centerCode","event"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSpecialtiesOfAnEducationTypeQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { createCenterExamSessionSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nimport {\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst CESRegistration = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    // centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    educTypeID: \"\",\r\n    educTypeID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: [],\r\n    CESS: \"\",\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    educTypeID,\r\n    exams,\r\n    examSessions,\r\n    sessions,\r\n    centerExamSessions,\r\n    centerByNumber,\r\n  } = state;\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n  console.log(centerByNumber);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n  const getCES = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCES);\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  const loadEducTypeData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllEducationTypesQuery,\r\n    });\r\n\r\n    console.log(dataEducType);\r\n    const getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n    setState((prev) => ({ ...prev, educType: getEducationType }));\r\n  };\r\n\r\n  const getEducTypeOptions =\r\n    getEducationTypes &&\r\n    getEducationTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadEducTypeData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  const {\r\n    data: dataSpecialty,\r\n    loading: loadingSpecialty,\r\n    errorSpecialty,\r\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\r\n    skip: !educTypeID,\r\n    variables: { id: educTypeID },\r\n  });\r\n\r\n  console.log(dataSpecialty);\r\n\r\n  const getEducationType = dataSpecialty && dataSpecialty.educationType;\r\n\r\n  const specialtyEducType = { ...getEducationType };\r\n  const { specialty } = specialtyEducType;\r\n  console.log(specialty);\r\n  const removeSpecialtyName =\r\n    specialty && specialty.map(({ specialtyName, ...others }) => others);\r\n  const refinedSpecialty = specialty && removeTypename(removeSpecialtyName);\r\n  const getSpecialtyOptions =\r\n    specialty &&\r\n    specialty.map((item) => ({ value: item.id, label: item.specialtyName }));\r\n\r\n  const [createCenterExamSessionSpecialty, { loadingMut, error }] = useMutation(\r\n    createCenterExamSessionSpecialtyMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const res = await createCenterExamSessionSpecialty({\r\n          variables: {\r\n            specialty:\r\n              refinedSpecialty &&\r\n              getSelectedObject(refinedSpecialty, values.specialty.value),\r\n            centerExamSession: getCES && getCES,\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Inscription des Series aux centres\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"educTypeID\"\r\n                        label=\"Type d'enseignement\"\r\n                        component={Select}\r\n                        placeholder=\"Type d'ensignement\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"educTypeID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"educTypeID\" />}\r\n                        options={getEducTypeOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"specialty\"\r\n                        label=\"Serie\"\r\n                        component={Select}\r\n                        placeholder=\"Serie\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"specialty\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"specialty\" />}\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Inscrire Centre\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CESRegistration;\r\n"]},"metadata":{},"sourceType":"module"}