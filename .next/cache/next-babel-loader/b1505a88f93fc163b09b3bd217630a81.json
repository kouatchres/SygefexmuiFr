{"ast":null,"code":"import _extends from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../../utils/icons/tableIcons\";\nimport ConfirmDialog from \"../../utils/ConfirmDialog\";\nimport AddPopup from \"../../utils/AddPopup\";\nimport UpdatePopup from \"../../utils/UpdatePopup\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nvar useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nvar CenterRegistrationDetails = function CenterRegistrationDetails(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var client = useApolloClient();\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      isAddPopupOpen = _useState[0],\n      setIsAddPopupOpen = _useState[1];\n\n  var _useState2 = useState({\n    isOpen: false,\n    id: \"\"\n  }),\n      updatePopupState = _useState2[0],\n      setUpdatePopupState = _useState2[1];\n\n  var _useState3 = useState({\n    columns: [{\n      field: \"No\",\n      title: \"Region\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"divName\",\n      title: \"Dept\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"townName\",\n      title: \"Ville\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerName\",\n      title: \"Centre\",\n      options: {\n        width: 400,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerNumber\",\n      title: \"No\",\n      // grouping: false,\n      type: \"numeric\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }],\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var initialValues = {};\n\n  var loadCenterRegistrationInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getCenterExamSession, registration, center, examSession, _examSession, exam, session;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: centerExamSessionForResultsQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getCenterExamSession = data.centerExamSession;\n              registration = getCenterExamSession.registration, center = getCenterExamSession.center, examSession = getCenterExamSession.examSession;\n              _examSession = _objectSpread({}, examSession), exam = _examSession.exam, session = _examSession.session;\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  center: center,\n                  registration: registration,\n                  exam: exam,\n                  session: session\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCenterRegistrationInfo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterRegistrationInfo();\n  }, []);\n  var center = state.center,\n      session = state.session,\n      exam = state.exam,\n      registration = state.registration;\n\n  var handleAddPopupClose = function handleAddPopupClose() {\n    setIsAddPopupOpen(false);\n  };\n\n  var handleUpdatePopupClose = function handleUpdatePopupClose() {\n    setUpdatePopupState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var handleDeleteConfirmDialog = function handleDeleteConfirmDialog() {\n    setDeleteConfirmDialog(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var actions = [{\n    icon: function icon() {\n      return __jsx(AddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Ajouter Nouveau Centre\",\n    isFreeAction: true,\n    onClick: function onClick() {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Modifier Centre\",\n    onClick: function onClick(event, rowData) {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      });\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Supprimer Centre\",\n    onClick: function onClick(event, rowData) {\n      return setDeleteConfirmDialog({\n        id: rowData.id,\n        isOpen: true,\n        title: \"Etes-vous sur de suprimer cette inofrmation\",\n        subtitle: \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\n        onConfirm: function onConfirm() {\n          rowData.id && deleteCenter(rowData.id);\n          setNotify({\n            isOpen: true,\n            message: \"Centre Supprimé avec success\",\n            type: \"error\"\n          });\n        }\n      });\n    }\n  }];\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"Resultats Complets Du: \", exam && exam.examName, \", Session:\", \" \", session && session.sessionName, \", centre:\", \" \", center && center.centerCode))), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, __jsx(MaterialTable, {\n      className: classes.head,\n      components: {\n        Toolbar: function Toolbar(props) {\n          return __jsx(\"div\", {\n            style: {\n              backgroundColor: \"#829079\",\n              borderTopRightRadius: \"0.5rem\",\n              borderTopLeftRadius: \"0.5rem\",\n              color: \"#ede6b9\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }\n          }, __jsx(MTableToolbar, _extends({\n            style: {\n              // textColor: \"#000\",\n              textColor: \"#fff\"\n            }\n          }, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 27\n            }\n          })));\n        }\n      },\n      icons: tableIcons,\n      title: \"Liste des Candidats..................                            \",\n      columns: state.columns,\n      data: state.registration,\n      options: {\n        actionsColumnIndex: -1,\n        grouping: true,\n        paging: true,\n        pageSize: 50,\n        // make initial page size\n        emptyRowsWhenPaging: false,\n        //to make page size fix in case of less data rows\n        pageSizeOptions: [25, 50, 75, 100, 150],\n        // rows selection options\n        headerStyle: {\n          paddingTop: \"0.5rem\",\n          paddingBottom: \"0.5rem\",\n          // backgroundColor: \"#abb\",\n          color: \"#ede6b9\",\n          backgroundColor: \"#b9925e\",\n          maxHeight: \"0.5rem !important\"\n        },\n        rowStyle: {\n          color: \"#000\"\n        }\n      },\n      actions: actions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }), __jsx(AddPopup, {\n      title: \"Nouveau Centre\",\n      isOpen: isAddPopupOpen,\n      onClose: handleAddPopupClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }), __jsx(ConfirmDialog, {\n      title: deleteConfirmDialog.title,\n      subtitle: deleteConfirmDialog.subtitle,\n      isOpen: deleteConfirmDialog.isOpen,\n      onClose: handleDeleteConfirmDialog,\n      onConfirm: deleteConfirmDialog.onConfirm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }), __jsx(UpdatePopup // title={updatePopupState.id}\n    , {\n      isOpen: updatePopupState.isOpen,\n      onClose: handleUpdatePopupClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }))))));\n  });\n};\n\n_s(CenterRegistrationDetails, \"U7+sLQMCPzyhRUCcjjRy0UuAvd4=\", false, function () {\n  return [useApolloClient, useStyles];\n});\n\n_c = CenterRegistrationDetails;\nexport default CenterRegistrationDetails; // {\n//     registration && registration.map((item) => (\n//         <RegistrationDetails key={item.id} registration={item} />\n//     ))\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CenterRegistrationDetails\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","tableIcons","ConfirmDialog","AddPopup","UpdatePopup","MaterialTable","MTableToolbar","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","isAddPopupOpen","setIsAddPopupOpen","isOpen","updatePopupState","setUpdatePopupState","columns","field","title","options","headerNoWrap","type","center","exam","session","registration","state","setState","initialValues","loadCenterRegistrationInfo","query","variables","data","getCenterExamSession","centerExamSession","examSession","prev","handleAddPopupClose","handleUpdatePopupClose","handleDeleteConfirmDialog","setDeleteConfirmDialog","actions","icon","tooltip","isFreeAction","onClick","event","rowData","subtitle","onConfirm","deleteCenter","setNotify","message","values","isSubmitting","examName","sessionName","centerCode","head","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","textColor","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","deleteConfirmDialog","notify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../../utils/icons/tableIcons\";\r\nimport ConfirmDialog from \"../../utils/ConfirmDialog\";\r\nimport AddPopup from \"../../utils/AddPopup\";\r\nimport UpdatePopup from \"../../utils/UpdatePopup\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"No\",\r\n        title: \"Region\",\r\n        options: {\r\n          width: 30,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"divName\",\r\n        title: \"Dept\",\r\n        options: {\r\n          width: 30,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n      {\r\n        field: \"townName\",\r\n        title: \"Ville\",\r\n        options: {\r\n          width: 30,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n      {\r\n        field: \"centerName\",\r\n        title: \"Centre\",\r\n        options: {\r\n          width: 400,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"centerNumber\",\r\n        title: \"No\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n        options: {\r\n          width: 30,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n    ],\r\n    center: \"\",\r\n    exam: \"\",\r\n    session: \"\",\r\n    registration: [],\r\n  });\r\n\r\n  const initialValues = {};\r\n\r\n  const loadCenterRegistrationInfo = async () => {\r\n    const { data } = await client.query({\r\n      query: centerExamSessionForResultsQuery,\r\n      variables: { id },\r\n    });\r\n\r\n    const getCenterExamSession = data.centerExamSession;\r\n    const { registration, center, examSession } = getCenterExamSession;\r\n    const { exam, session } = { ...examSession };\r\n\r\n    setState((prev) => ({ ...prev, center, registration, exam, session }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterRegistrationInfo();\r\n  }, []);\r\n  const { center, session, exam, registration } = state;\r\n\r\n  const handleAddPopupClose = () => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  \r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Ajouter Nouveau Centre\",\r\n      isFreeAction: true,\r\n      onClick: () => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifier Centre\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer Centre\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteCenter(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Centre Supprimé avec success\",\r\n              type: \"error\",\r\n            });\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n  return (\r\n    <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats Complets Du: {exam && exam.examName}, Session:{\" \"}\r\n                      {session && session.sessionName}, centre:{\" \"}\r\n                      {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <div>\r\n                  <MaterialTable\r\n                    className={classes.head}\r\n                    components={{\r\n                      Toolbar: (props) => (\r\n                        <div\r\n                          style={{\r\n                            backgroundColor: \"#829079\",\r\n                            borderTopRightRadius: \"0.5rem\",\r\n                            borderTopLeftRadius: \"0.5rem\",\r\n                            color: \"#ede6b9\",\r\n                          }}\r\n                        >\r\n                          <MTableToolbar\r\n                            style={{\r\n                              // textColor: \"#000\",\r\n                              textColor: \"#fff\",\r\n                            }}\r\n                            {...props}\r\n                          />\r\n                        </div>\r\n                      ),\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Liste des Candidats..................                            \"\r\n                    columns={state.columns}\r\n                    data={state.registration}\r\n                    options={{\r\n                      actionsColumnIndex: -1,\r\n                      grouping: true,\r\n                      paging: true,\r\n                      pageSize: 50, // make initial page size\r\n                      emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n                      pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n                      headerStyle: {\r\n                        paddingTop: \"0.5rem\",\r\n                        paddingBottom: \"0.5rem\",\r\n                        // backgroundColor: \"#abb\",\r\n                        color: \"#ede6b9\",\r\n                        backgroundColor: \"#b9925e\",\r\n                        maxHeight: \"0.5rem !important\",\r\n                      },\r\n                      rowStyle: {\r\n                        color: \"#000\",\r\n                      },\r\n                    }}\r\n                    actions={actions}\r\n                  />\r\n                  <AddPopup\r\n                    title=\"Nouveau Centre\"\r\n                    isOpen={isAddPopupOpen}\r\n                    onClose={handleAddPopupClose}\r\n                  >\r\n                  </AddPopup>\r\n                  <ConfirmDialog\r\n                    title={deleteConfirmDialog.title}\r\n                    subtitle={deleteConfirmDialog.subtitle}\r\n                    isOpen={deleteConfirmDialog.isOpen}\r\n                    onClose={handleDeleteConfirmDialog}\r\n                    onConfirm={deleteConfirmDialog.onConfirm}\r\n                  />\r\n                  <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                  <UpdatePopup\r\n                    // title={updatePopupState.id}\r\n                    isOpen={updatePopupState.isOpen}\r\n                    onClose={handleUpdatePopupClose}\r\n                  >\r\n                  </UpdatePopup>\r\n                </div>\r\n              </Grid>\r\n            </Form>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CenterRegistrationDetails;\r\n\r\n// {\r\n//     registration && registration.map((item) => (\r\n//         <RegistrationDetails key={item.id} registration={item} />\r\n//     ))\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}