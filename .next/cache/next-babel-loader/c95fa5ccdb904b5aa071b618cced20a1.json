{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\NewUpdateRegionHook.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { MiniStyledPage } from \"../styles/StyledPage\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { Form, Formik } from \"formik\";\nimport { updateRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getSingleRegionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { StyledForm, ButtonStyled, StyledButton, SygexInput } from \"../utils/FormInputs\";\nconst validationSchema = Yup.object().shape({\n  regName: Yup.string().required(\"Nom Région Obligatoire\"),\n  regCode: Yup.string().required(\"Code Région Obligatoire\")\n});\n\nconst NewUpdateRegionHook = ({\n  id\n}) => {\n  const [state, setState] = useForm({\n    regCode: \"\",\n    regName: \"\"\n  });\n  const client = useApolloClient();\n  console.log(id);\n\n  const loadRegionData = async () => {\n    const {\n      data,\n      error\n    } = await client.query({\n      query: getSingleRegionQuery,\n      variables: {\n        id\n      }\n    });\n    const getRegionData = data.region;\n    const {\n      regName,\n      regCode\n    } = getRegionData;\n    setState({\n      regName: regName,\n      regCode: regCode\n    });\n    return getRegionData;\n  };\n\n  const initialValues = {\n    regName: \"\",\n    regCode: \"\"\n  };\n  useEffect(() => {\n    loadRegionData();\n  }, []);\n  console.log(state);\n  const [updateRegion] = useMutation(updateRegionMutation, {\n    variables: {\n      id\n    }\n  });\n  return __jsx(Formik, {\n    initialValues: state || initialValues,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await updateRegion({\n        variables: _objectSpread({}, values)\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(MiniStyledPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Modification de R\\xE9gion\"), __jsx(StyledForm, {\n    disabled: isSubmitting,\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(SygexInput, {\n    type: \"text\",\n    id: \"regName\",\n    name: \"regName\",\n    label: \"Nom R\\xE9gion\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), __jsx(SygexInput, {\n    type: \"text\",\n    id: \"regCode\",\n    name: \"regCode\",\n    label: \"Code R\\xE9gion\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), __jsx(ButtonStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Valid\", isSubmitting ? \"cation\" : \"er\"))))));\n};\n\nexport default NewUpdateRegionHook;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/NewUpdateRegionHook.jsx"],"names":["React","useEffect","useMutation","useApolloClient","MiniStyledPage","Yup","useForm","Form","Formik","updateRegionMutation","getSingleRegionQuery","StyledForm","ButtonStyled","StyledButton","SygexInput","validationSchema","object","shape","regName","string","required","regCode","NewUpdateRegionHook","id","state","setState","client","console","log","loadRegionData","data","error","query","variables","getRegionData","region","initialValues","updateRegion","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { MiniStyledPage } from \"../styles/StyledPage\";\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { updateRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getSingleRegionQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n  SygexInput,\r\n} from \"../utils/FormInputs\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  regName: Yup.string().required(\"Nom Région Obligatoire\"),\r\n  regCode: Yup.string().required(\"Code Région Obligatoire\"),\r\n});\r\nconst NewUpdateRegionHook = ({ id }) => {\r\n  const [state, setState] = useForm({ regCode: \"\", regName: \"\" });\r\n  const client = useApolloClient();\r\n\r\n  console.log(id);\r\n\r\n  const loadRegionData = async () => {\r\n    const { data, error } = await client.query({\r\n      query: getSingleRegionQuery,\r\n      variables: { id },\r\n    });\r\n    const getRegionData = data.region;\r\n    const { regName, regCode } = getRegionData;\r\n    setState({\r\n      regName: regName,\r\n      regCode: regCode,\r\n    });\r\n    return getRegionData;\r\n  };\r\n\r\n  const initialValues = {\r\n    regName: \"\",\r\n    regCode: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.log(state);\r\n\r\n  const [updateRegion] = useMutation(updateRegionMutation, {\r\n    variables: { id },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={state || initialValues}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await updateRegion({ variables: { ...values } });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <MiniStyledPage>\r\n          <Form>\r\n            <h4>Modification de Région</h4>\r\n            <StyledForm disabled={isSubmitting} aria-busy={isSubmitting}>\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"regName\"\r\n                name=\"regName\"\r\n                label=\"Nom Région\"\r\n                disabled={isSubmitting}\r\n              />\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"regCode\"\r\n                name=\"regCode\"\r\n                label=\"Code Région\"\r\n                disabled={isSubmitting}\r\n              />\r\n              <ButtonStyled>\r\n                <StyledButton type=\"submit\">\r\n                  Valid{isSubmitting ? \"cation\" : \"er\"}\r\n                </StyledButton>\r\n              </ButtonStyled>\r\n            </StyledForm>\r\n          </Form>\r\n        </MiniStyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewUpdateRegionHook;\r\n"]},"metadata":{},"sourceType":"module"}