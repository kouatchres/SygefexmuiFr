{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { useRouter } from \"next/router\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport Notification from \"../utils/Notification\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getExamSessionQuery, getAllExamsQuery, getRegisteredCandidatesPerSpecialty, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSpecialtiesOfACenterExamSessionQuery, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { removeTypename, getSpecialtyID, getSelectedObject, candExamSessionCode } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    padding: \"1rem\",\n    maxWidth: \"80%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nconst validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nconst Attendance = () => {\n  const classes = useStyles();\n  const router = useRouter();\n  const client = useApolloClient();\n  const initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    specialties: [],\n    centerNumber: \"\",\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\",\n    centerExamSessionSpecialty: {},\n    candsPerSeries: []\n  });\n  const {\n    centerNumber,\n    examID,\n    sessionID,\n    exams,\n    sessions,\n    specialties,\n    centerByNumber,\n    examSessions,\n    centerExamSessions,\n    centerExamSessionSpecialty,\n    candsPerSeries\n  } = state;\n\n  const makeCenterVariableObject = centerCodeValue => {\n    const storedCenter = {\n      centerNumber: `${centerCodeValue}`\n    };\n    return storedCenter;\n  };\n\n  const makeCandVariableObject = candCodeValue => {\n    const storedCandidate = {\n      candCode: `${candCodeValue}`\n    };\n    return storedCandidate;\n  };\n\n  const candRegistrationNumber = (centerCode, exam, session) => {\n    return `${centerCode + exam + session}`;\n  };\n\n  const loadExamData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      loading: true\n    }));\n    loadExamData();\n    loadSessionData();\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      loading: false\n    }));\n  }, []);\n  console.dir(getSessionName);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running the exam session query\");\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: \"\"\n    }));\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerByNumber: \"\"\n    }));\n    loadCenterData();\n  }, [centerNumber]);\n\n  const loadCESData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions\n    }));\n  };\n\n  useEffect(() => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: \"\"\n    }));\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  const getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n\n  const loadCESS = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSpecialtiesOfACenterExamSessionQuery,\n      variables: getCESID\n    });\n    console.log(data);\n    const getCenterExamSession = data && data.centerExamSession;\n\n    const {\n      centerExamSessionSpecialty\n    } = _objectSpread({}, getCenterExamSession);\n\n    console.log({\n      centerExamSessionSpecialty\n    });\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      specialties: centerExamSessionSpecialty\n    }));\n  };\n\n  useEffect(() => {\n    loadCESS();\n  }, [getCESID, centerNumber]);\n  const newSpecialty = specialties && specialties.map(item => item);\n  const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  console.log(refinedSpecialty);\n  const getSpecialtyOptions = refinedSpecialty && refinedSpecialty.map(item => ({\n    id: item.specialty.id,\n    value: item.id,\n    label: item.specialty.specialtyName\n  }));\n\n  const loadCenterRegistrationInfo = async () => {\n    console.log(\"running the candidate query\");\n    const {\n      data\n    } = await client.query({\n      query: getRegisteredCandidatesPerSpecialty,\n      variables: {\n        id: centerExamSessionSpecialty\n      }\n    });\n    console.log(data);\n    const {\n      registration,\n      center,\n      examSession\n    } = data.centerExamSessionSpecialty;\n    console.log(registration); //  const regInfo =registration.map((item)=>{\n    //           const candInfo = item.candidate.map((candItem)=>({\n    //             regID:item.id,\n    //             candRegNo: item.candRegistrationNumber,\n    //             ...candItem\n    //           }))\n    //           return candInfo\n    //         })\n\n    const regCandInfo = registration.map(item => ({\n      regID: item.id,\n      candRegNo: item.candRegistrationNumber,\n      candidates\n    }));\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      candsPerSeries: registration\n    }));\n  };\n\n  console.log({\n    candsPerSeries\n  });\n  useEffect(() => {\n    loadCenterRegistrationInfo();\n  }, [centerExamSessionSpecialty]);\n  console.log({\n    state\n  });\n  console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\n  const [createAttendance, {\n    loadingMut,\n    error\n  }] = useMutation(createAttendanceMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createAttendance({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          candExamSecretCode: values.candExamSecretCode.value,\n          centerExamSessionSpecialty: getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\n          subjectSpecialty: refinedSubjectSpecialty && getObjectFromID(values.subjectSpecialty.value)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"Présence indiquée avec success\",\n          type: \"success\"\n        });\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 37\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 23\n      }\n    }, \"Inscription aux Examens\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"La Sp\\xE9cialit\\xE9\",\n      onChange: event => {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 27\n        }\n      }),\n      options: getSpecialtyOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      component: Select,\n      label: \"Candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      options: getExamsOptions,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"collected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"collected\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Collecte de mat\\xE9riels\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helpertext: __jsx(ErrorMessage, {\n        name: \"handin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"handin\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Remise de copies\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Validation en cours\" : \"Valide présence\")))))));\n  });\n};\n\nexport default Attendance;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useState","useEffect","Error","Yup","FRadioGroup","useRouter","createAttendanceMutation","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","Notification","makeStyles","useApolloClient","useMutation","getExamSessionQuery","getAllExamsQuery","getRegisteredCandidatesPerSpecialty","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSpecialtiesOfACenterExamSessionQuery","getSingleCenterQuery","removeTypename","getSpecialtyID","getSelectedObject","candExamSessionCode","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","Attendance","classes","router","client","initialValues","centerNumber","notify","setNotify","isOpen","message","type","state","setState","handleSelectChange","handleInputChange","candCode","examID","sessionID","exams","sessions","specialties","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","candsPerSeries","makeCenterVariableObject","centerCodeValue","storedCenter","makeCandVariableObject","candCodeValue","storedCandidate","candRegistrationNumber","centerCode","exam","session","loadExamData","error","data","query","getExams","console","log","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","value","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loading","loadExamSessionData","skip","variables","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","loadCESS","getCenterExamSession","centerExamSession","newSpecialty","refinedSpecialty","getSpecialtyOptions","specialty","specialtyName","loadCenterRegistrationInfo","registration","regCandInfo","regID","candRegNo","candidates","createAttendance","loadingMut","values","setSubmitting","resetForm","res","candExamSecretCode","getCESSSubjIDs","getObjectFromID","subjectSpecialty","refinedSubjectSpecialty","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n  candExamSessionCode,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"80%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst Attendance = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    specialties: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n    candsPerSeries:[],\r\n\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    specialties,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    centerExamSessionSpecialty,\r\n    candsPerSeries,\r\n  } = state;\r\n\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candCode: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  const candRegistrationNumber = (centerCode, exam, session) => {\r\n    return `${centerCode + exam + session}`;\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    \r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    \r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n    }));\r\n    loadExamData();\r\n    loadSessionData();\r\n     setState((prev) => ({\r\n      ...prev,\r\n      loading: false,\r\n    }));\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    \r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: \"\",\r\n    }));\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerByNumber: \"\",\r\n    }));\r\n\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: \"\",\r\n       }));\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  const loadCESS = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n      variables: getCESID,\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSession = data && data.centerExamSession;\r\n    const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n    console.log({ centerExamSessionSpecialty });\r\n    setState((prev) => ({\r\n      ...prev,\r\n      specialties: centerExamSessionSpecialty,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESS();\r\n  }, [getCESID, centerNumber]);\r\n\r\n  const newSpecialty = specialties && specialties.map((item) => item);\r\n  const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  console.log(refinedSpecialty);\r\n  const getSpecialtyOptions =\r\n    refinedSpecialty &&\r\n    refinedSpecialty.map((item) => ({\r\n      id: item.specialty.id,\r\n      value: item.id,\r\n      label: item.specialty.specialtyName,\r\n    }));\r\n\r\n\r\n\r\n\r\n\r\n  const loadCenterRegistrationInfo = async () => {\r\n    console.log(\"running the candidate query\")\r\n    const { data } = await client.query({\r\n      query: getRegisteredCandidatesPerSpecialty,\r\n      variables: { id:centerExamSessionSpecialty },\r\n    });\r\n\r\n    console.log(data);\r\n    const { registration, center, examSession } = data.centerExamSessionSpecialty;\r\n    console.log(registration);\r\n \r\n//  const regInfo =registration.map((item)=>{\r\n//           const candInfo = item.candidate.map((candItem)=>({\r\n//             regID:item.id,\r\n//             candRegNo: item.candRegistrationNumber,\r\n//             ...candItem\r\n//           }))\r\n//           return candInfo\r\n//         })\r\n\r\nconst regCandInfo = registration.map((item)=>({\r\n   regID:item.id,\r\n   candRegNo: item.candRegistrationNumber,\r\n   candidates\r\n}))\r\n\r\n            setState((prev) => ({ ...prev, candsPerSeries: registration }));\r\n  };\r\n\r\n\r\nconsole.log({candsPerSeries})\r\n  useEffect(() => {\r\n    loadCenterRegistrationInfo();\r\n  }, [centerExamSessionSpecialty]);\r\n\r\n\r\n\r\n\r\n  console.log({ state });\r\n  console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\r\n \r\n  const [createAttendance, { loadingMut, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n         const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode.value,\r\n            centerExamSessionSpecialty:\r\n              getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\r\n            subjectSpecialty:\r\n              refinedSubjectSpecialty &&\r\n              getObjectFromID(values.subjectSpecialty.value),\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Présence indiquée avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting ) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Inscription aux Examens\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                     \r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"La Spécialité\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"La Spécialité\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getSpecialtyOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        component={Select}\r\n                        label=\"Candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        options={getExamsOptions}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"collected\" />}\r\n                        required\r\n                        name=\"collected\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Collecte de matériels\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helpertext={<ErrorMessage name=\"handin\" />}\r\n                        required\r\n                        name=\"handin\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Remise de copies\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Validation en cours\"\r\n                          : \"Valide présence\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Attendance;\r\n"]},"metadata":{},"sourceType":"module"}