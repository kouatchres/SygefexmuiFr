{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\report\\\\CreateReport.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\nimport Notification from \"../utils/Notification\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getSelectedObject, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getCESExaminerQuery } from \"../queries&Mutations&Functions/Queries\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  picStyled: {\n    paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\"),\n  centerNumber: Yup.number().min(0, \"Pas de note nÃ©gative\").required(\"No du centre obligatoire\")\n});\n\nconst CreateReport = () => {\n  const classes = useStyles();\n  const initialValues = {\n    reportName: \"\",\n    reportImage: \"\",\n    centerNumber: \"\",\n    examinerCode: \"\"\n  };\n  const {\n    0: notify,\n    1: setNotify\n  } = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    reportImage: \"\",\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\",\n    examinerCode: \"\"\n  });\n  const {\n    reportImage,\n    centerNumber,\n    examID,\n    sessionID,\n    exams,\n    sessions,\n    centerByNumber,\n    examSessions,\n    centerExamSessions,\n    examinerCode\n  } = state;\n\n  const makeExaminerObject = profCodeValue => {\n    const storedProf = {\n      examinerCode: `${profCodeValue}`\n    };\n    return storedProf;\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState({\n      [name]: val\n    });\n  };\n\n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"ineximages\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/inex/reportImage/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const file = await res.json();\n    console.log(file);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      reportImage: file.secure_url\n    }));\n  };\n\n  const loadExamData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  useEffect(() => {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running exam session query\");\n    const {\n      data,\n      loading\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterData();\n  }, [centerNumber]);\n\n  const loadCESData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions\n    }));\n  };\n\n  useEffect(() => {\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  const getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n  console.log(centerByNumber); // const getCenterExamSessionsByCode =\n  //   dataCES && dataCES.centerExamSessionsByCode;\n  // console.log(getCenterExamSessionsByCode);\n  // // remove typename from the object\n  // const refinedCenterExamSessionsByCode =\n  //   getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n  // // transform the array into a single object\n  // const getCES =\n  //   refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\n  // console.log(getCES);\n\n  const {\n    data: dataExaminer,\n    loading: loadingExaminer,\n    error: errExaminer\n  } = useQuery(getCESExaminerQuery, {\n    skip: !getCESID || !state.examinerCode,\n    variables: {\n      centerExamSession: getCESID && getCESID,\n      examiner: state.examinerCode && makeExaminerObject(state.examinerCode)\n    }\n  });\n  const getCESExaminers = dataExaminer && dataExaminer.getCenterExamSessionExaminers;\n  console.log(getCESExaminers);\n  const refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\n  const reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\n  console.log(reducedCESExaminer);\n  const [createReport, {\n    loading,\n    error\n  }] = useMutation(createNewReportMutation);\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createReport({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          reportImage: state.reportImage,\n          centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        setNotify({\n          isOpen: true,\n          message: \"Rapport crÃ©Ã© avec success\",\n          type: \"success\"\n        });\n        resetForm({\n          values: \"\"\n        });\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 23\n      }\n    }, \"Nouvel Arrondissement\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      name: \"centerName\",\n      type: \"text\",\n      label: \" Libell\\xE9 du centre\",\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      value: state.centerNumber,\n      onChange: handleChange,\n      name: \"centerNumber\",\n      type: \"number\",\n      label: \"Numero du centre\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 37\n        }\n      }),\n      label: \"Choisir ta photo\",\n      name: \"file\",\n      type: \"file\",\n      onChange: uploadFile,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getSessionsOptions,\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      placeholder: \"La session\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getExamOsptions,\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      name: \"examID\",\n      placeholder: \"L'Examen\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"reportName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      name: \"reportName\",\n      type: \"text\",\n      label: \"Titre du Rapport\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examinerCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      onChange: handleChange,\n      value: state.examinerCode,\n      name: \"examinerCode\",\n      type: \"text\",\n      label: \"Code Secret de l'examinateur\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 23\n      }\n    }), __jsx(\"div\", {\n      className: classes.picStyled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 23\n      }\n    }, !state.reportImage ? __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 27\n      }\n    }) : __jsx(\"img\", {\n      style: {\n        height: \"15rem\",\n        width: \"15rem\",\n        display: \"grid\",\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        placeItems: \"center\",\n        borderRadius: \"0.5rem\"\n      },\n      src: state.reportImage,\n      alt: \"Upload image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 27\n      }\n    })), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 55\n      }\n    }), \"Valid\", isSubmitting ? \"Nouveau rapport en crÃ©ation\" : \"CrÃ©er Rapport\")))))));\n  });\n};\n\nexport default CreateReport;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/report/CreateReport.jsx"],"names":["React","useState","useEffect","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useMutation","useApolloClient","useQuery","Notification","Yup","useForm","createNewReportMutation","getSelectedObject","removeTypename","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getCESExaminerQuery","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","picStyled","paddingLeft","width","centerAll","validationSchema","object","shape","reportName","string","required","examID","sessionID","examinerCode","centerNumber","number","min","CreateReport","classes","initialValues","reportImage","notify","setNotify","isOpen","message","type","state","setState","handleSelectChange","handleInputChange","exams","sessions","centerByNumber","examSessions","centerExamSessions","makeExaminerObject","profCodeValue","storedProf","handleChange","e","name","value","target","val","parseInt","uploadFile","files","data","FormData","append","res","fetch","method","body","file","json","console","log","secure_url","loadExamData","client","query","getExams","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","loading","skip","variables","exam","session","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","error","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","dataExaminer","loadingExaminer","errExaminer","centerExamSession","examiner","getCESExaminers","getCenterExamSessionExaminers","refinedCESExaminer","reducedCESExaminer","createReport","values","setSubmitting","resetForm","centerExamSessionExaminer","setTimeout","JSON","stringify","submitForm","isSubmitting","centerCode","event","getExamOsptions","backgroundSize","backgroundPosition","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getCESExaminerQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  picStyled: {\r\n    paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\r\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\r\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\r\n\r\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\"),\r\n  centerNumber: Yup.number()\r\n    .min(0, \"Pas de note nÃ©gative\")\r\n    .required(\"No du centre obligatoire\"),\r\n});\r\n\r\nconst CreateReport = () => {\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    reportName: \"\",\r\n    reportImage: \"\",\r\n    centerNumber: \"\",\r\n    examinerCode: \"\",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    reportImage: \"\",\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    examinerCode: \"\",\r\n  });\r\n\r\n\r\n  const {\r\n    reportImage,\r\ncenterNumber,\r\nexamID,\r\nsessionID,\r\nexams,\r\nsessions,\r\ncenterByNumber,\r\nexamSessions,\r\ncenterExamSessions,\r\nexaminerCode,\r\n}=state\r\n\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"ineximages\");\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/inex/reportImage/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const file = await res.json();\r\n    console.log(file);\r\n    setState({ ...state, reportImage: file.secure_url });\r\n  };\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n    \r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n\r\n\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n\r\n\r\n  console.log(centerByNumber);\r\n\r\n  // const getCenterExamSessionsByCode =\r\n  //   dataCES && dataCES.centerExamSessionsByCode;\r\n  // console.log(getCenterExamSessionsByCode);\r\n  // // remove typename from the object\r\n  // const refinedCenterExamSessionsByCode =\r\n  //   getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // // transform the array into a single object\r\n  // const getCES =\r\n  //   refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\r\n  // console.log(getCES);\r\n\r\n  const {\r\n    data: dataExaminer,\r\n    loading: loadingExaminer,\r\n    error: errExaminer,\r\n  } = useQuery(getCESExaminerQuery, {\r\n    skip: !getCESID || !state.examinerCode,\r\n    variables: {\r\n      centerExamSession: getCESID && getCESID,\r\n      examiner: state.examinerCode && makeExaminerObject(state.examinerCode),\r\n    },\r\n  });\r\n\r\n  const getCESExaminers =\r\n    dataExaminer && dataExaminer.getCenterExamSessionExaminers;\r\n  console.log(getCESExaminers);\r\n  const refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\r\n  const reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\r\n  console.log(reducedCESExaminer);\r\n\r\n  const [createReport, { loading, error }] = useMutation(\r\n    createNewReportMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createReport({\r\n          variables: {\r\n            ...values,\r\n            reportImage: state.reportImage,\r\n            centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Rapport crÃ©Ã© avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm({ values: \"\" });\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Nouvel Arrondissement\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                        component={TextField}\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        label=\" LibellÃ© du centre\"\r\n                         value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        disabled\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                        component={TextField}\r\n                        value={state.centerNumber}\r\n                        onChange={handleChange}\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        label=\"Numero du centre\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"file\" />}\r\n                        label=\"Choisir ta photo\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={uploadFile}\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        component={Select}\r\n                        options={getSessionsOptions}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        placeholder=\"La session\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        component={Select}\r\n                        options={getExamOsptions}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        name=\"examID\"\r\n                        placeholder=\"L'Examen\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"reportName\" />}\r\n                        component={TextField}\r\n                        name=\"reportName\"\r\n                        type=\"text\"\r\n                        label=\"Titre du Rapport\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examinerCode\" />}\r\n                        component={TextField}\r\n                        onChange={handleChange}\r\n                        value={state.examinerCode}\r\n                        name=\"examinerCode\"\r\n                        type=\"text\"\r\n                        label=\"Code Secret de l'examinateur\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <div className={classes.picStyled}>\r\n                        {!state.reportImage ? (\r\n                          <CircularProgress />\r\n                        ) : (\r\n                          <img\r\n                            style={{\r\n                              height: \"15rem\",\r\n                              width: \"15rem\",\r\n                              display: \"grid\",\r\n                              backgroundSize: \"contain\",\r\n                              backgroundPosition: \"center\",\r\n                              placeItems: \"center\",\r\n                              borderRadius: \"0.5rem\",\r\n                            }}\r\n                            src={state.reportImage}\r\n                            alt=\"Upload image\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        Valid\r\n                        {isSubmitting\r\n                          ? \"Nouveau rapport en crÃ©ation\"\r\n                          : \"CrÃ©er Rapport\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}