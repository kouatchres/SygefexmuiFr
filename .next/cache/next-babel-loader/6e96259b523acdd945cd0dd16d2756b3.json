{"ast":null,"code":"import _toConsumableArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\DetailedResultsList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport tableIcons from \"../../utils/icons/tableIcons\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\n\nvar DetailedResults = function DetailedResults(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var client = useApolloClient();\n\n  var _useState = useState({\n    columns: [{\n      field: \"candRegistrationNumber\",\n      title: \"No Inscrit\"\n    }, {\n      field: \"specialtyCode\",\n      title: \"Code Serie\"\n    }, {\n      field: \"aptitude\",\n      title: \"Aptitude\"\n    }, {\n      field: \"EPF1\",\n      title: \"EPF1\"\n    }, {\n      field: \"EPF2\",\n      title: \"EPF2\"\n    }, {\n      field: \"cand1stName\",\n      title: \"Nom\"\n    }, {\n      field: \"cand2ndName\",\n      title: \"Prenom\"\n    }, {\n      field: \"cand3rdName\",\n      title: \"Autre Noms\"\n    }, {\n      field: \"gender\",\n      title: \"Gender\"\n    }, {\n      field: \"registrationId\",\n      title: \"Resultats\"\n    }],\n    data: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var loadCandScoreData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, centerExamSession, _centerExamSession, registration, getCand;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: centerExamSessionForResultsQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              console.log(data);\n              _data = _objectSpread({}, data), centerExamSession = _data.centerExamSession;\n              _centerExamSession = _objectSpread({}, centerExamSession), registration = _centerExamSession.registration;\n              getCand = registration && registration.map(function (item) {\n                return _objectSpread({\n                  candRegistrationNumber: item.candRegistrationNumber,\n                  specialty: item.specialty.specialtyName,\n                  specialtyCode: item.specialty.specialtyCode,\n                  aptitude: item.aptitude,\n                  EPF1: item.EPF1,\n                  EPF2: item.EPF2,\n                  registrationId: item.id\n                }, item.candidate);\n              });\n              console.log({\n                registration: registration\n              });\n              console.log(getCand);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: getCand\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCandScoreData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCandScoreData(); // loadTitleData();\n  }, []);\n  console.dir(state.data);\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, {\n    components: {\n      Toolbar: function Toolbar(props) {\n        return __jsx(\"div\", {\n          style: {\n            backgroundColor: \"#01579b\",\n            borderTopRightRadius: \"0.5rem\",\n            borderTopLeftRadius: \"0.5rem\",\n            color: \"#fff\" // textColor: \"#000\",\n\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, __jsx(MTableToolbar, _extends({\n          style: {// textColor: \"#fff\",\n          }\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        })));\n      }\n    },\n    icons: tableIcons,\n    title: \"Resultats des Candidats>>>>>>>>>>>>>??????????                \",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      paging: true,\n      pageSize: 100,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [60, 120, 200, 400],\n      // rows selection options\n      headerStyle: {\n        color: \"#fff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#01579b\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {// color: \"#000\",\n      }\n    },\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.push(newData);\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data: data\n              });\n            });\n          }, 400);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            if (oldData) {\n              setState(function (prevState) {\n                var data = _toConsumableArray(prevState.data);\n\n                data[data.indexOf(oldData)] = newData;\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  data: data\n                });\n              });\n            }\n          }, 400);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data: data\n              });\n            });\n          }, 400);\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(DetailedResults, \"orLB+6NMkZsBc55G7pl0BcVmzQs=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = DetailedResults;\nexport default DetailedResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedResults\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/DetailedResultsList.jsx"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Paper","tableIcons","useApolloClient","centerExamSessionForResultsQuery","DetailedResults","id","client","columns","field","title","data","state","setState","loadCandScoreData","query","variables","error","console","log","centerExamSession","registration","getCand","map","item","candRegistrationNumber","specialty","specialtyName","specialtyCode","aptitude","EPF1","EPF2","registrationId","candidate","prev","dir","marginTop","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport tableIcons from \"../../utils/icons/tableIcons\";\r\n\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\n\r\nconst DetailedResults = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { field: \"candRegistrationNumber\", title: \"No Inscrit\" },\r\n      { field: \"specialtyCode\", title: \"Code Serie\" },\r\n      { field: \"aptitude\", title: \"Aptitude\" },\r\n      { field: \"EPF1\", title: \"EPF1\" },\r\n      { field: \"EPF2\", title: \"EPF2\" },\r\n      { field: \"cand1stName\", title: \"Nom\" },\r\n      { field: \"cand2ndName\", title: \"Prenom\" },\r\n      { field: \"cand3rdName\", title: \"Autre Noms\" },\r\n      { field: \"gender\", title: \"Gender\" },\r\n      { field: \"registrationId\", title: \"Resultats\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadCandScoreData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: centerExamSessionForResultsQuery,\r\n      variables: { id },\r\n    });\r\n    console.log(data);\r\n    const { centerExamSession } = { ...data };\r\n    const { registration } = { ...centerExamSession };\r\n    const getCand =\r\n      registration &&\r\n      registration.map((item) => ({\r\n        candRegistrationNumber: item.candRegistrationNumber,\r\n        specialty: item.specialty.specialtyName,\r\n        specialtyCode: item.specialty.specialtyCode,\r\n        aptitude: item.aptitude,\r\n        EPF1: item.EPF1,\r\n        EPF2: item.EPF2,\r\n        registrationId: item.id,\r\n        ...item.candidate,\r\n      }));\r\n    console.log({ registration });\r\n    console.log(getCand);\r\n    setState((prev) => ({ ...prev, data: getCand }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCandScoreData();\r\n    // loadTitleData();\r\n  }, []);\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#01579b\",\r\n                borderTopRightRadius: \"0.5rem\",\r\n                borderTopLeftRadius: \"0.5rem\",\r\n                color: \"#fff\",\r\n                  // textColor: \"#000\",\r\n              }}\r\n            >\r\n              <MTableToolbar\r\n                style={{\r\n                  // textColor: \"#fff\",\r\n                }}\r\n                {...props}\r\n              />\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={tableIcons}\r\n        title=\"Resultats des Candidats>>>>>>>>>>>>>??????????                \"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        options={{\r\n          paging: true,\r\n          pageSize: 100, // make initial page size\r\n          emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n          pageSizeOptions: [60, 120, 200, 400], // rows selection options\r\n          headerStyle: {\r\n            color: \"#fff\",\r\n            paddingTop: \"0.5rem\",\r\n            paddingBottom: \"0.5rem\",\r\n            backgroundColor: \"#01579b\",\r\n            maxHeight: \"0.5rem !important\",\r\n          },\r\n          rowStyle: {\r\n            // color: \"#000\",\r\n          },\r\n        }}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 400);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 400);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 400);\r\n            }),\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\nexport default DetailedResults;\r\n"]},"metadata":{},"sourceType":"module"}