{"ast":null,"code":"import _extends from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport RegistrationDetails from './RegistrationDetails';\nimport Error from \"../../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nvar useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nvar CenterRegistrationDetails = function CenterRegistrationDetails(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // static propTypes = { id: PropTypes.string.isRequired };\n  var client = useApolloClient();\n  var classes = useStyles();\n\n  var _useState = useState({\n    columns: [{\n      field: \"No\",\n      title: \"Region\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"divName\",\n      title: \"Dept\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"townName\",\n      title: \"Ville\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerName\",\n      title: \"Centre\",\n      options: {\n        width: 400,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"centerNumber\",\n      title: \"No\",\n      // grouping: false,\n      type: \"numeric\",\n      options: {\n        width: 30,\n        headerNoWrap: true\n      }\n    }],\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var initialValues = {};\n\n  var loadCenterRegistrationInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getCenterExamSession, registration, center, examSession, _examSession, exam, session;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: centerExamSessionForResultsQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getCenterExamSession = data.centerExamSession;\n              registration = getCenterExamSession.registration, center = getCenterExamSession.center, examSession = getCenterExamSession.examSession;\n              _examSession = _objectSpread({}, examSession), exam = _examSession.exam, session = _examSession.session;\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  center: center,\n                  registration: registration,\n                  exam: exam,\n                  session: session\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCenterRegistrationInfo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterRegistrationInfo();\n  }, []);\n  var _registrationInfo = registrationInfo,\n      center = _registrationInfo.center,\n      session = _registrationInfo.session,\n      exam = _registrationInfo.exam,\n      registration = _registrationInfo.registration;\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 2\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Resultats Complets Du: \", exam && exam.examName, \", Session: \", session && session.sessionName, \", centre: \", center && center.centerCode))), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    }, __jsx(MaterialTable, {\n      className: classes.head,\n      components: {\n        Toolbar: function Toolbar(props) {\n          return __jsx(\"div\", {\n            style: {\n              backgroundColor: \"#829079\",\n              borderTopRightRadius: \"0.5rem\",\n              borderTopLeftRadius: \"0.5rem\",\n              color: \"#ede6b9\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }\n          }, __jsx(MTableToolbar, _extends({\n            style: {\n              // textColor: \"#000\",\n              textColor: \"#fff\"\n            }\n          }, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }\n          })));\n        }\n      },\n      icons: tableIcons,\n      title: \"Liste des Candidats..................                            \",\n      columns: state.columns,\n      data: state.registration,\n      options: {\n        actionsColumnIndex: -1,\n        grouping: true,\n        paging: true,\n        pageSize: 50,\n        // make initial page size\n        emptyRowsWhenPaging: false,\n        //to make page size fix in case of less data rows\n        pageSizeOptions: [25, 50, 75, 100, 150],\n        // rows selection options\n        headerStyle: {\n          paddingTop: \"0.5rem\",\n          paddingBottom: \"0.5rem\",\n          // backgroundColor: \"#abb\",\n          color: \"#ede6b9\",\n          backgroundColor: \"#b9925e\",\n          maxHeight: \"0.5rem !important\"\n        },\n        rowStyle: {\n          color: \"#000\"\n        }\n      },\n      actions: actions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), __jsx(AddPopup, {\n      title: \"Nouveau Centre\",\n      isOpen: isAddPopupOpen,\n      onClose: handleAddPopupClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, __jsx(NewCenter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    })), __jsx(ConfirmDialog, {\n      title: deleteConfirmDialog.title,\n      subtitle: deleteConfirmDialog.subtitle,\n      isOpen: deleteConfirmDialog.isOpen,\n      onClose: handleDeleteConfirmDialog,\n      onConfirm: deleteConfirmDialog.onConfirm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }), __jsx(UpdatePopup // title={updatePopupState.id}\n    , {\n      isOpen: updatePopupState.isOpen,\n      onClose: handleUpdatePopupClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, __jsx(UpdateCenter, {\n      id: updatePopupState.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    })))))));\n  });\n};\n\n_s(CenterRegistrationDetails, \"6GZfTM+VKI4OwbuGnAQLSPS3fLQ=\", false, function () {\n  return [useApolloClient, useStyles];\n});\n\n_c = CenterRegistrationDetails;\nexport default CenterRegistrationDetails; // {\n//     registration && registration.map((item) => (\n//         <RegistrationDetails key={item.id} registration={item} />\n//     ))\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CenterRegistrationDetails\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","RegistrationDetails","Error","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","columns","field","title","options","headerNoWrap","type","center","exam","session","registration","state","setState","initialValues","loadCenterRegistrationInfo","query","variables","data","getCenterExamSession","centerExamSession","examSession","prev","registrationInfo","values","isSubmitting","examName","sessionName","centerCode","head","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","textColor","tableIcons","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle","actions","isAddPopupOpen","handleAddPopupClose","deleteConfirmDialog","subtitle","isOpen","handleDeleteConfirmDialog","onConfirm","notify","setNotify","updatePopupState","handleUpdatePopupClose"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,gCAAT,QAAiD,2CAAjD;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,EAAkCC,MAAlC,QAAgD,mBAAhD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAIA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GADgB;AAO3BC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,SAAS,EAAE,MAHD;AAIVC,IAAAA,OAAO,EAAE,MAJC;AAKVC,IAAAA,QAAQ,EAAE;AALA,GAPe;AAe3BC,EAAAA,WAAW,EAAE;AACXR,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,UAAU,EAAE;AAFD,GAfc;AAoB3BQ,EAAAA,OAAO,EAAE;AACPT,IAAAA,OAAO,EAAE,MADF;AAEPU,IAAAA,gBAAgB,EAAE;AAFX,GApBkB;AAyB3BC,EAAAA,SAAS,EAAE;AACT;AACAR,IAAAA,MAAM,EAAE,OAFC;AAGTS,IAAAA,KAAK,EAAE,OAHE;AAITZ,IAAAA,OAAO,EAAE,MAJA;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTY,IAAAA,YAAY,EAAE;AANL,GAzBgB;AAkC3BC,EAAAA,SAAS,EAAE;AACTd,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTM,IAAAA,QAAQ,EAAE;AAHD;AAlCgB,CAAD,CAA5B;;AAyCA,IAAMQ,yBAAyB,GAAE,SAA3BA,yBAA2B,OAAS;AAAA;;AAAA,MAAPC,EAAO,QAAPA,EAAO;AACtC;AACJ,MAAMC,MAAM,GAAGpB,eAAe,EAA9B;AACA,MAAMqB,OAAO,GAAEpB,SAAS,EAAxB;;AAH0C,kBAIhBb,QAAQ,CAAC;AAChCkC,IAAAA,OAAO,EAAE,CACN;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGNC,MAAAA,OAAO,EAAE;AACGV,QAAAA,KAAK,EAAE,EADV;AAEGW,QAAAA,YAAY,EAAE;AAFjB;AAHH,KADM,EAWN;AAAEH,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AACFC,MAAAA,OAAO,EAAE;AACDV,QAAAA,KAAK,EAAE,EADN;AAEDW,QAAAA,YAAY,EAAE;AAFb;AADP,KAXM,EAiBN;AAAEH,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE,OAA5B;AACFC,MAAAA,OAAO,EAAE;AACDV,QAAAA,KAAK,EAAE,EADN;AAEDW,QAAAA,YAAY,EAAE;AAFb;AADP,KAjBM,EAuBN;AAAEH,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,QAA9B;AACAC,MAAAA,OAAO,EAAE;AACHV,QAAAA,KAAK,EAAE,GADJ;AAEHW,QAAAA,YAAY,EAAE;AAFX;AADT,KAvBM,EA8BN;AACEH,MAAAA,KAAK,EAAE,cADT;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGE;AACAG,MAAAA,IAAI,EAAE,SAJR;AAKEF,MAAAA,OAAO,EAAE;AACLV,QAAAA,KAAK,EAAE,EADF;AAELW,QAAAA,YAAY,EAAE;AAFT;AALX,KA9BM,CADuB;AA0C9BE,IAAAA,MAAM,EAAC,EA1CuB;AA0CnBC,IAAAA,IAAI,EAAC,EA1Cc;AA0CVC,IAAAA,OAAO,EAAC,EA1CE;AA0CEC,IAAAA,YAAY,EAAC;AA1Cf,GAAD,CAJQ;AAAA,MAInCC,KAJmC;AAAA,MAI5BC,QAJ4B;;AAkD1C,MAAMC,aAAa,GAAE,EAArB;;AAEA,MAAMC,0BAA0B;AAAA,yEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPf,MAAM,CAACgB,KAAP,CAAa;AACvCA,gBAAAA,KAAK,EAAC9C,gCADiC;AAEvC+C,gBAAAA,SAAS,EAAC;AAAClB,kBAAAA,EAAE,EAAFA;AAAD;AAF6B,eAAb,CADO;;AAAA;AAAA;AACrBmB,cAAAA,IADqB,uBACrBA,IADqB;AAOvBC,cAAAA,oBAPuB,GAOCD,IAAI,CAACE,iBAPN;AAQJT,cAAAA,YARI,GAQiCQ,oBARjC,CAQJR,YARI,EAQUH,MARV,GAQiCW,oBARjC,CAQUX,MARV,EAQiBa,WARjB,GAQiCF,oBARjC,CAQiBE,WARjB;AAAA,+CASkBA,WATlB,GASLZ,IATK,gBASLA,IATK,EASCC,OATD,gBASCA,OATD;AAW7BG,cAAAA,QAAQ,CAAC,UAACS,IAAD;AAAA,uDAAaA,IAAb;AAAkBd,kBAAAA,MAAM,EAANA,MAAlB;AAA0BG,kBAAAA,YAAY,EAAZA,YAA1B;AAAuCF,kBAAAA,IAAI,EAAJA,IAAvC;AAA4CC,kBAAAA,OAAO,EAAPA;AAA5C;AAAA,eAAD,CAAR;;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAA1BK,0BAA0B;AAAA;AAAA;AAAA,KAAhC;;AAcQ9C,EAAAA,SAAS,CAAC,YAAI;AACd8C,IAAAA,0BAA0B;AACzB,GAFQ,EAEP,EAFO,CAAT;AAlEkC,0BAqEKQ,gBArEL;AAAA,MAqElCf,MArEkC,qBAqElCA,MArEkC;AAAA,MAqE1BE,OArE0B,qBAqE1BA,OArE0B;AAAA,MAqEjBD,IArEiB,qBAqEjBA,IArEiB;AAAA,MAqEXE,YArEW,qBAqEXA,YArEW;AA0EtB,SAGnB,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEG,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA,QAAGU,MAAH,SAAGA,MAAH;AAAA,QAAWC,YAAX,SAAWA,YAAX;AAAA,WACC;AAAK,MAAA,SAAS,EAAExB,OAAO,CAACJ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEI,OAAO,CAACd,UAA1B;AAAsC,MAAA,SAAS,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAWsC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAExB,OAAO,CAACJ,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEI,OAAO,CAACJ,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAEI,OAAO,CAACV,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAO0BkB,IAAI,IAAIA,IAAI,CAACiB,QAPvC,iBAO4DhB,OAAO,IAAIA,OAAO,CAACiB,WAP/E,gBAOsGnB,MAAM,IAAIA,MAAM,CAACoB,UAPvH,CADF,CADF,CADF,EAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACT,MAAC,aAAD;AACE,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,IADrB;AAEE,MAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,iBACP;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EAAE,SADZ;AAELC,cAAAA,oBAAoB,EAAE,QAFjB;AAGLC,cAAAA,mBAAmB,EAAE,QAHhB;AAILC,cAAAA,KAAK,EAAE;AAJF,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQE,MAAC,aAAD;AACE,YAAA,KAAK,EAAE;AACL;AACAC,cAAAA,SAAS,EAAE;AAFN;AADT,aAKML,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADO;AAAA;AADC,OAFd;AAsBE,MAAA,KAAK,EAAEM,UAtBT;AAuBE,MAAA,KAAK,EAAC,mEAvBR;AAwBE,MAAA,OAAO,EAAEzB,KAAK,CAACV,OAxBjB;AAyBE,MAAA,IAAI,EAAEU,KAAK,CAACD,YAzBd;AA0BE,MAAA,OAAO,EAAE;AACP2B,QAAAA,kBAAkB,EAAE,CAAC,CADd;AAEPC,QAAAA,QAAQ,EAAE,IAFH;AAGPC,QAAAA,MAAM,EAAE,IAHD;AAIPC,QAAAA,QAAQ,EAAE,EAJH;AAIO;AACdC,QAAAA,mBAAmB,EAAE,KALd;AAKqB;AAC5BC,QAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,CANV;AAMkC;AACzCC,QAAAA,WAAW,EAAE;AACXC,UAAAA,UAAU,EAAE,QADD;AAEXC,UAAAA,aAAa,EAAE,QAFJ;AAGX;AACAX,UAAAA,KAAK,EAAE,SAJI;AAKXH,UAAAA,eAAe,EAAE,SALN;AAMXe,UAAAA,SAAS,EAAE;AANA,SAPN;AAePC,QAAAA,QAAQ,EAAE;AACRb,UAAAA,KAAK,EAAE;AADC;AAfH,OA1BX;AA6CE,MAAA,OAAO,EAAEc,OA7CX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,EAgDT,MAAC,QAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,MAAM,EAAEC,cAFV;AAGE,MAAA,OAAO,EAAEC,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAhDS,EAuDT,MAAC,aAAD;AACE,MAAA,KAAK,EAAEC,mBAAmB,CAAChD,KAD7B;AAEE,MAAA,QAAQ,EAAEgD,mBAAmB,CAACC,QAFhC;AAGE,MAAA,MAAM,EAAED,mBAAmB,CAACE,MAH9B;AAIE,MAAA,OAAO,EAAEC,yBAJX;AAKE,MAAA,SAAS,EAAEH,mBAAmB,CAACI,SALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDS,EA8DT,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEC,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DS,EAgET,MAAC,WAAD,CACE;AADF;AAEE,MAAA,MAAM,EAAEC,gBAAgB,CAACL,MAF3B;AAGE,MAAA,OAAO,EAAEM,sBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,YAAD;AAAc,MAAA,EAAE,EAAED,gBAAgB,CAAC5D,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAhES,CAdH,CADF,CADF,CADF,CADD;AAAA,GADN,CAHmB;AAsGnB,CAhLD;;GAAMD,yB;UAESlB,e,EACAC,S;;;KAHTiB,yB;AAkLN,eAAeA,yBAAf,C,CAG0C;AACA;AACA;AACA;AACA","sourcesContent":["import React , {useState, useEffect} from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport RegistrationDetails from './RegistrationDetails'\r\nimport Error from \"../../ErrorMessage\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails =({id})=> {\r\n    // static propTypes = { id: PropTypes.string.isRequired };\r\nconst client = useApolloClient()\r\nconst classes= useStyles()\r\nconst [state, setState] = useState({\r\n   columns: [\r\n      {\r\n        field: \"No\",\r\n        title: \"Region\",\r\noptions: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n\r\n      },\r\n     \r\n      { field: \"divName\", title: \"Dept\",\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"townName\", title: \"Ville\" ,\r\n    options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      { field: \"centerName\", title: \"Centre\",\r\n      options: {\r\n            width: 400,\r\n            headerNoWrap: true,\r\n        } ,\r\n    },\r\n      \r\n      {\r\n        field: \"centerNumber\",\r\n        title: \"No\",\r\n        // grouping: false,\r\n        type: \"numeric\",\r\n        options: {\r\n            width: 30,\r\n            headerNoWrap: true,\r\n        } ,\r\n      },\r\n    ],\r\n     center:\"\", exam:\"\", session:\"\", registration:[],\r\n})\r\n\r\n\r\nconst initialValues ={}\r\n\r\nconst loadCenterRegistrationInfo=async()=>{\r\n    const { data} = await client.query({\r\nquery:centerExamSessionForResultsQuery,\r\nvariables:{id}\r\n\r\n    })\r\n\r\n    const getCenterExamSession  = data.centerExamSession \r\n                    const {  registration, center,examSession } = getCenterExamSession\r\n                    const { exam, session } = { ...examSession }\r\n\r\n    setState((prev)=>({...prev,center, registration,exam,session }))\r\n}\r\n\r\n        useEffect(()=>{\r\n        loadCenterRegistrationInfo()\r\n        },[])\r\nconst { center, session, exam, registration } =registrationInfo\r\n\r\n\r\n\r\n\r\n                    return (\r\n\r\n\r\n <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats Complets Du: {exam && exam.examName}, Session: {session && session.sessionName}, centre: {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                 <div>\r\n        <MaterialTable\r\n          className={classes.head}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#829079\",\r\n                  borderTopRightRadius: \"0.5rem\",\r\n                  borderTopLeftRadius: \"0.5rem\",\r\n                  color: \"#ede6b9\",\r\n                }}\r\n              >\r\n                <MTableToolbar\r\n                  style={{\r\n                    // textColor: \"#000\",\r\n                    textColor: \"#fff\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            ),\r\n          }}\r\n          icons={tableIcons}\r\n          title=\"Liste des Candidats..................                            \"\r\n          columns={state.columns}\r\n          data={state.registration}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            grouping: true,\r\n            paging: true,\r\n            pageSize: 50, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n            headerStyle: {\r\n              paddingTop: \"0.5rem\",\r\n              paddingBottom: \"0.5rem\",\r\n              // backgroundColor: \"#abb\",\r\n              color: \"#ede6b9\",\r\n              backgroundColor: \"#b9925e\",\r\n              maxHeight: \"0.5rem !important\",\r\n            },\r\n            rowStyle: {\r\n              color: \"#000\",\r\n            },\r\n          }}\r\n          actions={actions}\r\n        />\r\n        <AddPopup\r\n          title=\"Nouveau Centre\"\r\n          isOpen={isAddPopupOpen}\r\n          onClose={handleAddPopupClose}\r\n        >\r\n          <NewCenter />\r\n        </AddPopup>\r\n        <ConfirmDialog\r\n          title={deleteConfirmDialog.title}\r\n          subtitle={deleteConfirmDialog.subtitle}\r\n          isOpen={deleteConfirmDialog.isOpen}\r\n          onClose={handleDeleteConfirmDialog}\r\n          onConfirm={deleteConfirmDialog.onConfirm}\r\n        />\r\n        <Notification notify={notify} setNotify={setNotify} />\r\n\r\n        <UpdatePopup\r\n          // title={updatePopupState.id}\r\n          isOpen={updatePopupState.isOpen}\r\n          onClose={handleUpdatePopupClose}\r\n        >\r\n          <UpdateCenter id={updatePopupState.id} />\r\n        </UpdatePopup>\r\n      </div>\r\n                </Grid>\r\n            </Form>\r\n          </Paper>\r\n          </div>\r\n            )}\r\n    </Formik>\r\n        );\r\n               \r\n}\r\n\r\nexport default CenterRegistrationDetails;\r\n\r\n      \r\n                                          // {\r\n                                          //     registration && registration.map((item) => (\r\n                                          //         <RegistrationDetails key={item.id} registration={item} />\r\n                                          //     ))\r\n                                          // }"]},"metadata":{},"sourceType":"module"}