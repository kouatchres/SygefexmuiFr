{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\score\\\\EnterNewMarks.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport useForm from \"../utils/useForm\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { useQuery, useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { enterMarksMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getObjectFromID, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { registrationIDFromSecretCodeQuery, getAllSubjectSpecialtiesOfASpecialtyQuery } from \"../queries&Mutations&Functions/Queries\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30%\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nconst validationSchema = Yup.object().shape({\n  // candExamSecretCode: Yup.string().required(\"Code Secret candidat Obligatoire\"),\n  subjectSpecialty: Yup.string().required(\"Choix de la matière Obligatoire\"),\n  subjectAve: Yup.number().required(\"Note du candidat Obligatoire\").min(0, \"Pas de note négative\").max(20, \"Pas de note supérieure a 20\")\n});\n\nconst EnterNewMarks = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const [state, setState, handleSelectChange] = useForm({\n    specialty: {},\n    subjectSpecialty: [],\n    candExamSecretCode: \"\"\n  });\n  const initialValues = {\n    subjectAve: \"\",\n    subjectSpecialty: \"\",\n    candExamSecretCode: \"\"\n  };\n  const {\n    specialty,\n    subjectSpecialty,\n    candExamSecretCode\n  } = state;\n\n  const loadSpecialtyData = async () => {\n    const {\n      error,\n      data,\n      loading\n    } = await client.query({\n      skip: !candExamSecretCode,\n      query: registrationIDFromSecretCodeQuery,\n      variables: {\n        candExamSecretCode: candExamSecretCode && candExamSecretCode\n      }\n    });\n    const registrationID = data && data.getRegistration;\n\n    const {\n      specialty\n    } = _objectSpread({}, registrationID);\n\n    console.log(specialty);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      specialty\n    }));\n  };\n\n  useEffect(() => {\n    loadSpecialtyData();\n  }, [candExamSecretCode]);\n  console.log(subjectSpecialty);\n\n  const loadSubjectSpecialtyData = async () => {\n    const {\n      error,\n      data: dataSubjSpecialty,\n      loading\n    } = await client.query({\n      skip: !specialty,\n      query: getAllSubjectSpecialtiesOfASpecialtyQuery,\n      variables: {\n        id: specialty && specialty.id\n      }\n    }); // console.log(dataSubjSpecialty);\n\n    const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\n\n    const {\n      subjectSpecialty\n    } = _objectSpread({}, getSubjSpecialty); // console.log(subjectSpecialty);\n\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      subjectSpecialty\n    }));\n  };\n\n  useEffect(() => {\n    loadSubjectSpecialtyData();\n  }, [specialty]);\n  const getSubjectsOptions = subjectSpecialty && subjectSpecialty.map(item => ({\n    value: item,\n    label: item.subject.subjectName\n  }));\n  const [enterMarks, {\n    loading,\n    error\n  }] = useMutation(enterMarksMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await enterMarks({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          subjectName: subjectSpecialty && values.subjectSpecialty.subject.subjectName,\n          subjectSpecialty: subjectSpecialty && getObjectFromID(values.subjectSpecialty.id),\n          candExamSecretCode: candExamSecretCode && candExamSecretCode\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }, \"Notes des Candidats\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      component: TextField,\n      fullWidth: true,\n      variant: \"outlined\",\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      value: candExamSecretCode || \"\",\n      onChange: event => {\n        handleSelectChange(event, \"candExamSecretCode\");\n      },\n      label: \"Anonymat du candidat\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: Select,\n      variant: \"outlined\",\n      name: \"subjectSpecialty\",\n      placeholder: \"mati\\xE8re\",\n      label: \"Mati\\xE8res\",\n      options: getSubjectsOptions,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"subjectSpecialty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      fullWidth: true,\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"subjectAve\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }\n      }),\n      name: \"subjectAve\",\n      type: \"number\",\n      step: \"0.001\",\n      label: \"Note en la mati\\xE8re\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting || loading,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 55\n      }\n    }), isSubmitting ? \"Enregistrement en cours\" : \"Enregistrer Note\")))))));\n  });\n};\n\nexport default EnterNewMarks; // <SygefexMuiSelect\n// name=\"region\"\n// margin=\"normal\"\n// onChange={(value) =>\n//   setFieldValue(\"region\", value.target)\n// }\n// placeholder=\"la Région\"\n// disabled={isSubmitting}\n// >\n//   {regions &&\n//     regions.map((item) => (\n//       <MenuItem key={item.id} value={item.id}>\n//         {item.regName}\n//       </MenuItem>\n//     ))}\n// </Field>","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/score/EnterNewMarks.jsx"],"names":["React","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","useForm","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","useQuery","useMutation","useApolloClient","makeStyles","enterMarksMutation","getObjectFromID","removeTypename","registrationIDFromSecretCodeQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","borderRadius","centerAll","validationSchema","object","shape","subjectSpecialty","string","required","subjectAve","number","min","max","EnterNewMarks","classes","client","state","setState","handleSelectChange","specialty","candExamSecretCode","initialValues","loadSpecialtyData","error","data","loading","query","skip","variables","registrationID","getRegistration","console","log","prev","loadSubjectSpecialtyData","dataSubjSpecialty","id","getSubjSpecialty","getSubjectsOptions","map","item","value","label","subject","subjectName","enterMarks","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport useForm from \"../utils/useForm\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useQuery, useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { enterMarksMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getObjectFromID,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  registrationIDFromSecretCodeQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30%\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // candExamSecretCode: Yup.string().required(\"Code Secret candidat Obligatoire\"),\r\n\r\n  subjectSpecialty: Yup.string().required(\"Choix de la matière Obligatoire\"),\r\n  subjectAve: Yup.number()\r\n    .required(\"Note du candidat Obligatoire\")\r\n    .min(0, \"Pas de note négative\")\r\n    .max(20, \"Pas de note supérieure a 20\"),\r\n});\r\n\r\nconst EnterNewMarks = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [state, setState, handleSelectChange] = useForm({\r\n    specialty: {},\r\n    subjectSpecialty: [],\r\n    candExamSecretCode: \"\",\r\n  });\r\n\r\n  const initialValues = {\r\n    subjectAve: \"\",\r\n    subjectSpecialty: \"\",\r\n    candExamSecretCode: \"\",\r\n  };\r\n  const { specialty, subjectSpecialty, candExamSecretCode } = state;\r\n\r\n  const loadSpecialtyData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      skip: !candExamSecretCode,\r\n      query: registrationIDFromSecretCodeQuery,\r\n      variables: {\r\n        candExamSecretCode: candExamSecretCode && candExamSecretCode,\r\n      },\r\n    });\r\n    const registrationID = data && data.getRegistration;\r\n    const { specialty } = { ...registrationID };\r\n    console.log(specialty);\r\n    setState((prev) => ({ ...prev, specialty }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    loadSpecialtyData();\r\n  }, [candExamSecretCode]);\r\n\r\n  console.log(subjectSpecialty);\r\n\r\n  const loadSubjectSpecialtyData = async () => {\r\n    const { error, data: dataSubjSpecialty, loading } = await client.query({\r\n      skip: !specialty,\r\n      query: getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n      variables: {\r\n        id: specialty && specialty.id,\r\n      },\r\n    });\r\n\r\n    // console.log(dataSubjSpecialty);\r\n    const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n    const { subjectSpecialty } = {\r\n      ...getSubjSpecialty,\r\n    };\r\n    // console.log(subjectSpecialty);\r\n    setState((prev) => ({ ...prev, subjectSpecialty }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubjectSpecialtyData();\r\n  }, [specialty]);\r\n\r\n  const getSubjectsOptions =\r\n    subjectSpecialty &&\r\n    subjectSpecialty.map((item) => ({\r\n      value: item,\r\n      label: item.subject.subjectName,\r\n    }));\r\n\r\n  const [enterMarks, { loading, error }] = useMutation(enterMarksMutation);\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await enterMarks({\r\n          variables: {\r\n            ...values,\r\n            subjectName:\r\n              subjectSpecialty && values.subjectSpecialty.subject.subjectName,\r\n            subjectSpecialty:\r\n              subjectSpecialty && getObjectFromID(values.subjectSpecialty.id),\r\n            candExamSecretCode: candExamSecretCode && candExamSecretCode,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={20}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Notes des Candidats\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        component={TextField}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        value={candExamSecretCode || \"\"}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"candExamSecretCode\");\r\n                        }}\r\n                        label=\"Anonymat du candidat\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        component={Select}\r\n                        variant=\"outlined\"\r\n                        name=\"subjectSpecialty\"\r\n                        placeholder=\"matière\"\r\n                        label=\"Matières\"\r\n                        options={getSubjectsOptions}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"subjectSpecialty\" />}\r\n                      />\r\n                      <Field\r\n                        component={TextField}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"subjectAve\" />}\r\n                        name=\"subjectAve\"\r\n                        type=\"number\"\r\n                        step=\"0.001\"\r\n                        label=\"Note en la matière\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <Button\r\n                        disabled={isSubmitting || loading}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        {isSubmitting\r\n                          ? \"Enregistrement en cours\"\r\n                          : \"Enregistrer Note\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default EnterNewMarks;\r\n\r\n// <SygefexMuiSelect\r\n// name=\"region\"\r\n// margin=\"normal\"\r\n// onChange={(value) =>\r\n//   setFieldValue(\"region\", value.target)\r\n// }\r\n// placeholder=\"la Région\"\r\n// disabled={isSubmitting}\r\n// >\r\n//   {regions &&\r\n//     regions.map((item) => (\r\n//       <MenuItem key={item.id} value={item.id}>\r\n//         {item.regName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </Field>\r\n"]},"metadata":{},"sourceType":"module"}