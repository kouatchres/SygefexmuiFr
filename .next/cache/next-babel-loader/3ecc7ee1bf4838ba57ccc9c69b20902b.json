{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\score\\\\candidate\\\\RegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UpdatePopup from \"../../utils/UpdatePopup\";\nimport Transcript from \"../../results/candidate/Transcript\";\nconst useStyles = makeStyles(theme => ({\n  theme,\n  containerStyled: {\n    alignItems: \"left\",\n    justifyItems: \"left\",\n    borderBottom: \"0.1rem solid #000\"\n  }\n}));\n\nconst RegistrationDetails = registrationInfo => {\n  const classes = useStyles();\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n\n  const {\n    centerExamSessionSpecialty,\n    id\n  } = _objectSpread({}, registrationInfo.registrationInfo);\n\n  const {\n    centerExamSession\n  } = _objectSpread({}, centerExamSessionSpecialty);\n\n  const {\n    examSession,\n    center\n  } = _objectSpread({}, centerExamSession);\n\n  const {\n    exam,\n    session\n  } = _objectSpread({}, examSession);\n\n  const {\n    sessionName\n  } = _objectSpread({}, session);\n\n  const {\n    examName\n  } = _objectSpread({}, exam);\n\n  const {\n    centerName,\n    centerCode\n  } = _objectSpread({}, center);\n\n  console.log(registrationInfo.registrationInfo);\n  console.log(id);\n\n  const callUpdatePopup = event => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: true\n    }));\n  };\n\n  const handleUpdatePopupClose = () => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    className: classes.containerStyled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 2\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, centerCode))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, sessionName))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, examName))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/show/results/candResults\",\n      query: {\n        id\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, __jsx(\"a\", {\n    onClick: callUpdatePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Resultats \")))), __jsx(UpdatePopup, {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }, __jsx(Transcript, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default RegistrationDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/score/candidate/RegistrationDetails.jsx"],"names":["React","useState","Link","Grid","Typography","makeStyles","UpdatePopup","Transcript","useStyles","theme","containerStyled","alignItems","justifyItems","borderBottom","RegistrationDetails","registrationInfo","classes","updatePopupState","setUpdatePopupState","isOpen","id","centerExamSessionSpecialty","centerExamSession","examSession","center","exam","session","sessionName","examName","centerName","centerCode","console","log","callUpdatePopup","event","prev","handleUpdatePopupClose","pathname","query"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport UpdatePopup from \"../../utils/UpdatePopup\";\r\nimport Transcript from \"../../results/candidate/Transcript\";\r\n\r\nconst useStyles = makeStyles((theme)=>({theme,\r\n  containerStyled: {\r\n   \r\n    alignItems: \"left\",\r\n    justifyItems: \"left\",\r\n    borderBottom: \"0.1rem solid #000\",\r\n  },\r\n}));\r\n\r\nconst RegistrationDetails = (registrationInfo) => {\r\n  const classes = useStyles()\r\nconst [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const { centerExamSessionSpecialty, id } = {\r\n    ...registrationInfo.registrationInfo,\r\n  };\r\n  const { centerExamSession } = { ...centerExamSessionSpecialty };\r\n  const { examSession, center } = { ...centerExamSession };\r\n  const { exam, session } = { ...examSession };\r\n  const { sessionName } = { ...session };\r\n  const { examName } = { ...exam };\r\n  const { centerName , centerCode} = { ...center };\r\n  console.log(registrationInfo.registrationInfo);\r\n  console.log(id);\r\n\r\n\r\n  const callUpdatePopup = (event) => {\r\n    setUpdatePopupState((prev)=>({...prev, isOpen: true }));\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  return (\r\n\r\n <Grid container className={classes.containerStyled}>\r\n      <Grid item  xs={12} sm={6}>\r\n        <Typography  variant=\"body2\">\r\n          <span>{centerCode}</span>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item   xs={6} sm={2}>\r\n        <Typography variant=\"body2\">\r\n          <span>{sessionName}</span>\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item   xs={6} sm={2}>\r\n        <Typography variant=\"body2\">\r\n        <span>{examName}</span>\r\n        </Typography>\r\n      </Grid>\r\n      \r\n      <Grid item   xs={12} sm={2}>\r\n        <Typography variant=\"body2\">\r\n          <span>\r\n           <Link\r\n          href={{\r\n            pathname: \"/show/results/candResults\",\r\n            query: { id },\r\n          }}\r\n        >\r\n          <a onClick={callUpdatePopup}>Resultats </a>\r\n        </Link>\r\n        </span>\r\n                \r\n        </Typography>\r\n         <UpdatePopup\r\n                    isOpen={updatePopupState.isOpen}\r\n                    onClose={handleUpdatePopupClose}\r\n                  >\r\n                    <Transcript id={id} />\r\n                  </UpdatePopup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}