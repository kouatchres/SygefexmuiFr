{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subjectSpecialty\\\\NewSubjDistro.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport Error from \"../ErrorMessage.js\";\nimport { Formik, Form } from \"formik\";\nimport { SygefexSelect, SygexInput, StyledForm, ButtonStyled, StyledButton } from \"../utils/FormInputs\";\nimport styled from \"styled-components\";\nimport useForm from \"../utils/useForm\";\nimport * as Yup from \"yup\";\nimport { registerNewSubjectSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { getAllEducationTypesQuery, getAllSubjectsOfAnEducTypeQuery, getAllSpecialtiesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nconst InputGroup = styled.div.withConfig({\n  displayName: \"NewSubjDistro__InputGroup\",\n  componentId: \"o1hf48-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"NewSubjDistro__AllControls\",\n  componentId: \"o1hf48-1\"\n})([\"display:flex;flex-direction:column;\"]);\nconst validationSchema = Yup.object().shape({\n  specialty: Yup.string().required(\"Choix de la Série Obligatoire\"),\n  subject: Yup.string().required(\"Choix de la matière Obligatoire\"),\n  coeff: Yup.number().min(1, \"Le coefficient doit etre au moins 1\").required(\"Choix de la matière Obligatoire\")\n});\n\nconst SpecialtyTakesSubjects = () => {\n  const makeSpecialtyObject = (specialtyID, specialtyCode) => {\n    const storedSpecialty = {\n      id: `${specialtyID}`,\n      specialtyCode: `${specialtyCode}`\n    };\n    return storedSpecialty;\n  };\n\n  const makeSubjectObject = (subjectID, subjectCode) => {\n    const storedSubject = {\n      id: `${subjectID}`,\n      subjectCode: `${subjectCode}`\n    };\n    return storedSubject;\n  };\n\n  const initialValues = {\n    specialty: \" \",\n    subject: \" \",\n    coeff: \"\"\n  };\n  const [state, setState, handleReactSelectChange] = useForm({\n    educTypeID: \" \"\n  });\n  const {\n    data: dataEducType,\n    loadingEducType,\n    errorEducType\n  } = useQuery(getAllEducationTypesQuery);\n  console.log(dataEducType);\n  const getEducTypes = dataEducType && dataEducType.educationTypes;\n  console.log(getEducTypes);\n  const getEducTypeOptions = getEducTypes && getEducTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n  const {\n    data: dataSpecialty,\n    loading: loadingSpecialty,\n    error: errorSpecialty\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\n    skip: !state.educTypeID,\n    variables: {\n      id: state.educTypeID\n    }\n  });\n  console.log(dataSpecialty);\n  const getSpecialtyEducType = dataSpecialty && dataSpecialty.educationType;\n\n  const {\n    specialty\n  } = _objectSpread({}, getSpecialtyEducType);\n\n  console.log(specialty);\n  const refinedSpecialty = specialty && removeTypename(specialty);\n  const getSpecialtyOptions = refinedSpecialty && refinedSpecialty.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.specialtyName\n  }));\n  const {\n    data: dataSubj,\n    loading: loadingSubj,\n    error: errorSubj\n  } = useQuery(getAllSubjectsOfAnEducTypeQuery, {\n    skip: !state.educTypeID,\n    variables: {\n      id: state.educTypeID\n    }\n  });\n  console.log(dataSubj);\n  const getEducationType = dataSubj && dataSubj.educationType;\n\n  const {\n    subject\n  } = _objectSpread({}, getEducationType);\n\n  console.log(subject);\n  const refinedSubject = subject && removeTypename(subject);\n  const getSubjectOptions = refinedSubject && refinedSubject.map(item => ({\n    value: item.id,\n    label: item.subjectName\n  }));\n  const [createSubjectSpecialty, {\n    loading,\n    error\n  }] = useMutation(registerNewSubjectSpecialtyMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createSubjectSpecialty({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          specialty: refinedSpecialty && makeSpecialtyObject(values.specialty.value, values.specialty.specialtyCode),\n          subject: refinedSubject && makeSubjectObject(values.subject.value, values.subject.subjectCode)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    isSubmitting,\n    setFieldValue\n  }) => {\n    return __jsx(MinimStyledPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Donner les mati\\xE8res aux Sp\\xE9cialit\\xE9s\"), __jsx(Error, {\n      error: error || errorEducType || errorSpecialty || errorSubj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loading || loadingEducType || loadingSpecialty || loadingSubj,\n      \"aria-busy\": isSubmitting || loading || loadingEducType || loadingSpecialty || loadingSubj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, __jsx(AllControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, __jsx(SygefexSelect, {\n      onChange: handleReactSelectChange,\n      name: \"educTypeID\",\n      placeholder: \"Le type d'enseignement\",\n      options: getEducTypeOptions,\n      disbled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: value => setFieldValue(\"specialty\", value),\n      name: \"specialty\",\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      options: getSpecialtyOptions,\n      disbled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }), __jsx(SygefexSelect, {\n      onChange: value => setFieldValue(\"subject\", value),\n      name: \"subject\",\n      placeholder: \"La mati\\xE8re\",\n      options: getSubjectOptions,\n      disbled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }), __jsx(SygexInput, {\n      name: \"coeff\",\n      type: \"number\",\n      label: \"Coefficient de la mati\\xE8re\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    })), __jsx(ButtonStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n  });\n};\n\nexport default SpecialtyTakesSubjects;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subjectSpecialty/NewSubjDistro.jsx"],"names":["React","useMutation","useQuery","MinimStyledPage","Error","Formik","Form","SygefexSelect","SygexInput","StyledForm","ButtonStyled","StyledButton","styled","useForm","Yup","registerNewSubjectSpecialtyMutation","removeTypename","getAllEducationTypesQuery","getAllSubjectsOfAnEducTypeQuery","getAllSpecialtiesOfAnEducationTypeQuery","InputGroup","div","AllControls","validationSchema","object","shape","specialty","string","required","subject","coeff","number","min","SpecialtyTakesSubjects","makeSpecialtyObject","specialtyID","specialtyCode","storedSpecialty","id","makeSubjectObject","subjectID","subjectCode","storedSubject","initialValues","state","setState","handleReactSelectChange","educTypeID","data","dataEducType","loadingEducType","errorEducType","console","log","getEducTypes","educationTypes","getEducTypeOptions","map","item","value","label","educationTypeName","dataSpecialty","loading","loadingSpecialty","error","errorSpecialty","skip","variables","getSpecialtyEducType","educationType","refinedSpecialty","getSpecialtyOptions","specialtyName","dataSubj","loadingSubj","errorSubj","getEducationType","refinedSubject","getSubjectOptions","subjectName","createSubjectSpecialty","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","isSubmitting","setFieldValue"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  SygefexSelect,\r\n  SygexInput,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport styled from \"styled-components\";\r\nimport useForm from \"../utils/useForm\";\r\nimport * as Yup from \"yup\";\r\nimport { registerNewSubjectSpecialtyMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { removeTypename } from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getAllEducationTypesQuery,\r\n  getAllSubjectsOfAnEducTypeQuery,\r\n  getAllSpecialtiesOfAnEducationTypeQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst AllControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  specialty: Yup.string().required(\"Choix de la Série Obligatoire\"),\r\n  subject: Yup.string().required(\"Choix de la matière Obligatoire\"),\r\n  coeff: Yup.number()\r\n    .min(1, \"Le coefficient doit etre au moins 1\")\r\n    .required(\"Choix de la matière Obligatoire\"),\r\n});\r\n\r\nconst SpecialtyTakesSubjects = () => {\r\n  const makeSpecialtyObject = (specialtyID, specialtyCode) => {\r\n    const storedSpecialty = {\r\n      id: `${specialtyID}`,\r\n      specialtyCode: `${specialtyCode}`,\r\n    };\r\n    return storedSpecialty;\r\n  };\r\n\r\n  const makeSubjectObject = (subjectID, subjectCode) => {\r\n    const storedSubject = {\r\n      id: `${subjectID}`,\r\n      subjectCode: `${subjectCode}`,\r\n    };\r\n    return storedSubject;\r\n  };\r\n  const initialValues = {\r\n    specialty: \" \",\r\n    subject: \" \",\r\n    coeff: \"\",\r\n  };\r\n\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    educTypeID: \" \",\r\n  });\r\n\r\n \r\n  const { data: dataEducType, loadingEducType, errorEducType } = useQuery(\r\n    getAllEducationTypesQuery\r\n  );\r\n  \r\n  console.log(dataEducType);\r\n\r\n  const getEducTypes = dataEducType && dataEducType.educationTypes;\r\n  console.log(getEducTypes);\r\n  const getEducTypeOptions =\r\n    getEducTypes &&\r\n    getEducTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const {\r\n    data: dataSpecialty,\r\n    loading: loadingSpecialty,\r\n    error: errorSpecialty,\r\n  } = useQuery(getAllSpecialtiesOfAnEducationTypeQuery, {\r\n    skip: !state.educTypeID,\r\n    variables: { id: state.educTypeID },\r\n  });\r\n  \r\n  console.log(dataSpecialty);\r\n\r\n  const getSpecialtyEducType = dataSpecialty && dataSpecialty.educationType;\r\n  const { specialty } = { ...getSpecialtyEducType };\r\n  console.log(specialty);\r\n\r\n  const refinedSpecialty = specialty && removeTypename(specialty);\r\n  const getSpecialtyOptions =\r\n    refinedSpecialty &&\r\n    refinedSpecialty.map((item) => ({\r\n      ...item,\r\n      value: item.id,\r\n      label: item.specialtyName,\r\n    }));\r\n\r\n  const { data: dataSubj, loading: loadingSubj, error: errorSubj } = useQuery(\r\n    getAllSubjectsOfAnEducTypeQuery,\r\n    {\r\n      skip: !state.educTypeID,\r\n      variables: { id: state.educTypeID },\r\n    }\r\n  );\r\n  \r\n  console.log(dataSubj);\r\n  const getEducationType = dataSubj && dataSubj.educationType;\r\n  const { subject } = { ...getEducationType };\r\n  console.log(subject);\r\n  const refinedSubject = subject && removeTypename(subject);\r\n  const getSubjectOptions =\r\n    refinedSubject &&\r\n    refinedSubject.map((item) => ({\r\n      value: item.id,\r\n      label: item.subjectName,\r\n    }));\r\n\r\n  const [createSubjectSpecialty, { loading, error }] = useMutation(\r\n    registerNewSubjectSpecialtyMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createSubjectSpecialty({\r\n          variables: {\r\n            ...values,\r\n            specialty:\r\n              refinedSpecialty &&\r\n              makeSpecialtyObject(\r\n                values.specialty.value,\r\n                values.specialty.specialtyCode\r\n              ),\r\n            subject:\r\n              refinedSubject &&\r\n              makeSubjectObject(\r\n                values.subject.value,\r\n                values.subject.subjectCode\r\n              ),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ values, isSubmitting, setFieldValue }) => {\r\n        return (\r\n          <MinimStyledPage>\r\n            <h4>Donner les matières aux Spécialités</h4>\r\n            <Error error={\r\n              error ||\r\n              errorEducType||\r\nerrorSpecialty||\r\nerrorSubj } />\r\n          \r\n            <StyledForm\r\n              disabled={\r\n                isSubmitting ||\r\n                loading ||\r\n                loadingEducType ||\r\n                loadingSpecialty ||\r\n                loadingSubj\r\n              }\r\n              aria-busy={\r\n                isSubmitting ||\r\n                loading ||\r\n                loadingEducType ||\r\n                loadingSpecialty ||\r\n                loadingSubj\r\n              }\r\n            >\r\n              <Form>\r\n                <AllControls>\r\n                  <InputGroup>\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"educTypeID\"\r\n                      placeholder=\"Le type d'enseignement\"\r\n                      options={getEducTypeOptions}\r\n                      disbled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) => setFieldValue(\"specialty\", value)}\r\n                      name=\"specialty\"\r\n                      placeholder=\"La Spécialité\"\r\n                      options={getSpecialtyOptions}\r\n                      disbled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) => setFieldValue(\"subject\", value)}\r\n                      name=\"subject\"\r\n                      placeholder=\"La matière\"\r\n                      options={getSubjectOptions}\r\n                      disbled={isSubmitting}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"coeff\"\r\n                      type=\"number\"\r\n                      label=\"Coefficient de la matière\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </InputGroup>\r\n                  <ButtonStyled>\r\n                    <StyledButton type=\"submit\">\r\n                      Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </AllControls>\r\n              </Form>\r\n            </StyledForm>\r\n          </MinimStyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default SpecialtyTakesSubjects;\r\n"]},"metadata":{},"sourceType":"module"}