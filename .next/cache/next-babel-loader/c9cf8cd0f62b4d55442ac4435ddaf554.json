{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\examiner\\\\SingleExaminerMui.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect } from \"react\";\nimport Link from \"next/link\";\nimport useForm from \"../utils/useForm\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { singleExaminerQuery } from \"../queries&Mutations&Functions/Queries\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport UpdateExaminer from \"./UpdateExaminerUpdateExaminer \";\nconst useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"12rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nconst SingleExaminerMui = ({\n  id\n}) => {\n  const client = useApolloClient();\n  const classes = useStyles();\n  const router = useRouter();\n  const [state, setState] = useForm({});\n  const [updatePopupState, setUpdatePopupState] = useState({\n    isOpen: false,\n    id: \"\"\n  });\n\n  const loadExaminerData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: singleExaminerQuery,\n      variables: {\n        id: id\n      }\n    });\n    console.log(data);\n    const {\n      examiner\n    } = data;\n    setState({\n      examiner\n    });\n  };\n\n  useEffect(() => {\n    loadExaminerData();\n  }, []);\n\n  const callUpdatePopup = (event, id) => {\n    setUpdatePopupState({\n      isOpen: true,\n      id\n    });\n  };\n\n  const handleUpdatePopupClose = () => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  console.log(state.examiner);\n\n  const {\n    examinerCode,\n    examiner1stName,\n    examiner2ndName,\n    examinerOtherNames,\n    examinerEmail,\n    gender,\n    examinerPhone,\n    examinerImage,\n    examinerCNI\n  } = _objectSpread({}, state.examiner);\n\n  const initialValues = {\n    examinerCode: \"\",\n    examiner1stName: \"\",\n    examiner2ndName: \"\",\n    examinerOtherNames: \"\",\n    examinerEmail: \"\",\n    examinerPhone: \"\",\n    gender: \"\",\n    examinerImage: \"\",\n    examinerCNI: \"\"\n  };\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(\"div\", {\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.pageStyled,\n    elevation: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    className: classes.centerAll,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    className: classes.titleStyled,\n    color: \"primary\",\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Recu Examinateur\"))), __jsx(Grid, {\n    container: true,\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"Nom:\"), \" \", examiner1stName)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, \"Prenoms: \"), examiner2ndName)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Autres Noms:\"), examinerOtherNames)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Sexe:\"), \" \", gender)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \"Tel:\"), examinerCNI)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Tel: \"), \" \", examinerPhone)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Email:\"), examinerEmail)), __jsx(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Code:\"), \" \", examinerCode))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.picStyled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    className: classes.picStyled,\n    src: examinerImage,\n    alt: examiner1stName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }), __jsx(Button, {\n    onClick: callUpdatePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Modifier\")), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, __jsx(UpdateExaminer, {\n    id: updatePopupState.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }))))))));\n};\n\nexport default SingleExaminerMui; //\n//               <Button   onClick= (event, rowData) => {\n//   setUpdatePopupState({ isOpen: true, id: rowData.id })\n// } >\n//               Modifier                       \n//               </Button>","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/examiner/SingleExaminerMui.jsx"],"names":["useRouter","React","useEffect","Link","useForm","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","singleExaminerQuery","UpdatePopup","UpdateExaminer","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","SingleExaminerMui","id","client","classes","router","state","setState","updatePopupState","setUpdatePopupState","useState","isOpen","loadExaminerData","error","data","query","variables","console","log","examiner","callUpdatePopup","event","handleUpdatePopupClose","prev","examinerCode","examiner1stName","examiner2ndName","examinerOtherNames","examinerEmail","gender","examinerPhone","examinerImage","examinerCNI","initialValues","values","isSubmitting"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { singleExaminerQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport UpdateExaminer from \"./UpdateExaminerUpdateExaminer \";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"12rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst SingleExaminerMui = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [state, setState] = useForm({});\r\n   const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n\r\n  const loadExaminerData = async () => {\r\n    \r\n    const { error, data } = await client.query({\r\n      query: singleExaminerQuery,\r\n      variables: { id: id },\r\n    });\r\n    console.log(data);\r\n    const { examiner } = data;\r\n    setState({ examiner });\r\n  };\r\n  useEffect(() => {\r\n    loadExaminerData();\r\n  }, []);\r\n\r\n\r\nconst callUpdatePopup =(event, id)=>{\r\n setUpdatePopupState({ isOpen: true,  id }) \r\n}\r\n  \r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  console.log(state.examiner);\r\n\r\n  const {\r\n    examinerCode,\r\n    examiner1stName,\r\n    examiner2ndName,\r\n    examinerOtherNames,\r\n    examinerEmail,\r\n    gender,\r\n    examinerPhone,\r\n    examinerImage,\r\n    examinerCNI,\r\n  } = { ...state.examiner };\r\n\r\n  const initialValues = {\r\n    examinerCode: \"\",\r\n    examiner1stName: \"\",\r\n    examiner2ndName: \"\",\r\n    examinerOtherNames: \"\",\r\n    examinerEmail: \"\",\r\n    examinerPhone: \"\",\r\n    gender: \"\",\r\n    examinerImage: \"\",\r\n    examinerCNI: \"\",\r\n  };\r\n  return (\r\n    <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Recu Examinateur\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Nom:</strong> {examiner1stName}\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Prenoms: </strong>\r\n                        {examiner2ndName}\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Autres Noms:</strong>\r\n                        {examinerOtherNames}\r\n                      </p>\r\n                    </Typography>\r\n\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Sexe:</strong> {gender}\r\n                      </p>\r\n                    </Typography>\r\n\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Tel:</strong>\r\n                        {examinerCNI}\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Tel: </strong> {examinerPhone}\r\n                      </p>\r\n                    </Typography>\r\n\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Email:</strong>\r\n                        {examinerEmail}\r\n                      </p>\r\n                    </Typography>\r\n\r\n                    <Typography color=\"primary\" variant=\"body1\">\r\n                      <p>\r\n                        <strong>Code:</strong> {examinerCode}\r\n                      </p>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} className={classes.picStyled}>\r\n                    {\r\n                      <img\r\n                        className={classes.picStyled}\r\n                        src={examinerImage}\r\n                        alt={examiner1stName}\r\n                      />\r\n                    }\r\n                    <Button onClick={callUpdatePopup}   >\r\n                    Modifier\r\n                    </Button>\r\n                    </Grid>\r\n                    <UpdatePopup\r\n                    // title={updatePopupState.id}\r\n                      isOpen={updatePopupState.isOpen}\r\n                      onClose={handleUpdatePopupClose}\r\n                    >\r\n                      <UpdateExaminer id={updatePopupState.id} />\r\n                    </UpdatePopup>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SingleExaminerMui;\r\n\r\n//\r\n\r\n                    //               <Button   onClick= (event, rowData) => {\r\n                    //   setUpdatePopupState({ isOpen: true, id: rowData.id })\r\n                    // } >\r\n                    //               Modifier                       \r\n                    //               </Button>"]},"metadata":{},"sourceType":"module"}