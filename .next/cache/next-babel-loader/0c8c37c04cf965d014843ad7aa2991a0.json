{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport RegistrationDetails from './RegistrationDetails';\nimport Error from \"../../ErrorMessage\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nvar useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nvar CenterRegistrationDetails = function CenterRegistrationDetails(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // static propTypes = { id: PropTypes.string.isRequired };\n  var client = useApolloClient();\n  var classes = useStyles();\n\n  var _useState = useState({\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  }),\n      registrationInfo = _useState[0],\n      setRegistrationInfo = _useState[1];\n\n  var initialValues = {};\n\n  var loadCenterRegistrationInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, data, getCenterExamSession, registration, center, examSession, _examSession, exam, session;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: centerExamSessionForResultsQuery,\n                variables: {\n                  id: id\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              data = _yield$client$query.data;\n              getCenterExamSession = data.centerExamSession;\n              registration = getCenterExamSession.registration, center = getCenterExamSession.center, examSession = getCenterExamSession.examSession;\n              _examSession = _objectSpread({}, examSession), exam = _examSession.exam, session = _examSession.session;\n              setRegistrationInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  center: center,\n                  registration: registration,\n                  exam: exam,\n                  session: session\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCenterRegistrationInfo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterRegistrationInfo();\n  }, []);\n  var center = registrationInfo.center,\n      session = registrationInfo.session,\n      exam = registrationInfo.exam,\n      registration = registrationInfo.registration;\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 2\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Resultats Complets Du: \", exam && exam.examName, \", Session: \", session && session.sessionName, \", centre: \", center && center.centerCode))), __jsx(Grid, {\n      container: true,\n      spacing: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, \" Examen: \"), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 71\n      }\n    }, exam && exam.examName), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, \" Centre: \"), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 71\n      }\n    }, center && center.centerName), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, \" Session:\"), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 71\n      }\n    }, session && session.sessionName)), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, registration && registration.map(function (item) {\n      return __jsx(RegistrationDetails, {\n        key: item.id,\n        registration: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }\n      });\n    })))))));\n  });\n};\n\n_s(CenterRegistrationDetails, \"/KweX7F1Zjxrh+Z9pF/1OkYKvwU=\", false, function () {\n  return [useApolloClient, useStyles];\n});\n\n_c = CenterRegistrationDetails;\nexport default CenterRegistrationDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenterRegistrationDetails\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","RegistrationDetails","Error","Formik","Form","Grid","Typography","Paper","Button","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","center","exam","session","registration","registrationInfo","setRegistrationInfo","initialValues","loadCenterRegistrationInfo","query","variables","data","getCenterExamSession","centerExamSession","examSession","prev","values","isSubmitting","examName","sessionName","centerCode","centerName","map","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport RegistrationDetails from './RegistrationDetails'\r\nimport Error from \"../../ErrorMessage\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails =({id})=> {\r\n    // static propTypes = { id: PropTypes.string.isRequired };\r\nconst client = useApolloClient()\r\nconst classes= useStyles()\r\nconst [registrationInfo, setRegistrationInfo] = useState({\r\n    center:\"\", exam:\"\", session:\"\", registration:[]\r\n})\r\n\r\n\r\nconst initialValues ={}\r\n\r\nconst loadCenterRegistrationInfo=async()=>{\r\n    const { data} = await client.query({\r\nquery:centerExamSessionForResultsQuery,\r\nvariables:{id}\r\n\r\n    })\r\n\r\n    const getCenterExamSession  = data.centerExamSession \r\n                    const {  registration, center,examSession } = getCenterExamSession\r\n                    const { exam, session } = { ...examSession }\r\n\r\n    setRegistrationInfo((prev)=>({...prev,center, registration,exam,session }))\r\n}\r\n\r\n        useEffect(()=>{\r\n        loadCenterRegistrationInfo()\r\n        },[])\r\nconst { center, session, exam, registration } =registrationInfo\r\n\r\n                    return (\r\n\r\n\r\n <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats Complets Du: {exam && exam.examName}, Session: {session && session.sessionName}, centre: {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                        <Grid item xs={12} sm={6}>\r\n                                            <strong> Examen: </strong><span>{exam && exam.examName}</span>\r\n                                        \r\n                                            <strong> Centre: </strong><span>{center && center.centerName}</span>\r\n                                        \r\n                                            <strong> Session:</strong><span>{session && session.sessionName}</span>\r\n                           </Grid>\r\n                                  \r\n                            <Grid item xs={12} sm={6}>\r\n\r\n\r\n                                    {\r\n                                        registration && registration.map((item) => (\r\n                                            <RegistrationDetails key={item.id} registration={item} />\r\n                                        ))\r\n                                    }\r\n                             </Grid>\r\n                        </Grid>\r\n                </Grid>\r\n            </Form>\r\n          </Paper>\r\n          </div>\r\n            )}\r\n    </Formik>\r\n        );\r\n               \r\n}\r\n\r\nexport default CenterRegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}