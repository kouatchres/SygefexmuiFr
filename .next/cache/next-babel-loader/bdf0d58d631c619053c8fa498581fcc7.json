{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\town\\\\NewTown.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { getDivisionsOfARegionQuery, getSubDivisionsOfADivisionQuery, getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport Notification from \"../utils/Notification\";\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nimport { createTownMutation } from \"../queries&Mutations&Functions/Mutations\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30vw\",\n    borderRadius: \"0.8rem\",\n    borderBottom: \"0.4rem solid #c89666\",\n    borderTop: \"0.4rem solid #829079\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  subDivision: Yup.string().required(\"Choissisez un arrondissement\"),\n  townName: Yup.string().required(\"Nom Ville Obligatoire\"),\n  townCode: Yup.string().required(\"Code Ville Obligatoire\")\n});\n\nvar NewTown = function NewTown() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var _useForm = useForm({\n    regionID: \"\",\n    divisionID: \"\",\n    regions: [],\n    divisions: [],\n    subDivisions: [],\n    loadingDiv: false\n  }),\n      _useForm2 = _slicedToArray(_useForm, 3),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2];\n\n  var regions = state.regions,\n      divisions = state.divisions,\n      loadingDiv = state.loadingDiv,\n      subDivisions = state.subDivisions,\n      regionID = state.regionID,\n      divisionID = state.divisionID;\n  var initialValues = {\n    townName: \"\",\n    townCode: \"\",\n    subDivision: \"\"\n  };\n\n  var loadRegionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              console.log(data.regions);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  regions: data.regions\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRegionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRegionData();\n  }, []);\n  console.log({\n    regionID: regionID\n  }); // const refinedRegion = removeTypename(regions)\n\n  var getRegionsOptions = regions && regions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.regName\n    };\n  });\n\n  var loadDivisionData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, _data$region, division;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  loadingDiv: true\n                });\n              });\n              _context2.next = 3;\n              return client.query({\n                skip: regionID && !regionID,\n                query: getDivisionsOfARegionQuery,\n                variables: {\n                  id: regionID\n                }\n              });\n\n            case 3:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              console.dir(data);\n              _data$region = _objectSpread({}, data.region), division = _data$region.division;\n              console.log(division);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  divisions: division\n                });\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  loadingDiv: false\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadDivisionData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionData();\n  }, [regionID]);\n  var getDivisionsOptions = divisions && divisions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.divName\n    };\n  });\n  console.dir(divisions);\n\n  var loadSubDivisionData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query3, error, data, _data$division, subDivision;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.query({\n                skip: divisionID && !divisionID,\n                query: getSubDivisionsOfADivisionQuery,\n                variables: {\n                  id: divisionID\n                }\n              });\n\n            case 2:\n              _yield$client$query3 = _context3.sent;\n              error = _yield$client$query3.error;\n              data = _yield$client$query3.data;\n              console.dir(data);\n              _data$division = _objectSpread({}, data.division), subDivision = _data$division.subDivision;\n              console.log(subDivision);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  subDivisions: subDivision\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadSubDivisionData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadSubDivisionData();\n  }, [divisionID]);\n  var getSubDivOptions = subDivisions && subDivisions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.subDivName\n    };\n  });\n  console.dir(getSubDivOptions);\n\n  var _useMutation = useMutation(createTownMutation, {}),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createTown = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loadingMut = _useMutation2$.loadingMut,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values, _ref4) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                setSubmitting = _ref4.setSubmitting, resetForm = _ref4.resetForm;\n                _context4.next = 3;\n                return createTown({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    subDiv: values.subDivision && getObjectFromID(values.subDivision)\n                  })\n                });\n\n              case 3:\n                res = _context4.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"Nouvelle Ville créée avec success\",\n                    type: \"success\"\n                  });\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x, _x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, function (_ref6) {\n    var submitForm = _ref6.submitForm,\n        setFieldValue = _ref6.setFieldValue,\n        isSubmitting = _ref6.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loadingMut) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 50\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, \"Nouvelle Ville\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      variant: \"outlined\",\n      name: \"regionID\",\n      label: \"La R\\xE9gion\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"regionID\");\n      },\n      component: Select,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"regionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 37\n        }\n      }),\n      options: getRegionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"divisionID\");\n      },\n      name: \"divisionID\",\n      label: \"Le D\\xE9partement\",\n      component: Select,\n      placeholder: \"le D\\xE9partement\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"divisionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 37\n        }\n      }),\n      options: getDivisionsOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"subDivision\",\n      label: \"L'Arrondissement\",\n      component: Select,\n      placeholder: \"l'Arrondissement\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"subDivision\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 37\n        }\n      }),\n      options: getSubDivOptions,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"townName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom  de la Ville\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loadingMut,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"townName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"townCode\",\n      type: \"text\",\n      component: TextField,\n      label: \"Code de la Ville\",\n      fullWidth: true,\n      variant: \"outlined\",\n      disabled: isSubmitting || loadingMut,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"townCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loadingMut) && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 58\n      }\n    }), isSubmitting ? \"Nouvelle Ville en création\" : \"Créer Nouvelle Ville\")))))));\n  });\n};\n\n_s(NewTown, \"hFHC3tMytzew65e1Zy9SPuOm/84=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useMutation];\n});\n\n_c = NewTown;\nexport default NewTown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTown\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/town/NewTown.jsx"],"names":["React","useState","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useMutation","useApolloClient","getDivisionsOfARegionQuery","getSubDivisionsOfADivisionQuery","getAllRegionsQuery","Notification","getObjectFromID","useForm","createTownMutation","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","borderRadius","borderBottom","borderTop","titleStyled","centerAll","validationSchema","object","shape","subDivision","string","required","townName","townCode","NewTown","classes","client","isOpen","message","type","notify","setNotify","regionID","divisionID","regions","divisions","subDivisions","loadingDiv","state","setState","handleSelectChange","initialValues","loadRegionData","query","error","data","console","log","getRegionsOptions","map","item","value","id","label","regName","loadDivisionData","prev","skip","variables","dir","region","division","getDivisionsOptions","divName","loadSubDivisionData","getSubDivOptions","subDivName","createTown","loadingMut","values","setSubmitting","resetForm","subDiv","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AACA,SACEC,0BADF,EAEEC,+BAFF,EAGEC,kBAHF,QAIO,wCAJP;AAKA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,eAAT,QAAgC,0CAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AAEA,IAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX,CAIJ;;AAJI,GADqB;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GARgB;AAc3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,OAAO,EAAE,MADC;AAEVG,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,SAAS,EAAE,MAHD;AAIVC,IAAAA,OAAO,EAAE,MAJC;AAKVC,IAAAA,QAAQ,EAAE,MALA;AAMVC,IAAAA,YAAY,EAAE,QANJ;AAOVC,IAAAA,YAAY,EAAE,sBAPJ;AAQVC,IAAAA,SAAS,EAAE,sBARD,CASV;;AATU,GAde;AA0B3BC,EAAAA,WAAW,EAAE;AACXb,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GA1Bc;AA+B3BW,EAAAA,SAAS,EAAE;AACTd,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTM,IAAAA,QAAQ,EAAE;AAHD;AA/BgB,CAAD,CAA5B;AAsCA,IAAMM,gBAAgB,GAAGxC,GAAG,CAACyC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,WAAW,EAAE3C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAD6B;AAE1CC,EAAAA,QAAQ,EAAE9C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAFgC;AAG1CE,EAAAA,QAAQ,EAAE/C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAHgC,CAAnB,CAAzB;;AAMA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,MAAM2B,MAAM,GAAGnC,eAAe,EAA9B;;AAFoB,kBAIQlB,QAAQ,CAAC;AACnCsD,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CAJhB;AAAA,MAIbC,MAJa;AAAA,MAILC,SAJK;;AAAA,iBAS0BlC,OAAO,CAAC;AACpDmC,IAAAA,QAAQ,EAAE,EAD0C;AAEpDC,IAAAA,UAAU,EAAE,EAFwC;AAGpDC,IAAAA,OAAO,EAAE,EAH2C;AAIpDC,IAAAA,SAAS,EAAE,EAJyC;AAKpDC,IAAAA,YAAY,EAAE,EALsC;AAMpDC,IAAAA,UAAU,EAAE;AANwC,GAAD,CATjC;AAAA;AAAA,MASbC,KATa;AAAA,MASNC,QATM;AAAA,MASIC,kBATJ;;AAAA,MAkBlBN,OAlBkB,GAwBhBI,KAxBgB,CAkBlBJ,OAlBkB;AAAA,MAmBlBC,SAnBkB,GAwBhBG,KAxBgB,CAmBlBH,SAnBkB;AAAA,MAoBlBE,UApBkB,GAwBhBC,KAxBgB,CAoBlBD,UApBkB;AAAA,MAqBlBD,YArBkB,GAwBhBE,KAxBgB,CAqBlBF,YArBkB;AAAA,MAsBlBJ,QAtBkB,GAwBhBM,KAxBgB,CAsBlBN,QAtBkB;AAAA,MAuBlBC,UAvBkB,GAwBhBK,KAxBgB,CAuBlBL,UAvBkB;AA0BpB,MAAMQ,aAAa,GAAG;AACpBnB,IAAAA,QAAQ,EAAE,EADU;AAEpBC,IAAAA,QAAQ,EAAE,EAFU;AAGpBJ,IAAAA,WAAW,EAAE;AAHO,GAAtB;;AAMA,MAAMuB,cAAc;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACShB,MAAM,CAACiB,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAEjD;AADkC,eAAb,CADT;;AAAA;AAAA;AACbkD,cAAAA,KADa,uBACbA,KADa;AACNC,cAAAA,IADM,uBACNA,IADM;AAIrBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACX,OAAjB;AACAK,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBJ,kBAAAA,OAAO,EAAEW,IAAI,CAACX;AAAtC;AAAA,eAAD,CAAR;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdQ,cAAc;AAAA;AAAA;AAAA,KAApB;;AAQApE,EAAAA,SAAS,CAAC,YAAM;AACdoE,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEf,IAAAA,QAAQ,EAARA;AAAF,GAAZ,EA3CoB,CA4CpB;;AACA,MAAMgB,iBAAiB,GACrBd,OAAO,IAAIA,OAAO,CAACe,GAAR,CAAY,UAACC,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAA9B,KAAX;AAAA,GAAZ,CADb;;AAGA,MAAMC,gBAAgB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBhB,cAAAA,QAAQ,CAAC,UAACiB,IAAD;AAAA,uDACJA,IADI;AAEPnB,kBAAAA,UAAU,EAAE;AAFL;AAAA,eAAD,CAAR;AADuB;AAAA,qBAMOX,MAAM,CAACiB,KAAP,CAAa;AACzCc,gBAAAA,IAAI,EAAEzB,QAAQ,IAAI,CAACA,QADsB;AAEzCW,gBAAAA,KAAK,EAAEnD,0BAFkC;AAGzCkE,gBAAAA,SAAS,EAAE;AAAEN,kBAAAA,EAAE,EAAEpB;AAAN;AAH8B,eAAb,CANP;;AAAA;AAAA;AAMfY,cAAAA,KANe,wBAMfA,KANe;AAMRC,cAAAA,IANQ,wBAMRA,IANQ;AAYvBC,cAAAA,OAAO,CAACa,GAAR,CAAYd,IAAZ;AAZuB,+CAaGA,IAAI,CAACe,MAbR,GAafC,QAbe,gBAafA,QAbe;AAcvBf,cAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACAtB,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBH,kBAAAA,SAAS,EAAE0B;AAAnC;AAAA,eAAD,CAAR;AACAtB,cAAAA,QAAQ,CAAC,UAACiB,IAAD;AAAA,uDACJA,IADI;AAEPnB,kBAAAA,UAAU,EAAE;AAFL;AAAA,eAAD,CAAR;;AAhBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBkB,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAsBAjF,EAAAA,SAAS,CAAC,YAAM;AACdiF,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACvB,QAAD,CAFM,CAAT;AAIA,MAAM8B,mBAAmB,GACvB3B,SAAS,IACTA,SAAS,CAACc,GAAV,CAAc,UAACC,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACa;AAA9B,KAAX;AAAA,GAAd,CAFF;AAIAjB,EAAAA,OAAO,CAACa,GAAR,CAAYxB,SAAZ;;AAEA,MAAM6B,mBAAmB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACItC,MAAM,CAACiB,KAAP,CAAa;AACzCc,gBAAAA,IAAI,EAAExB,UAAU,IAAI,CAACA,UADoB;AAEzCU,gBAAAA,KAAK,EAAElD,+BAFkC;AAGzCiE,gBAAAA,SAAS,EAAE;AAAEN,kBAAAA,EAAE,EAAEnB;AAAN;AAH8B,eAAb,CADJ;;AAAA;AAAA;AAClBW,cAAAA,KADkB,wBAClBA,KADkB;AACXC,cAAAA,IADW,wBACXA,IADW;AAO1BC,cAAAA,OAAO,CAACa,GAAR,CAAYd,IAAZ;AAP0B,iDAQGA,IAAI,CAACgB,QARR,GAQlB1C,WARkB,kBAQlBA,WARkB;AAS1B2B,cAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAZ;AACAoB,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBF,kBAAAA,YAAY,EAAEjB;AAAtC;AAAA,eAAD,CAAR;;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnB6C,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAaA1F,EAAAA,SAAS,CAAC,YAAM;AACd0F,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAAC/B,UAAD,CAFM,CAAT;AAIA,MAAMgC,gBAAgB,GACpB7B,YAAY,IACZA,YAAY,CAACa,GAAb,CAAiB,UAACC,IAAD;AAAA,WAAW;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,MAAAA,KAAK,EAAEH,IAAI,CAACgB;AAA9B,KAAX;AAAA,GAAjB,CAFF;AAIApB,EAAAA,OAAO,CAACa,GAAR,CAAYM,gBAAZ;;AArGoB,qBAsGwB3E,WAAW,CACrDQ,kBADqD,EAErD,EAFqD,CAtGnC;AAAA;AAAA,MAsGbqE,UAtGa;AAAA;AAAA,MAsGCC,UAtGD,kBAsGCA,UAtGD;AAAA,MAsGaxB,KAtGb,kBAsGaA,KAtGb;;AA2GpB,SACE,MAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,aAAa,EAAEH,aAFjB;AAGE,IAAA,gBAAgB,EAAEzB,gBAHpB;AAIE,IAAA,QAAQ;AAAA,2EAAE,kBAAOqD,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,aAAjB,SAAiBA,aAAjB,EAAgCC,SAAhC,SAAgCA,SAAhC;AAAA;AAAA,uBACUJ,UAAU,CAAC;AAC3BT,kBAAAA,SAAS,kCACJW,MADI;AAEPG,oBAAAA,MAAM,EAAEH,MAAM,CAAClD,WAAP,IAAsBvB,eAAe,CAACyE,MAAM,CAAClD,WAAR;AAFtC;AADkB,iBAAD,CADpB;;AAAA;AACFsD,gBAAAA,GADE;AAORC,gBAAAA,UAAU,CAAC,YAAM;AACf5B,kBAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAvB,kBAAAA,OAAO,CAACC,GAAR,CAAY0B,GAAZ;AACA1C,kBAAAA,SAAS,CAAC;AACRJ,oBAAAA,MAAM,EAAE,IADA;AAERC,oBAAAA,OAAO,EAAE,mCAFD;AAGRC,oBAAAA,IAAI,EAAE;AAHE,mBAAD,CAAT;AAKA0C,kBAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,kBAAAA,aAAa,CAAC,KAAD,CAAb;AACD,iBAVS,EAUP,GAVO,CAAV;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBG,iBAAiD;AAAA,QAA9CO,UAA8C,SAA9CA,UAA8C;AAAA,QAAlCC,aAAkC,SAAlCA,aAAkC;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;AAChD,WACE;AAAK,MAAA,SAAS,EAAEtD,OAAO,CAACV,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEU,OAAO,CAAClB,UAA1B;AAAsC,MAAA,SAAS,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAWwE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,YAAY,IAAIX,UAAjB,KAAgC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAE3C,OAAO,CAACV,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEU,OAAO,CAACV,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE6B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AACE,MAAA,SAAS,EAAEnB,OAAO,CAACX,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,CADF,EAeE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEW,OAAO,CAACV,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAEU,OAAO,CAACV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,QAAQ,EAAE,kBAACiE,KAAD,EAAW;AACnBxC,QAAAA,kBAAkB,CAACwC,KAAD,EAAQ,UAAR,CAAlB;AACD,OANH;AAOE,MAAA,SAAS,EAAEtG,MAPb;AAQE,MAAA,QAAQ,EAAEqG,YARZ;AASE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATd;AAUE,MAAA,OAAO,EAAE/B,iBAVX;AAWE,MAAA,SAAS,MAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,EAAE,kBAACgC,KAAD,EAAW;AACnBxC,QAAAA,kBAAkB,CAACwC,KAAD,EAAQ,YAAR,CAAlB;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,YALP;AAME,MAAA,KAAK,EAAC,mBANR;AAOE,MAAA,SAAS,EAAEtG,MAPb;AAQE,MAAA,WAAW,EAAC,mBARd;AASE,MAAA,QAAQ,EAAEqG,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAWE,MAAA,OAAO,EAAEjB,mBAXX;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA4BE,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,SAAS,EAAEpF,MAJb;AAKE,MAAA,WAAW,EAAC,kBALd;AAME,MAAA,QAAQ,EAAEqG,YANZ;AAOE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPd;AAQE,MAAA,OAAO,EAAEd,gBARX;AASE,MAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EAwCE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAExF,SAHb;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,OAAO,EAAC,UANV;AAOE,MAAA,QAAQ,EAAEsG,YAAY,IAAIX,UAP5B;AAQE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAkDE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE3F,SAHb;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,OAAO,EAAC,UANV;AAOE,MAAA,QAAQ,EAAEsG,YAAY,IAAIX,UAP5B;AAQE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,EA4DE,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEtC,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5DF,EA8DE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEgD,YAAlB;AAAgC,MAAA,OAAO,EAAEF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,YAAY,IAAIX,UAAjB,KAAgC,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,EAEGW,YAAY,GAAG,4BAAH,GAAkC,sBAFjD,CA9DF,CADF,CAfF,CAFF,CADF,CADF,CADF;AA8FD,GAvHH,CADF;AA2HD,CAtOD;;GAAMvD,O;UACYzB,S,EACDR,e,EAO+BM,O,EA6FFP,W;;;KAtGxCkC,O;AAuON,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport {\r\n  getDivisionsOfARegionQuery,\r\n  getSubDivisionsOfADivisionQuery,\r\n  getAllRegionsQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { createTownMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n    borderRadius: \"0.8rem\",\r\n    borderBottom: \"0.4rem solid #c89666\",\r\n    borderTop: \"0.4rem solid #829079\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  subDivision: Yup.string().required(\"Choissisez un arrondissement\"),\r\n  townName: Yup.string().required(\"Nom Ville Obligatoire\"),\r\n  townCode: Yup.string().required(\"Code Ville Obligatoire\"),\r\n});\r\n\r\nconst NewTown = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [state, setState, handleSelectChange] = useForm({\r\n    regionID: \"\",\r\n    divisionID: \"\",\r\n    regions: [],\r\n    divisions: [],\r\n    subDivisions: [],\r\n    loadingDiv: false,\r\n  });\r\n  const {\r\n    regions,\r\n    divisions,\r\n    loadingDiv,\r\n    subDivisions,\r\n    regionID,\r\n    divisionID,\r\n  } = state;\r\n\r\n  const initialValues = {\r\n    townName: \"\",\r\n    townCode: \"\",\r\n    subDivision: \"\",\r\n  };\r\n\r\n  const loadRegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    console.log(data.regions);\r\n    setState((state) => ({ ...state, regions: data.regions }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.log({ regionID });\r\n  // const refinedRegion = removeTypename(regions)\r\n  const getRegionsOptions =\r\n    regions && regions.map((item) => ({ value: item.id, label: item.regName }));\r\n\r\n  const loadDivisionData = async () => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loadingDiv: true,\r\n    }));\r\n\r\n    const { error, data } = await client.query({\r\n      skip: regionID && !regionID,\r\n      query: getDivisionsOfARegionQuery,\r\n      variables: { id: regionID },\r\n    });\r\n\r\n    console.dir(data);\r\n    const { division } = { ...data.region };\r\n    console.log(division);\r\n    setState((state) => ({ ...state, divisions: division }));\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loadingDiv: false,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n  }, [regionID]);\r\n\r\n  const getDivisionsOptions =\r\n    divisions &&\r\n    divisions.map((item) => ({ value: item.id, label: item.divName }));\r\n\r\n  console.dir(divisions);\r\n\r\n  const loadSubDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: divisionID && !divisionID,\r\n      query: getSubDivisionsOfADivisionQuery,\r\n      variables: { id: divisionID },\r\n    });\r\n\r\n    console.dir(data);\r\n    const { subDivision } = { ...data.division };\r\n    console.log(subDivision);\r\n    setState((state) => ({ ...state, subDivisions: subDivision }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubDivisionData();\r\n  }, [divisionID]);\r\n\r\n  const getSubDivOptions =\r\n    subDivisions &&\r\n    subDivisions.map((item) => ({ value: item.id, label: item.subDivName }));\r\n\r\n  console.dir(getSubDivOptions);\r\n  const [createTown, { loadingMut, error }] = useMutation(\r\n    createTownMutation,\r\n    {}\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createTown({\r\n          variables: {\r\n            ...values,\r\n            subDiv: values.subDivision && getObjectFromID(values.subDivision),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Nouvelle Ville créée avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loadingMut) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Nouvelle Ville\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"regionID\"\r\n                        label=\"La Région\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"regionID\");\r\n                        }}\r\n                        component={Select}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"regionID\" />}\r\n                        options={getRegionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"divisionID\");\r\n                        }}\r\n                        name=\"divisionID\"\r\n                        label=\"Le Département\"\r\n                        component={Select}\r\n                        placeholder=\"le Département\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"divisionID\" />}\r\n                        options={getDivisionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"subDivision\"\r\n                        label=\"L'Arrondissement\"\r\n                        component={Select}\r\n                        placeholder=\"l'Arrondissement\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"subDivision\" />}\r\n                        options={getSubDivOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        name=\"townName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom  de la Ville\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loadingMut}\r\n                        helpertext={<ErrorMessage name=\"townName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"townCode\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Code de la Ville\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting || loadingMut}\r\n                        helpertext={<ErrorMessage name=\"townCode\" />}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {(isSubmitting || loadingMut) && <CircularProgress />}\r\n                        {isSubmitting ? \"Nouvelle Ville en création\" : \"Créer Nouvelle Ville\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewTown;\r\n"]},"metadata":{},"sourceType":"module"}