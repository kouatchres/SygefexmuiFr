{"ast":null,"code":"import _extends from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subDivision\\\\SubDivisionList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { getAllRegionsDivisionsAndTownsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { deleteSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport Notification from \"../utils/Notification\";\nimport NewSubDivision from \"./NewSubDivision\";\nimport UpdateSubDivision from \"./UpdateSubDivision\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3,\n      overflowX: \"auto\"\n    },\n    head: {\n      backgroundColor: \"#fff\",\n      position: \"sticky\",\n      top: 0\n    }\n  };\n});\n\nvar SubDivisionList = function SubDivisionList() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      isAddPopupOpen = _useState[0],\n      setIsAddPopupOpen = _useState[1];\n\n  var _useState2 = useState({\n    isOpen: false,\n    id: \"\"\n  }),\n      updatePopupState = _useState2[0],\n      setUpdatePopupState = _useState2[1];\n\n  var _useState3 = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState3[0],\n      setNotify = _useState3[1];\n\n  var _useState4 = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\"\n  }),\n      deleteConfirmDialog = _useState4[0],\n      setDeleteConfirmDialog = _useState4[1];\n\n  var _useState5 = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\",\n      grouping: false\n    }, {\n      field: \"divName\",\n      title: \"Division Name\"\n    }, {\n      field: \"divCode\",\n      title: \"Division Code\",\n      grouping: false\n    }, {\n      field: \"subDivName\",\n      title: \"Nom Arrond\"\n    }, {\n      field: \"subDivCode\",\n      title: \"Code Arrond\",\n      grouping: false\n    }],\n    data: []\n  }),\n      state = _useState5[0],\n      setState = _useState5[1];\n\n  var loadDivisionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, regions, getSubDivisions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsDivisionsAndTownsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              _data = _objectSpread({}, data), regions = _data.regions;\n              getSubDivisions = regions.map(function (item) {\n                var divInfos = item.division.map(function (division) {\n                  var subDivInfos = division.subDivision.map(function (subDivision) {\n                    return _objectSpread({\n                      regName: item.regName,\n                      regCode: item.regCode,\n                      divName: division.divName,\n                      divCode: division.divCode\n                    }, subDivision);\n                  });\n                  return subDivInfos;\n                });\n                return divInfos;\n              });\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: getSubDivisions.flat(2)\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadDivisionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionData();\n    console.log(state.data);\n  }, []);\n\n  var handleAddPopupClose = function handleAddPopupClose() {\n    setIsAddPopupOpen(false);\n  };\n\n  var handleUpdatePopupClose = function handleUpdatePopupClose() {\n    setUpdatePopupState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var handleDeleteConfirmDialog = function handleDeleteConfirmDialog() {\n    setDeleteConfirmDialog(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var _useMutation = useMutation(deleteSubDivisionMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    } // update: updateCache(),\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteSubDivision = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var actions = [{\n    icon: function icon() {\n      return __jsx(AddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Ajouter Nouvelle Région\",\n    isFreeAction: true,\n    onClick: function onClick() {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Modifier Région\",\n    onClick: function onClick(event, rowData) {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Supprimer région\",\n    onClick: function onClick(event, rowData) {\n      return setDeleteConfirmDialog({\n        id: rowData.id,\n        isOpen: true,\n        title: \"Etes-vous sur de suprimer cette inofrmation\",\n        subtitle: \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\n        onConfirm: function onConfirm() {\n          rowData.id && deleteSubDivision(rowData.id);\n          setNotify({\n            isOpen: true,\n            message: \"Arrondisse Supprimee avec success\",\n            type: \"error\"\n          });\n          console.log(\"just after the delete process\");\n        }\n      });\n    }\n  }];\n  console.dir(state.data);\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(MaterialTable, {\n    className: classes.head,\n    components: {\n      Toolbar: function Toolbar(props) {\n        return __jsx(\"div\", {\n          style: {\n            backgroundColor: \"#01579b\",\n            borderTopRightRadius: \"0.5rem\",\n            borderTopLeftRadius: \"0.5rem\",\n            color: \"#fff\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }\n        }, __jsx(MTableToolbar, _extends({\n          style: {\n            // textColor: \"#000\",\n            textColor: \"#fff\"\n          }\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }\n        })));\n      }\n    },\n    icons: tableIcons,\n    title: \"Users List\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        color: \"#fff\",\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        backgroundColor: \"#01579b\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    actions: actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), __jsx(AddPopup, {\n    title: \"Nouvelle R\\xE9gion\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, __jsx(NewSubDivision, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), __jsx(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, __jsx(UpdateSubDivision, {\n    id: updatePopupState.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(SubDivisionList, \"kzOve+8laccdSwiowNJKLZWkPx4=\", false, function () {\n  return [useStyles, useApolloClient, useMutation];\n});\n\n_c = SubDivisionList;\nexport default SubDivisionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubDivisionList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subDivision/SubDivisionList.jsx"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Paper","makeStyles","useApolloClient","useMutation","useQuery","getAllRegionsDivisionsAndTownsQuery","deleteSubDivisionMutation","tableIcons","ConfirmDialog","AddPopup","UpdatePopup","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","Notification","NewSubDivision","UpdateSubDivision","useStyles","theme","root","width","marginTop","spacing","unit","overflowX","head","backgroundColor","position","top","SubDivisionList","classes","client","isAddPopupOpen","setIsAddPopupOpen","isOpen","id","updatePopupState","setUpdatePopupState","message","type","notify","setNotify","title","subtitle","deleteConfirmDialog","setDeleteConfirmDialog","columns","field","grouping","data","state","setState","loadDivisionData","query","error","regions","getSubDivisions","map","item","divInfos","division","subDivInfos","subDivision","regName","regCode","divName","divCode","prev","flat","console","log","handleAddPopupClose","handleUpdatePopupClose","handleDeleteConfirmDialog","variables","deleteSubDivision","loading","actions","icon","tooltip","isFreeAction","onClick","event","rowData","onConfirm","dir","Toolbar","props","borderTopRightRadius","borderTopLeftRadius","color","textColor","actionsColumnIndex","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsDivisionsAndTownsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport { deleteSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\nimport Notification from \"../utils/Notification\";\r\nimport NewSubDivision from \"./NewSubDivision\";\r\nimport UpdateSubDivision from \"./UpdateSubDivision\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\",\r\n  },\r\n  head: {\r\n    backgroundColor: \"#fff\",\r\n    position: \"sticky\",\r\n    top: 0,\r\n  },\r\n}));\r\n\r\nconst SubDivisionList = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n        grouping: false,\r\n      },\r\n      { field: \"divName\", title: \"Division Name\" },\r\n      { field: \"divCode\", title: \"Division Code\", grouping: false },\r\n      { field: \"subDivName\", title: \"Nom Arrond\" },\r\n      { field: \"subDivCode\", title: \"Code Arrond\", grouping: false },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadDivisionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsDivisionsAndTownsQuery,\r\n    });\r\n    const { regions } = { ...data };\r\n\r\n    const getSubDivisions = regions.map((item) => {\r\n      const divInfos = item.division.map((division) => {\r\n        const subDivInfos = division.subDivision.map((subDivision) => ({\r\n          regName: item.regName,\r\n          regCode: item.regCode,\r\n          divName: division.divName,\r\n          divCode: division.divCode,\r\n          ...subDivision,\r\n        }));\r\n        return subDivInfos;\r\n      });\r\n      return divInfos;\r\n    });\r\n\r\n    setState((prev) => ({ ...prev, data: getSubDivisions.flat(2) }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n\r\n    console.log(state.data);\r\n  }, []);\r\n\r\n  const handleAddPopupClose = () => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const [deleteSubDivision, { loading }] = useMutation(\r\n    deleteSubDivisionMutation,\r\n    {\r\n      variables: { id: deleteConfirmDialog.id },\r\n      // update: updateCache(),\r\n    }\r\n  );\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Ajouter Nouvelle Région\",\r\n      isFreeAction: true,\r\n      onClick: () => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifier Région\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer région\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteSubDivision(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Arrondisse Supprimee avec success\",\r\n              type: \"error\",\r\n            });\r\n            console.log(\"just after the delete process\");\r\n          },\r\n        }),\r\n    },\r\n  ];\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div>\r\n        <MaterialTable\r\n          className={classes.head}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#01579b\",\r\n                  borderTopRightRadius: \"0.5rem\",\r\n                  borderTopLeftRadius: \"0.5rem\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <MTableToolbar\r\n                  style={{\r\n                    // textColor: \"#000\",\r\n                    textColor: \"#fff\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            ),\r\n          }}\r\n          icons={tableIcons}\r\n          title=\"Users List\"\r\n          columns={state.columns}\r\n          data={state.data}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            grouping: true,\r\n            paging: true,\r\n            pageSize: 50, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n            headerStyle: {\r\n              color: \"#fff\",\r\n              paddingTop: \"0.5rem\",\r\n              paddingBottom: \"0.5rem\",\r\n              backgroundColor: \"#01579b\",\r\n              maxHeight: \"0.5rem !important\",\r\n            },\r\n            rowStyle: {\r\n              color: \"#000\",\r\n            },\r\n          }}\r\n          actions={actions}\r\n        />\r\n        <AddPopup\r\n          title=\"Nouvelle Région\"\r\n          isOpen={isAddPopupOpen}\r\n          onClose={handleAddPopupClose}\r\n        >\r\n          <NewSubDivision />\r\n        </AddPopup>\r\n        <ConfirmDialog\r\n          title={deleteConfirmDialog.title}\r\n          subtitle={deleteConfirmDialog.subtitle}\r\n          isOpen={deleteConfirmDialog.isOpen}\r\n          onClose={handleDeleteConfirmDialog}\r\n          onConfirm={deleteConfirmDialog.onConfirm}\r\n        />\r\n        <Notification notify={notify} setNotify={setNotify} />\r\n\r\n        <UpdatePopup\r\n          // title={updatePopupState.id}\r\n          isOpen={updatePopupState.isOpen}\r\n          onClose={handleUpdatePopupClose}\r\n        >\r\n          <UpdateSubDivision id={updatePopupState.id} />\r\n        </UpdatePopup>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SubDivisionList;\r\n"]},"metadata":{},"sourceType":"module"}