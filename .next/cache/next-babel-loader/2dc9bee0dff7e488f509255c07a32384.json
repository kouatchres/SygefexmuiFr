{"ast":null,"code":"import _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\RegionList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\";\nimport AddPopup from \"../utils/AddPopup\";\nimport UpdatePopup from \"../utils/UpdatePopup\";\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\nimport { deleteRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport Notification from \"../utils/Notification\";\nimport { Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\nimport NewRegionMui from \"./NewRegionMui\";\nimport UpdateRegion from \"./UpdateRegion\";\nvar useStyles = makeStyles({\n  stickyActionsColumn: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& td:first-child, th:first-child\": {\n          backgroundColor: \"#f5f5f5\",\n          position: \"sticky\",\n          left: 0,\n          zIndex: 10\n        },\n        \"& th:first-child\": {\n          zIndex: 10\n        }\n      }\n    }\n  },\n  stickyHeader: {\n    \"& table:first-child\": {\n      \"& tr\": _defineProperty({\n        \"& th\": {\n          backgroundColor: \"#5aa193\",\n          position: \"sticky\",\n          top: \"4rem\",\n          zIndex: 10\n        }\n      }, \"& th\", {\n        zIndex: 10\n      })\n    }\n  }\n});\n\nvar RegionList = function RegionList() {\n  _s();\n\n  var _jsx;\n\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      isAddPopupOpen = _useState[0],\n      setIsAddPopupOpen = _useState[1];\n\n  var _useState2 = useState({\n    isOpen: false,\n    id: \"\"\n  }),\n      updatePopupState = _useState2[0],\n      setUpdatePopupState = _useState2[1];\n\n  var _useState3 = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState3[0],\n      setNotify = _useState3[1];\n\n  var _useState4 = useState({\n    isOpen: false,\n    id: \"\",\n    title: \"\",\n    subtitle: \"\",\n    division: []\n  }),\n      deleteConfirmDialog = _useState4[0],\n      setDeleteConfirmDialog = _useState4[1];\n\n  var _useState5 = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\"\n    }, {\n      field: \"id\",\n      title: \"ID\"\n    }],\n    data: []\n  }),\n      state = _useState5[0],\n      setState = _useState5[1];\n\n  var loadRegionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, _data, regions;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: getAllRegionsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              error && __jsx(Error, {\n                error: error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 16\n                }\n              });\n              _data = _objectSpread({}, data), regions = _data.regions;\n              console.log(regions);\n              console.log(regions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: regions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadRegionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadRegionData();\n  }, []);\n\n  var loadDivisionsOfARegionData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, data, _data2, regions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                query: getDivisionsOfARegionQuery,\n                variables: {\n                  id: deleteConfirmDialog.id\n                }\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              data = _yield$client$query2.data;\n              error && __jsx(Error, {\n                error: error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 16\n                }\n              });\n              _data2 = _objectSpread({}, data), regions = _data2.regions;\n              console.log(regions);\n              console.log(regions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  data: regions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadDivisionsOfARegionData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadDivisionsOfARegionData();\n  }, [deleteConfirmDialog.id]);\n\n  var updateCache = function updateCache(cache, payload) {\n    // manually update the cache so that the data are all the same\n    // 1. read the cache for the data we want\n    var data = cache && cache.readQuery({\n      query: getAllRegionsQuery\n    });\n    cache && cache.writeQuery({\n      query: getAllRegionsQuery,\n      data: {\n        regions: data.regions.filter(function (item) {\n          return item.id !== payload.data.deleteRegion.id;\n        })\n      }\n    });\n  };\n\n  var handleAddPopupClose = function handleAddPopupClose() {\n    setIsAddPopupOpen(false);\n  };\n\n  var handleUpdatePopupClose = function handleUpdatePopupClose() {\n    setUpdatePopupState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var handleDeleteConfirmDialog = function handleDeleteConfirmDialog() {\n    setDeleteConfirmDialog(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isOpen: false\n      });\n    });\n  };\n\n  var _useMutation = useMutation(deleteRegionMutation, {\n    variables: {\n      id: deleteConfirmDialog.id\n    },\n    update: updateCache()\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteRegion = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var actions = [{\n    icon: function icon() {\n      return __jsx(AddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Ajouter Nouvelle Région\",\n    isFreeAction: true,\n    onClick: function onClick() {\n      setIsAddPopupOpen(true);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Modifier Région\",\n    onClick: function onClick(event, rowData) {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      }); // console.log(rowData.id);\n    }\n  }, {\n    icon: function icon() {\n      return __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      });\n    },\n    tooltip: \"Supprimer région\",\n    onClick: function onClick(event, rowData) {\n      return setDeleteConfirmDialog(_defineProperty({\n        id: rowData.id,\n        isOpen: true,\n        title: \"Etes-vous sur de suprimer cette inofrmation\",\n        subtitle: \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\n        onConfirm: function onConfirm() {\n          rowData.id && deleteRegion(rowData.id);\n          setNotify({\n            isOpen: true,\n            message: \"Region Supprimee avec success\",\n            type: \"error\"\n          });\n        }\n      }, \"isOpen\", false));\n    }\n  }];\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, __jsx(MaterialTable, (_jsx = {\n    icons: tableIcons,\n    title: \"Liste de R\\xE9gions\",\n    columns: state.columns,\n    data: state.data,\n    actions: actions,\n    stickyHeader: true,\n    style: {\n      position: \"sticky\",\n      top: 0\n    }\n  }, _defineProperty(_jsx, \"icons\", tableIcons), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 7\n  }), _jsx)), __jsx(AddPopup, {\n    title: \"Nouvelle R\\xE9gion\",\n    isOpen: isAddPopupOpen,\n    onClose: handleAddPopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(NewRegionMui, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  })), __jsx(ConfirmDialog, {\n    title: deleteConfirmDialog.title,\n    subtitle: deleteConfirmDialog.subtitle,\n    isOpen: deleteConfirmDialog.isOpen,\n    onClose: handleDeleteConfirmDialog,\n    onConfirm: deleteConfirmDialog.onConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }), __jsx(Notification, {\n    notify: notify,\n    setNotify: setNotify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), __jsx(UpdatePopup // title={updatePopupState.id}\n  , {\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, __jsx(UpdateRegion, {\n    id: updatePopupState.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(RegionList, \"ciufkzoH22eHk7XY58CwdYTfqEY=\", false, function () {\n  return [useApolloClient, useMutation];\n});\n\n_c = RegionList;\nexport default RegionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionList\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/RegionList.jsx"],"names":["React","useEffect","useState","MaterialTable","Paper","makeStyles","useApolloClient","useMutation","getAllRegionsQuery","tableIcons","AddPopup","UpdatePopup","ConfirmDialog","deleteRegionMutation","Notification","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","NewRegionMui","UpdateRegion","useStyles","stickyActionsColumn","backgroundColor","position","left","zIndex","stickyHeader","top","RegionList","client","isAddPopupOpen","setIsAddPopupOpen","isOpen","id","updatePopupState","setUpdatePopupState","message","type","notify","setNotify","title","subtitle","division","deleteConfirmDialog","setDeleteConfirmDialog","columns","field","data","state","setState","loadRegionData","query","error","regions","console","log","prev","loadDivisionsOfARegionData","getDivisionsOfARegionQuery","variables","updateCache","cache","payload","readQuery","writeQuery","filter","item","deleteRegion","handleAddPopupClose","handleUpdatePopupClose","handleDeleteConfirmDialog","update","loading","actions","icon","tooltip","isFreeAction","onClick","event","rowData","onConfirm","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\";\r\nimport AddPopup from \"../utils/AddPopup\";\r\nimport UpdatePopup from \"../utils/UpdatePopup\";\r\nimport ConfirmDialog from \"../utils/ConfirmDialog\";\r\nimport { deleteRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport NewRegionMui from \"./NewRegionMui\";\r\nimport UpdateRegion from \"./UpdateRegion\";\r\n\r\nconst useStyles = makeStyles({\r\n  stickyActionsColumn: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& td:first-child, th:first-child\": {\r\n          backgroundColor: \"#f5f5f5\",\r\n          position: \"sticky\",\r\n          left: 0,\r\n          zIndex: 10,\r\n        },\r\n        \"& th:first-child\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& th\": {\r\n          backgroundColor: \"#5aa193\",\r\n          position: \"sticky\",\r\n          top: \"4rem\",\r\n          zIndex: 10,\r\n        },\r\n        \"& th\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst RegionList = () => {\r\n  const client = useApolloClient();\r\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false);\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n    title: \"\",\r\n    subtitle: \"\",\r\n    division:[],\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n      },\r\n      { field: \"id\", title: \"ID\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  const loadRegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    {\r\n      error && <Error error={error} />;\r\n    }\r\n    const { regions } = { ...data };\r\n    console.log(regions);\r\n    console.log(regions);\r\n    setState((prev) => ({ ...prev, data: regions }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n\r\n  const loadDivisionsOfARegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getDivisionsOfARegionQuery,\r\n      variables: {\r\n        id: deleteConfirmDialog.id,\r\n      },\r\n    });\r\n    {\r\n      error && <Error error={error} />;\r\n    }\r\n    const { regions } = { ...data };\r\n    console.log(regions);\r\n    console.log(regions);\r\n    setState((prev) => ({ ...prev, data: regions }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDivisionsOfARegionData();\r\n  }, [deleteConfirmDialog.id]);\r\n\r\n  const updateCache = (cache, payload) => {\r\n    // manually update the cache so that the data are all the same\r\n    // 1. read the cache for the data we want\r\n    const data = cache && cache.readQuery({ query: getAllRegionsQuery });\r\n    cache &&\r\n      cache.writeQuery({\r\n        query: getAllRegionsQuery,\r\n        data: {\r\n          regions: data.regions.filter(\r\n            (item) => item.id !== payload.data.deleteRegion.id\r\n          ),\r\n        },\r\n      });\r\n  };\r\n  const handleAddPopupClose = () => {\r\n    setIsAddPopupOpen(false);\r\n  };\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const handleDeleteConfirmDialog = () => {\r\n    setDeleteConfirmDialog((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n  const [deleteRegion, { loading }] = useMutation(deleteRegionMutation, {\r\n    variables: { id: deleteConfirmDialog.id },\r\n    update: updateCache(),\r\n  });\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <AddIcon />,\r\n      tooltip: \"Ajouter Nouvelle Région\",\r\n      isFreeAction: true,\r\n      onClick: () => {\r\n        setIsAddPopupOpen(true);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Modifier Région\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n        // console.log(rowData.id);\r\n      },\r\n    },\r\n    {\r\n      icon: () => <DeleteIcon />,\r\n      tooltip: \"Supprimer région\",\r\n      onClick: (event, rowData) =>\r\n        setDeleteConfirmDialog({\r\n          id: rowData.id,\r\n          isOpen: true,\r\n          title: \"Etes-vous sur de suprimer cette inofrmation\",\r\n          subtitle:\r\n            \"Une fois supprimées, les informations seront perdues a jamais, Seules les regions sans departement pourront etre suprimees\",\r\n          onConfirm: () => {\r\n            rowData.id && deleteRegion(rowData.id);\r\n            setNotify({\r\n              isOpen: true,\r\n              message: \"Region Supprimee avec success\",\r\n              type: \"error\",\r\n            });\r\n          },\r\n          isOpen: false,\r\n        }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Liste de Régions\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={actions}\r\n        stickyHeader\r\n        style={{ position: \"sticky\", top: 0 }}\r\n        icons={tableIcons}\r\n      />\r\n      <AddPopup\r\n        title=\"Nouvelle Région\"\r\n        isOpen={isAddPopupOpen}\r\n        onClose={handleAddPopupClose}\r\n      >\r\n        <NewRegionMui />\r\n      </AddPopup>\r\n      <ConfirmDialog\r\n        title={deleteConfirmDialog.title}\r\n        subtitle={deleteConfirmDialog.subtitle}\r\n        isOpen={deleteConfirmDialog.isOpen}\r\n        onClose={handleDeleteConfirmDialog}\r\n        onConfirm={deleteConfirmDialog.onConfirm}\r\n      />\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n      <UpdatePopup\r\n        // title={updatePopupState.id}\r\n        isOpen={updatePopupState.isOpen}\r\n        onClose={handleUpdatePopupClose}\r\n      >\r\n        <UpdateRegion id={updatePopupState.id} />\r\n      </UpdatePopup>\r\n    </Paper>\r\n  );\r\n};\r\nexport default RegionList;\r\n"]},"metadata":{},"sourceType":"module"}