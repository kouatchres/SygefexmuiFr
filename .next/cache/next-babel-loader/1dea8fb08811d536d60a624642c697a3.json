{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterRegistrationDetails.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../../utils/icons/tableIcons\";\nimport ConfirmDialog from \"../../utils/ConfirmDialog\";\nimport AddPopup from \"../../utils/AddPopup\";\nimport UpdatePopup from \"../../utils/UpdatePopup\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Edit as EditIcon } from \"@material-ui/icons\";\nimport { Formik, Form } from \"formik\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles({\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"50%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  partTwo: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr 1fr \"\n  },\n  picStyled: {\n    // paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\",\n    borderRadius: \"0.5rem\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"50%\"\n  }\n});\n\nconst CenterRegistrationDetails = ({\n  id\n}) => {\n  const client = useApolloClient();\n  const classes = useStyles();\n  const {\n    0: updatePopupState,\n    1: setUpdatePopupState\n  } = useState({\n    isOpen: false,\n    id: \"\"\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"specialty.specialtyCode\",\n      title: \"Serie\",\n      options: {\n        width: 10,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"candidate.cand1stName\",\n      title: \"Nom\",\n      options: {\n        width: 50,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"candidate.cand2ndName\",\n      title: \"Prenom\",\n      options: {\n        width: 50,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"candidate.cand3rdName\",\n      title: \"Autres\",\n      options: {\n        width: 50,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"candidate.gender\",\n      title: \"Sexe\",\n      options: {\n        width: 10,\n        headerNoWrap: true\n      }\n    }, {\n      field: \"candRegistrationNumber\",\n      title: \"No Inscription\",\n      options: {\n        width: 20,\n        headerNoWrap: true\n      }\n    }],\n    center: \"\",\n    exam: \"\",\n    session: \"\",\n    registration: []\n  });\n  const initialValues = {};\n\n  const loadCenterRegistrationInfo = async () => {\n    const {\n      data\n    } = await client.query({\n      query: centerExamSessionForResultsQuery,\n      variables: {\n        id\n      }\n    });\n    const getCenterExamSession = data.centerExamSession;\n    const {\n      registration,\n      center,\n      examSession\n    } = getCenterExamSession;\n\n    const {\n      exam,\n      session\n    } = _objectSpread({}, examSession);\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      center,\n      registration,\n      exam,\n      session\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterRegistrationInfo();\n  }, []);\n  const {\n    center,\n    session,\n    exam,\n    registration\n  } = state;\n\n  const handleUpdatePopupClose = () => {\n    setUpdatePopupState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isOpen: false\n    }));\n  };\n\n  const actions = [{\n    icon: () => __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }),\n    tooltip: \"Voir resultat detaillÃ©\",\n    onClick: (event, rowData) => {\n      setUpdatePopupState({\n        isOpen: true,\n        id: rowData.id\n      });\n    }\n  }];\n  console.log(state.registration);\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(\"div\", {\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.pageStyled,\n    elevation: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    className: classes.centerAll,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.centerAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    className: classes.titleStyled,\n    color: \"primary\",\n    gutterBottom: true,\n    variant: \"body1\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Resultats  Du: \", exam && exam.examName, \", Session:\", session && session.sessionName, \", centre:\", center && center.centerCode))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, __jsx(MaterialTable, {\n    className: classes.head,\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#829079\",\n          borderTopRightRadius: \"0.5rem\",\n          borderTopLeftRadius: \"0.5rem\",\n          color: \"#ede6b9\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, __jsx(MTableToolbar, _extends({\n        style: {\n          // textColor: \"#000\",\n          textColor: \"#fff\"\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 27\n        }\n      })))\n    },\n    icons: tableIcons,\n    title: \"Resultats detaill\\xE9s des Candidats.................. .................                           \",\n    columns: state.columns,\n    data: state.registration,\n    options: {\n      actionsColumnIndex: -1,\n      grouping: true,\n      paging: true,\n      pageSize: 50,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [25, 50, 75, 100, 150],\n      // rows selection options\n      headerStyle: {\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        // backgroundColor: \"#abb\",\n        color: \"#ede6b9\",\n        backgroundColor: \"#b9925e\",\n        maxHeight: \"0.5rem !important\"\n      },\n      rowStyle: {\n        color: \"#000\"\n      }\n    },\n    actions: actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }), __jsx(UpdatePopup, {\n    title: updatePopupState.id,\n    isOpen: updatePopupState.isOpen,\n    onClose: handleUpdatePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default CenterRegistrationDetails;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterRegistrationDetails.jsx"],"names":["React","useState","useEffect","centerExamSessionForResultsQuery","tableIcons","ConfirmDialog","AddPopup","UpdatePopup","MaterialTable","MTableToolbar","Edit","EditIcon","Formik","Form","Grid","Typography","Paper","makeStyles","useApolloClient","useStyles","divStyled","display","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","partTwo","gridTemplateRows","picStyled","width","borderRadius","centerAll","CenterRegistrationDetails","id","client","classes","updatePopupState","setUpdatePopupState","isOpen","state","setState","columns","field","title","options","headerNoWrap","center","exam","session","registration","initialValues","loadCenterRegistrationInfo","data","query","variables","getCenterExamSession","centerExamSession","examSession","prev","handleUpdatePopupClose","actions","icon","tooltip","onClick","event","rowData","console","log","values","isSubmitting","examName","sessionName","centerCode","head","Toolbar","props","backgroundColor","borderTopRightRadius","borderTopLeftRadius","color","textColor","actionsColumnIndex","grouping","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","headerStyle","paddingTop","paddingBottom","maxHeight","rowStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { centerExamSessionForResultsQuery } from \"../../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../../utils/icons/tableIcons\";\r\nimport ConfirmDialog from \"../../utils/ConfirmDialog\";\r\nimport AddPopup from \"../../utils/AddPopup\";\r\nimport UpdatePopup from \"../../utils/UpdatePopup\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\n\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\n\r\nconst useStyles = makeStyles({\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"50%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  partTwo: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 1fr \",\r\n  },\r\n\r\n  picStyled: {\r\n    // paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"50%\",\r\n  },\r\n});\r\n\r\nconst CenterRegistrationDetails = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [updatePopupState, setUpdatePopupState] = useState({\r\n    isOpen: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"specialty.specialtyCode\",\r\n        title: \"Serie\",\r\n        options: {\r\n          width: 10,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n      {\r\n        field: \"candidate.cand1stName\",\r\n        title: \"Nom\",\r\n        options: {\r\n          width: 50,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n      {\r\n        field: \"candidate.cand2ndName\",\r\n        title: \"Prenom\",\r\n        options: {\r\n          width: 50,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n      {\r\n        field: \"candidate.cand3rdName\",\r\n        title: \"Autres\",\r\n        options: {\r\n          width: 50,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"candidate.gender\",\r\n        title: \"Sexe\",\r\n        options: {\r\n          width: 10,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"candRegistrationNumber\",\r\n        title: \"No Inscription\",\r\n        options: {\r\n          width: 20,\r\n          headerNoWrap: true,\r\n        },\r\n      },\r\n    ],\r\n    center: \"\",\r\n    exam: \"\",\r\n    session: \"\",\r\n    registration: [],\r\n  });\r\n\r\n  const initialValues = {};\r\n\r\n  const loadCenterRegistrationInfo = async () => {\r\n    const { data } = await client.query({\r\n      query: centerExamSessionForResultsQuery,\r\n      variables: { id },\r\n    });\r\n\r\n    const getCenterExamSession = data.centerExamSession;\r\n    const { registration, center, examSession } = getCenterExamSession;\r\n    const { exam, session } = { ...examSession };\r\n\r\n    setState((prev) => ({ ...prev, center, registration, exam, session }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterRegistrationInfo();\r\n  }, []);\r\n  const { center, session, exam, registration } = state;\r\n\r\n  const handleUpdatePopupClose = () => {\r\n    setUpdatePopupState((prev) => ({\r\n      ...prev,\r\n      isOpen: false,\r\n    }));\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      icon: () => <EditIcon />,\r\n      tooltip: \"Voir resultat detaillÃ©\",\r\n      onClick: (event, rowData) => {\r\n        setUpdatePopupState({ isOpen: true, id: rowData.id });\r\n      },\r\n    },\r\n  ];\r\n  console.log(state.registration);\r\n  return (\r\n    <Formik initialValues={initialValues}>\r\n      {({ values, isSubmitting }) => (\r\n        <div className={classes.centerAll}>\r\n          <Paper className={classes.pageStyled} elevation={13}>\r\n            <Form aria-busy={isSubmitting}>\r\n              <Grid className={classes.centerAll} container>\r\n                <Grid container className={classes.centerAll}>\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={classes.titleStyled}\r\n                      color=\"primary\"\r\n                      gutterBottom\r\n                      variant=\"body1\"\r\n                      component=\"h6\"\r\n                    >\r\n                      Resultats  Du: {exam && exam.examName}, Session:\r\n                      {session && session.sessionName}, centre:\r\n                      {center && center.centerCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <div>\r\n                  <MaterialTable\r\n                    className={classes.head}\r\n                    components={{\r\n                      Toolbar: (props) => (\r\n                        <div\r\n                          style={{\r\n                            backgroundColor: \"#829079\",\r\n                            borderTopRightRadius: \"0.5rem\",\r\n                            borderTopLeftRadius: \"0.5rem\",\r\n                            color: \"#ede6b9\",\r\n                          }}\r\n                        >\r\n                          <MTableToolbar\r\n                            style={{\r\n                              // textColor: \"#000\",\r\n                              textColor: \"#fff\",\r\n                            }}\r\n                            {...props}\r\n                          />\r\n                        </div>\r\n                      ),\r\n                    }}\r\n                    icons={tableIcons}\r\n                    title=\"Resultats detaillÃ©s des Candidats.................. .................                           \"\r\n                    columns={state.columns}\r\n                    data={state.registration}\r\n                    options={{\r\n                      actionsColumnIndex: -1,\r\n                      grouping: true,\r\n                      paging: true,\r\n                      pageSize: 50, // make initial page size\r\n                      emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n                      pageSizeOptions: [25, 50, 75, 100, 150], // rows selection options\r\n                      headerStyle: {\r\n                        paddingTop: \"0.5rem\",\r\n                        paddingBottom: \"0.5rem\",\r\n                        // backgroundColor: \"#abb\",\r\n                        color: \"#ede6b9\",\r\n                        backgroundColor: \"#b9925e\",\r\n                        maxHeight: \"0.5rem !important\",\r\n                      },\r\n                      rowStyle: {\r\n                        color: \"#000\",\r\n                      },\r\n                    }}\r\n                    actions={actions}\r\n                  />\r\n\r\n                  <UpdatePopup\r\n                    title={updatePopupState.id}\r\n                    isOpen={updatePopupState.isOpen}\r\n                    onClose={handleUpdatePopupClose}\r\n                  ></UpdatePopup>\r\n                </div>\r\n              </Grid>\r\n            </Form>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CenterRegistrationDetails;\r\n"]},"metadata":{},"sourceType":"module"}