{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\attendance\\\\Attendance.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\nimport { useRouter } from \"next/router\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllEducationTypesQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSpecialtiesOfACenterExamSessionQuery, getAllSubjectSpecialtiesOfASpecialtyQuery, getRegisteredCandidatesPerSpecialty, getSingleCenterQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { getObjectFromID, removeTypename, getSpecialtyID, getSelectedObject, candExamSessionCode } from \"../queries&Mutations&Functions/Functions\";\nimport useForm from \"../utils/useForm\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    maxWidth: \"60%\" // backgroundColor: \"#c89666\",\n\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    // minWidth: \"30vw\",\n    minWidth: \"40%\" // maxWidth: \"100vw\",\n\n  }\n});\nconst validationSchema = Yup.object().shape({// examID: Yup.string().required(\"Choissir l'examen\"),\n  // sessionID: Yup.string().required(\"Choissir la session\"),\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\n});\n\nconst ExamRegistration = () => {\n  const classes = useStyles();\n  const router = useRouter();\n  const client = useApolloClient();\n  const initialValues = {\n    centerNumber: \"\" // examID: \"\",\n    // sessionID: \",\n\n  };\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\n    centerNumber: \"\",\n    candCode: \"\",\n    examID: \"\",\n    edcuTypeID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    educTypes: [],\n    specialties: [],\n    centerNumber: \"\",\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\",\n    centerExamSessionSpecialty: {}\n  });\n  const {\n    centerNumber,\n    examID,\n    sessionID,\n    educTypeID,\n    exams,\n    sessions,\n    educTypes,\n    specialties,\n    centerByNumber,\n    examSessions,\n    centerExamSessions,\n    centerExamSessionSpecialty\n  } = state;\n\n  const makeCenterVariableObject = centerCodeValue => {\n    const storedCenter = {\n      centerNumber: `${centerCodeValue}`\n    };\n    return storedCenter;\n  };\n\n  const makeCandVariableObject = candCodeValue => {\n    const storedCandidate = {\n      candCode: `${candCodeValue}`\n    };\n    return storedCandidate;\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState({\n      [name]: val\n    });\n  };\n\n  const candRegistrationNumber = (centerCode, exam, session) => {\n    return `${centerCode + exam + session}`;\n  };\n\n  const loadEducTypeData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllEducationTypesQuery\n    });\n    const getEducationTypes = data && data.educationTypes;\n    const refinedEducTypes = getEducationTypes && removeTypename(getEducationTypes);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      educTypes: refinedEducTypes\n    }));\n  };\n\n  const getEducTypesOptions = educTypes && educTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n\n  const loadExamData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllExamsQuery\n    });\n    const getExams = data && data.exams;\n    console.log(getExams);\n    const refinedExams = getExams && removeTypename(getExams);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      exams: refinedExams\n    }));\n  };\n\n  const removeExamName = exams && exams.map((_ref) => {\n    let {\n      examName\n    } = _ref,\n        others = _objectWithoutProperties(_ref, [\"examName\"]);\n\n    return others;\n  });\n\n  const getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  const getExamsOptions = exams && exams.map(item => ({\n    value: item.id,\n    label: item.examName\n  }));\n\n  const loadSessionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllSessionsQuery\n    });\n    const getSessions = data && data.sessions;\n    const refinedSessions = getSessions && removeTypename(getSessions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sessions: refinedSessions\n    }));\n  };\n\n  console.dir(state);\n\n  const getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  const getSessionsOptions = sessions && sessions.map(item => ({\n    value: item.id,\n    label: item.sessionName\n  }));\n  useEffect(() => {\n    loadExamData();\n    loadEducTypeData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  const loadExamSessionData = async () => {\n    console.dir(\"running the exam session query\");\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !examID || !sessionID,\n      query: getExamSessionQuery,\n      variables: {\n        exam: examID && getExamName,\n        session: sessionID && getSessionName\n      }\n    });\n    console.log(data);\n    const getExamSessions = data && data.examSessions;\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\n    const reducedES = refinedES && refinedES[0];\n    console.log(reducedES);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      examSessions: reducedES\n    }));\n  };\n\n  console.dir(state);\n  useEffect(() => {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  const loadCenterData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      skip: !centerNumber,\n      query: getSingleCenterQuery,\n      variables: {\n        centerNumber: centerNumber\n      }\n    });\n\n    const {\n      centerByNumber\n    } = _objectSpread({}, data);\n\n    const newCenterByNumber = removeTypename(centerByNumber);\n    console.log(newCenterByNumber);\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      centerByNumber: newCenterByNumber\n    }));\n  };\n\n  useEffect(() => {\n    loadCenterData();\n  }, [centerNumber]);\n\n  const loadCESData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getSingleCenterExamSessionQuery,\n      variables: {\n        examSession: examSessions && examSessions,\n        center: centerByNumber && centerByNumber\n      }\n    });\n    console.log(data);\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n    console.log(getCenterExamSessionsByCode);\n    const refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      centerExamSessions: refinedCenterExamSessions\n    }));\n  };\n\n  useEffect(() => {\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  const getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID); // const {\n  //   data: dataSpecialtyCES,\n  //   loading: loadingSpecialtyCES,\n  //   error: errSpecialtyCES,\n  // } = useQuery(getAllSpecialtiesOfACenterExamSessionQuery, {\n  //   variables: getCESID,\n  // });\n  // console.dir({ dataSpecialtyCES });\n  // const getCenterExamSession =\n  //   dataSpecialtyCES && dataSpecialtyCES.centerExamSession;\n  // const { centerExamSessionSpecialty } = { ...getCenterExamSession };\n  // const newSpecialty =\n  //   centerExamSessionSpecialty &&\n  //   centerExamSessionSpecialty.map((item) => item);\n  //   const refinedCESS = newSpecialty && removeTypename(newSpecialty);\n\n  const getCESSSubjIDs = state.centerExamSessionSpecialtyID && state.centerExamSessionSpecialtyID.split(\"/\");\n  console.dir({\n    getCESSSubjIDs\n  });\n  const {\n    data: dataRegistration,\n    loading: loadingReg,\n    error: errReg\n  } = useQuery(getRegisteredCandidatesPerSpecialty, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[0],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[0]\n    }\n  });\n\n  const {\n    centerExamSessionSpecialty: CESS\n  } = _objectSpread({}, dataRegistration);\n\n  const {\n    registration\n  } = _objectSpread({}, CESS); // const getCandOptions =\n  // registration &&\n  //   registration.map((item) => (\n  //       {item.candidate.cand1stName.concat(\n  //         item.candidate.cand2ndName,\n  //         item.candRegistrationNumber\n  //       )}\n  //   ))\n\n\n  const {\n    data: dataSubjSpecialty,\n    loading: loadingSubjSpecialty,\n    error: errSubjSpecialty\n  } = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\n    skip: getCESSSubjIDs && !getCESSSubjIDs[1],\n    variables: {\n      id: getCESSSubjIDs && getCESSSubjIDs[1]\n    }\n  });\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\n\n  const {\n    subjectSpecialty\n  } = _objectSpread({}, getSubjSpecialty);\n\n  const refinedSubjectSpecialty = subjectSpecialty && removeTypename(subjectSpecialty);\n  const getSubjectSpecialtyOptions = refinedSubjectSpecialty && refinedSubjectSpecialty.map(item => {\n    __jsx(MenuItem, {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }\n    }, item.item.subject.subjectName);\n  });\n  const [createAttendance, {\n    loadingMut,\n    error\n  }] = useMutation(createAttendanceMutation); // const newSpecialty = specialties && specialties.map((item) => item);\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\n  // console.log(refinedSpecialty);\n  // const getSpecialtyOptions =\n  //   refinedSpecialty &&\n  //   refinedSpecialty.map((item) => ({\n  //     id: item.specialty.id,\n  //     value: item.id,\n  //     label: item.specialty.specialtyName,\n  //   }));\n  // console.log({ state });\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\n  // const [createAttendance, { loadingMut, error }] = useMutation(\n  //   createAttendanceMutation\n  // );\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await createAttendance({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          candExamSecretCode: values.candExamSecretCode.value,\n          centerExamSessionSpecialty: getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\n          subjectSpecialty: refinedSubjectSpecialty && getObjectFromID(values.subjectSpecialty.value)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 34\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }, \"Pr\\xE9sence des candidats \\xE0 l'Ecrit\"))), __jsx(Grid, {\n      spacing: 10,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || \"\",\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      label: \"La session\",\n      component: Select,\n      placeholder: \"la session\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 37\n        }\n      }),\n      options: getSessionsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      onChange: event => {\n        handleSelectChange(event, \"educTypeID\");\n      },\n      name: \"educTypeID\",\n      label: \"Type d'enseignement\",\n      component: Select,\n      placeholder: \"Type d'enseignement\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"educTypeID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 37\n        }\n      }),\n      options: getEducTypesOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"examID\",\n      label: \"L'Examen\",\n      component: Select,\n      placeholder: \"l'Examen\",\n      onChange: event => {\n        handleSelectChange(event, \"examID\");\n      },\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 37\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      name: \"centerExamSessionSpecialty\",\n      label: \"La Sp\\xE9cialit\\xE9\",\n      onChange: event => {\n        handleSelectChange(event, \"centerExamSessionSpecialty\");\n      },\n      component: Select,\n      placeholder: \"La Sp\\xE9cialit\\xE9\",\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"centerExamSessionSpecialty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 27\n        }\n      }),\n      options: getExamsOptions,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      xs: 12,\n      sm: 6,\n      item: true,\n      className: classes.centerAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      component: Select,\n      label: \"Candidat\",\n      fullWidth: true,\n      variant: \"outlined\",\n      options: getExamsOptions,\n      disabled: isSubmitting,\n      helperText: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helperText: __jsx(ErrorMessage, {\n        name: \"collected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"collected\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Collecte de materiels\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      helperText: __jsx(ErrorMessage, {\n        name: \"handin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 37\n        }\n      }),\n      required: true,\n      name: \"handin\",\n      component: FRadioGroup,\n      variant: \"outlined\",\n      label: \"Remise de copies\",\n      options: [{\n        value: \"O\",\n        label: \"Oui\"\n      }, {\n        value: \"N\",\n        label: \"Non\"\n      }],\n      groupProps: {\n        row: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 23\n      }\n    }, isSubmitting && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 42\n      }\n    }), isSubmitting || loadingMut ? \"Inscription en cours\" : \"Inscrire Candidat\")))))));\n  });\n};\n\nexport default ExamRegistration; // // const loadCESS = async () => {\n// //   const { error, data } = await client.query({\n// //     query: getAllSpecialtiesOfACenterExamSessionQuery,\n// //     variables: getCESID,\n// //   });\n// //   console.log(data);\n// //   const getCenterExamSession = data && data.centerExamSession;\n// //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\n// //   console.log({ centerExamSessionSpecialty });\n// //   setState((prev) => ({\n// //     ...prev,\n// //     specialties: centerExamSessionSpecialty,\n// //   }));\n// // };\n// // useEffect(() => {\n// //   loadCESS();\n// // }, [getCESID, centerNumber]);\n// mkjjj","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/attendance/Attendance.jsx"],"names":["React","useEffect","Error","Yup","FRadioGroup","useRouter","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useApolloClient","useMutation","useQuery","createAttendanceMutation","getExamSessionQuery","getAllExamsQuery","getAllEducationTypesQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSpecialtiesOfACenterExamSessionQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","getRegisteredCandidatesPerSpecialty","getSingleCenterQuery","getObjectFromID","removeTypename","getSpecialtyID","getSelectedObject","candExamSessionCode","useForm","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","maxWidth","titleStyled","centerAll","minWidth","validationSchema","object","shape","ExamRegistration","classes","router","client","initialValues","centerNumber","state","setState","handleSelectChange","handleInputChange","candCode","examID","edcuTypeID","sessionID","exams","sessions","educTypes","specialties","centerByNumber","examSessions","centerExamSessions","centerExamSessionSpecialty","educTypeID","makeCenterVariableObject","centerCodeValue","storedCenter","makeCandVariableObject","candCodeValue","storedCandidate","handleChange","e","name","value","type","target","val","parseInt","candRegistrationNumber","centerCode","exam","session","loadEducTypeData","error","data","query","getEducationTypes","educationTypes","refinedEducTypes","prev","getEducTypesOptions","map","item","id","label","educationTypeName","loadExamData","getExams","console","log","refinedExams","removeExamName","examName","others","getExamName","getExamsOptions","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","getCESSSubjIDs","centerExamSessionSpecialtyID","split","dataRegistration","loading","loadingReg","errReg","CESS","registration","dataSubjSpecialty","loadingSubjSpecialty","errSubjSpecialty","getSubjSpecialty","specialty","subjectSpecialty","refinedSubjectSpecialty","getSubjectSpecialtyOptions","subject","subjectName","createAttendance","loadingMut","values","setSubmitting","resetForm","res","candExamSecretCode","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event","row"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport FRadioGroup from \"../muiComponents/controls/SygefexMuiRadioGroup\";\r\nimport { useRouter } from \"next/router\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport {\r\n  getObjectFromID,\r\n  removeTypename,\r\n  getSpecialtyID,\r\n  getSelectedObject,\r\n  candExamSessionCode,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport useForm from \"../utils/useForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    // fontSize: 100,\r\n  },\r\n\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    maxWidth: \"60%\",\r\n    // backgroundColor: \"#c89666\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    // minWidth: \"30vw\",\r\n    minWidth: \"40%\",\r\n    // maxWidth: \"100vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // examID: Yup.string().required(\"Choissir l'examen\"),\r\n  // sessionID: Yup.string().required(\"Choissir la session\"),\r\n  // // centerName: Yup.string().required(\"Libellé Centre Obligatoire\"),\r\n  // centerNumber: Yup.string().required(\"Numéro de centre Obligatoire\"),\r\n});\r\n\r\nconst ExamRegistration = () => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const client = useApolloClient();\r\n\r\n  const initialValues = {\r\n    centerNumber: \"\",\r\n    // examID: \"\",\r\n    // sessionID: \",\r\n  };\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    centerNumber: \"\",\r\n    candCode: \"\",\r\n    examID: \"\",\r\n    edcuTypeID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    educTypes: [],\r\n    specialties: [],\r\n    centerNumber: \"\",\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    centerExamSessionSpecialty: {},\r\n  });\r\n  const {\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    educTypeID,\r\n    exams,\r\n    sessions,\r\n    educTypes,\r\n    specialties,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    centerExamSessionSpecialty,\r\n  } = state;\r\n  const makeCenterVariableObject = (centerCodeValue) => {\r\n    const storedCenter = {\r\n      centerNumber: `${centerCodeValue}`,\r\n    };\r\n    return storedCenter;\r\n  };\r\n  const makeCandVariableObject = (candCodeValue) => {\r\n    const storedCandidate = {\r\n      candCode: `${candCodeValue}`,\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const candRegistrationNumber = (centerCode, exam, session) => {\r\n    return `${centerCode + exam + session}`;\r\n  };\r\n\r\n  const loadEducTypeData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllEducationTypesQuery,\r\n    });\r\n\r\n    const getEducationTypes = data && data.educationTypes;\r\n    const refinedEducTypes =\r\n      getEducationTypes && removeTypename(getEducationTypes);\r\n    setState((prev) => ({ ...prev, educTypes: refinedEducTypes }));\r\n  };\r\n\r\n  const getEducTypesOptions =\r\n    educTypes &&\r\n    educTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const loadExamData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadEducTypeData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running the exam session query\");\r\n    const { error, data } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { error, data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  // const {\r\n  //   data: dataSpecialtyCES,\r\n  //   loading: loadingSpecialtyCES,\r\n  //   error: errSpecialtyCES,\r\n  // } = useQuery(getAllSpecialtiesOfACenterExamSessionQuery, {\r\n  //   variables: getCESID,\r\n  // });\r\n  // console.dir({ dataSpecialtyCES });\r\n  // const getCenterExamSession =\r\n  //   dataSpecialtyCES && dataSpecialtyCES.centerExamSession;\r\n  // const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n\r\n  // const newSpecialty =\r\n  //   centerExamSessionSpecialty &&\r\n  //   centerExamSessionSpecialty.map((item) => item);\r\n  //   const refinedCESS = newSpecialty && removeTypename(newSpecialty);\r\n\r\n  const getCESSSubjIDs =\r\n    state.centerExamSessionSpecialtyID &&\r\n    state.centerExamSessionSpecialtyID.split(\"/\");\r\n  console.dir({ getCESSSubjIDs });\r\n  const {\r\n    data: dataRegistration,\r\n    loading: loadingReg,\r\n    error: errReg,\r\n  } = useQuery(getRegisteredCandidatesPerSpecialty, {\r\n    skip: getCESSSubjIDs && !getCESSSubjIDs[0],\r\n    variables: { id: getCESSSubjIDs && getCESSSubjIDs[0] },\r\n  });\r\n\r\n  const { centerExamSessionSpecialty: CESS } = { ...dataRegistration };\r\n  const { registration } = { ...CESS };\r\n  // const getCandOptions =\r\n  // registration &&\r\n  //   registration.map((item) => (\r\n  //       {item.candidate.cand1stName.concat(\r\n  //         item.candidate.cand2ndName,\r\n  //         item.candRegistrationNumber\r\n  //       )}\r\n  //   ))\r\n\r\n  const {\r\n    data: dataSubjSpecialty,\r\n    loading: loadingSubjSpecialty,\r\n    error: errSubjSpecialty,\r\n  } = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\r\n    skip: getCESSSubjIDs && !getCESSSubjIDs[1],\r\n    variables: { id: getCESSSubjIDs && getCESSSubjIDs[1] },\r\n  });\r\n\r\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n  const { subjectSpecialty } = { ...getSubjSpecialty };\r\n\r\n  const refinedSubjectSpecialty =\r\n    subjectSpecialty && removeTypename(subjectSpecialty);\r\n  const getSubjectSpecialtyOptions =\r\n    refinedSubjectSpecialty &&\r\n    refinedSubjectSpecialty.map((item) => {\r\n      <MenuItem key={item.id}>{item.item.subject.subjectName}</MenuItem>;\r\n    });\r\n\r\n  const [createAttendance, { loadingMut, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n\r\n  // const newSpecialty = specialties && specialties.map((item) => item);\r\n  // const refinedSpecialty = newSpecialty && removeTypename(newSpecialty);\r\n  // console.log(refinedSpecialty);\r\n  // const getSpecialtyOptions =\r\n  //   refinedSpecialty &&\r\n  //   refinedSpecialty.map((item) => ({\r\n  //     id: item.specialty.id,\r\n  //     value: item.id,\r\n  //     label: item.specialty.specialtyName,\r\n  //   }));\r\n  // console.log({ state });\r\n  // console.log(getSpecialtyID(specialties, centerExamSessionSpecialty));\r\n  // const [createAttendance, { loadingMut, error }] = useMutation(\r\n  //   createAttendanceMutation\r\n  // );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode.value,\r\n            centerExamSessionSpecialty:\r\n              getCESSSubjIDs && getObjectFromID(getCESSSubjIDs[0]),\r\n            subjectSpecialty:\r\n              refinedSubjectSpecialty &&\r\n              getObjectFromID(values.subjectSpecialty.value),\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={13}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {isSubmitting && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Error error={error} />\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Présence des candidats à l'Ecrit\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid spacing={10} container>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || \"\"}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        label=\"La session\"\r\n                        component={Select}\r\n                        placeholder=\"la session\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"sessionID\" />}\r\n                        options={getSessionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"educTypeID\");\r\n                        }}\r\n                        name=\"educTypeID\"\r\n                        label=\"Type d'enseignement\"\r\n                        component={Select}\r\n                        placeholder=\"Type d'enseignement\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"educTypeID\" />}\r\n                        options={getEducTypesOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"examID\"\r\n                        label=\"L'Examen\"\r\n                        component={Select}\r\n                        placeholder=\"l'Examen\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"examID\" />}\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"centerExamSessionSpecialty\"\r\n                        label=\"La Spécialité\"\r\n                        onChange={(event) => {\r\n                          handleSelectChange(\r\n                            event,\r\n                            \"centerExamSessionSpecialty\"\r\n                          );\r\n                        }}\r\n                        component={Select}\r\n                        placeholder=\"La Spécialité\"\r\n                        disabled={isSubmitting}\r\n                        helperText={\r\n                          <ErrorMessage name=\"centerExamSessionSpecialty\" />\r\n                        }\r\n                        options={getExamsOptions}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item className={classes.centerAll}>\r\n                      <Field\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        component={Select}\r\n                        label=\"Candidat\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        options={getExamsOptions}\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        helperText={<ErrorMessage name=\"collected\" />}\r\n                        required\r\n                        name=\"collected\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Collecte de materiels\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n                      <Field\r\n                        helperText={<ErrorMessage name=\"handin\" />}\r\n                        required\r\n                        name=\"handin\"\r\n                        component={FRadioGroup}\r\n                        variant=\"outlined\"\r\n                        label=\"Remise de copies\"\r\n                        options={[\r\n                          { value: \"O\", label: \"Oui\" },\r\n                          { value: \"N\", label: \"Non\" },\r\n                        ]}\r\n                        groupProps={{ row: true }}\r\n                      />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {isSubmitting && <CircularProgress />}\r\n                        {isSubmitting || loadingMut\r\n                          ? \"Inscription en cours\"\r\n                          : \"Inscrire Candidat\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default ExamRegistration;\r\n\r\n// // const loadCESS = async () => {\r\n// //   const { error, data } = await client.query({\r\n// //     query: getAllSpecialtiesOfACenterExamSessionQuery,\r\n// //     variables: getCESID,\r\n// //   });\r\n\r\n// //   console.log(data);\r\n// //   const getCenterExamSession = data && data.centerExamSession;\r\n// //   const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n// //   console.log({ centerExamSessionSpecialty });\r\n// //   setState((prev) => ({\r\n// //     ...prev,\r\n// //     specialties: centerExamSessionSpecialty,\r\n// //   }));\r\n// // };\r\n\r\n// // useEffect(() => {\r\n// //   loadCESS();\r\n// // }, [getCESID, centerNumber]);\r\n// mkjjj\r\n"]},"metadata":{},"sourceType":"module"}