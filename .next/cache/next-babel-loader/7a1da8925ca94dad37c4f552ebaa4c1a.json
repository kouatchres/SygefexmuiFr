{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\RegionList.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport { Paper } from \"@material-ui/core\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport tableIcons from \"../utils/icons/tableIcons\"; // const tableIcons = {\n//   Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n//   Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n//   Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//   Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n//   DetailPanel: forwardRef((props, ref) => (\n//     <ChevronRight {...props} ref={ref} />\n//   )),\n//   Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n//   Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n//   Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n//   FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n//   LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n//   NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n//   PreviousPage: forwardRef((props, ref) => (\n//     <ChevronLeft {...props} ref={ref} />\n//   )),\n//   ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//   Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n//   SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n//   ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n//   ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n// };\n\nconst useStyles = makeStyles({\n  stickyActionsColumn: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& td:first-child, th:first-child\": {\n          backgroundColor: \"#f5f5f5\",\n          position: \"sticky\",\n          left: 0,\n          zIndex: 10\n        },\n        \"& th:first-child\": {\n          zIndex: 10\n        }\n      }\n    }\n  },\n  stickyHeader: {\n    \"& table:first-child\": {\n      \"& tr\": {\n        \"& th\": {\n          backgroundColor: \"#5aa193\",\n          position: \"sticky\",\n          top: \"4rem\",\n          zIndex: 10\n        },\n        \"& th\": {\n          zIndex: 10\n        }\n      }\n    }\n  }\n});\n\nconst RegionList = () => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: [{\n      field: \"regName\",\n      title: \"Region Name\"\n    }, {\n      field: \"regCode\",\n      title: \"Region Code\"\n    }, {\n      field: \"id\",\n      title: \"ID\"\n    }],\n    data: []\n  });\n\n  const loadRegionData = async () => {\n    const {\n      error,\n      data\n    } = await client.query({\n      query: getAllRegionsQuery\n    });\n    {\n      error && __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }\n      });\n    }\n\n    const {\n      regions\n    } = _objectSpread({}, data);\n\n    console.log(regions);\n    console.log(regions);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      data: regions\n    }));\n  };\n\n  useEffect(() => {\n    loadRegionData();\n  }, []);\n  console.dir(state.data);\n  return __jsx(Paper, {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.stickyHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(MaterialTable, {\n    icons: tableIcons,\n    title: \"\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      paging: true,\n      pageSize: 10,\n      // make initial page size\n      emptyRowsWhenPaging: false,\n      //to make page size fix in case of less data rows\n      pageSizeOptions: [5, 10, 20] // rows selection options\n\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 400);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data\n              });\n            });\n          }\n        }, 400);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 400);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RegionList;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/RegionList.jsx"],"names":["React","forwardRef","useEffect","useState","MaterialTable","AddBox","Paper","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","makeStyles","useApolloClient","getAllRegionsQuery","tableIcons","useStyles","stickyActionsColumn","backgroundColor","position","left","zIndex","stickyHeader","top","RegionList","classes","client","state","setState","columns","field","title","data","loadRegionData","error","query","regions","console","log","prev","dir","marginTop","paging","pageSize","emptyRowsWhenPaging","pageSizeOptions","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport tableIcons from \"../utils/icons/tableIcons\"\r\n\r\n// const tableIcons = {\r\n//   Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n//   Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n//   Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//   Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n//   DetailPanel: forwardRef((props, ref) => (\r\n//     <ChevronRight {...props} ref={ref} />\r\n//   )),\r\n//   Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n//   Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n//   Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n//   FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n//   LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n//   NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n//   PreviousPage: forwardRef((props, ref) => (\r\n//     <ChevronLeft {...props} ref={ref} />\r\n//   )),\r\n//   ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//   Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n//   SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n//   ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n//   ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n// };\r\n\r\nconst useStyles = makeStyles({\r\n  stickyActionsColumn: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& td:first-child, th:first-child\": {\r\n          backgroundColor: \"#f5f5f5\",\r\n          position: \"sticky\",\r\n          left: 0,\r\n          zIndex: 10,\r\n        },\r\n        \"& th:first-child\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    \"& table:first-child\": {\r\n      \"& tr\": {\r\n        \"& th\": {\r\n          backgroundColor: \"#5aa193\",\r\n          position: \"sticky\",\r\n          top: \"4rem\",\r\n          zIndex: 10,\r\n        },\r\n        \"& th\": {\r\n          zIndex: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst RegionList = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        field: \"regName\",\r\n        title: \"Region Name\",\r\n      },\r\n      {\r\n        field: \"regCode\",\r\n        title: \"Region Code\",\r\n      },\r\n      { field: \"id\", title: \"ID\" },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n\r\n  const loadRegionData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    {\r\n      error && <Error error={error} />;\r\n    }\r\n    const { regions } = { ...data };\r\n    console.log(regions);\r\n    console.log(regions);\r\n    setState((prev) => ({ ...prev, data: regions }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.dir(state.data);\r\n  return (\r\n    <Paper style={{ marginTop: \"2rem\" }}>\r\n      <div className={classes.stickyHeader}>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"\"\r\n          columns={state.columns}\r\n          data={state.data}\r\n          options={{\r\n            paging: true,\r\n            pageSize: 10, // make initial page size\r\n            emptyRowsWhenPaging: false, //to make page size fix in case of less data rows\r\n            pageSizeOptions: [5, 10, 20], // rows selection options\r\n          }}\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.push(newData);\r\n                    return {\r\n                      ...prevState,\r\n                      data,\r\n                    };\r\n                  });\r\n                }, 400);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  if (oldData) {\r\n                    setState((prevState) => {\r\n                      const data = [...prevState.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      return {\r\n                        ...prevState,\r\n                        data,\r\n                      };\r\n                    });\r\n                  }\r\n                }, 400);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data.splice(data.indexOf(oldData), 1);\r\n                    return {\r\n                      ...prevState,\r\n                      data,\r\n                    };\r\n                  });\r\n                }, 400);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default RegionList;\r\n"]},"metadata":{},"sourceType":"module"}