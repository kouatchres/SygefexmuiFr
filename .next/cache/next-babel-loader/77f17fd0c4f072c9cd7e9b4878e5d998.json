{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\score\\\\EnterNewMarks.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport useForm from \"../utils/useForm\";\nimport Notification from \"../utils/Notification\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { enterMarksMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getObjectFromID, compareValues, getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\nimport { registrationIDFromSecretCodeQuery, getAllSubjectSpecialtiesOfASpecialtyQuery } from \"../queries&Mutations&Functions/Queries\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"30%\"\n  },\n  listStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    paddingTop: \"0.1rem\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  allControls: {\n    display: \"grid\",\n    placeItems: \"center\",\n    paddingTop: \"0.2rem\",\n    border: \"0.05rem solid #1254ac\",\n    // width: \"20vw\",\n    borderRadius: \"0.5rem\" // marginTop: \"2rem\",\n\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  // candExamSecretCode: Yup.string().required(\"Code Secret candidat Obligatoire\"),\n  subjectSpecialty: Yup.string().required(\"Choix de la matière Obligatoire\"),\n  subjectAve: Yup.number().required(\"Note du candidat Obligatoire\").min(0, \"Pas de note négative\").max(20, \"Pas de note supérieure a 20\")\n});\n\nvar EnterNewMarks = function EnterNewMarks() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n\n  var _useForm = useForm({\n    specialty: {},\n    suspect: {},\n    subjectSpecialty: [],\n    candExamSecretCode: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 3),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2];\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var initialValues = {\n    subjectAve: \"\",\n    subjectSpecialty: \"\",\n    candExamSecretCode: \"\"\n  };\n  var specialty = state.specialty,\n      suspect = state.suspect,\n      subjectSpecialty = state.subjectSpecialty,\n      candExamSecretCode = state.candExamSecretCode;\n\n  var loadSpecialtyData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$client$query, error, data, loading, registrationID, _registrationID, specialty;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                skip: !candExamSecretCode,\n                query: registrationIDFromSecretCodeQuery,\n                variables: {\n                  candExamSecretCode: candExamSecretCode && candExamSecretCode\n                }\n              });\n\n            case 2:\n              _yield$client$query = _context.sent;\n              error = _yield$client$query.error;\n              data = _yield$client$query.data;\n              loading = _yield$client$query.loading;\n              registrationID = data && data.getRegistration;\n              _registrationID = _objectSpread({}, registrationID), specialty = _registrationID.specialty;\n              console.log(specialty);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  specialty: specialty\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadSpecialtyData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadSpecialtyData();\n  }, [candExamSecretCode]);\n  console.log(subjectSpecialty);\n\n  var loadSubjectSpecialtyData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$client$query2, error, dataSubjSpecialty, loading, getSubjSpecialty, _getSubjSpecialty, subjectSpecialty, suspects;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.query({\n                skip: !specialty,\n                query: getAllSubjectSpecialtiesOfASpecialtyQuery,\n                variables: {\n                  id: specialty && specialty.id\n                }\n              });\n\n            case 2:\n              _yield$client$query2 = _context2.sent;\n              error = _yield$client$query2.error;\n              dataSubjSpecialty = _yield$client$query2.data;\n              loading = _yield$client$query2.loading;\n              // console.log(dataSubjSpecialty);\n              getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\n              _getSubjSpecialty = _objectSpread({}, getSubjSpecialty), subjectSpecialty = _getSubjSpecialty.subjectSpecialty;\n              suspects = subjectSpecialty.map(function (item) {\n                return _objectSpread({\n                  suspectID: item.id\n                }, item.subject);\n              }); // console.log(subjectSpecialty);\n\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  subjectSpecialty: suspects\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadSubjectSpecialtyData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadSubjectSpecialtyData();\n  }, [specialty]);\n  var sortedSuspects = subjectSpecialty.sort(compareValues(\"subjectName\")); //  const sortedSuspects=subjectSpecialties.sort(compareValues(\"subjectName\",order: \"desc\"))\n\n  console.log(getSelectedObjectID(sortedSuspects, suspect)).subjectName, console.log({\n    suspect: suspect\n  });\n  var getSubjectsOptions = sortedSuspects && sortedSuspects.map(function (item) {\n    return {\n      value: item.suspectID,\n      label: item.subjectName\n    };\n  });\n\n  var _useMutation = useMutation(enterMarksMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      enterMarks = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _ref3) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setSubmitting = _ref3.setSubmitting, resetForm = _ref3.resetForm;\n                _context3.next = 3;\n                return enterMarks({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    subjectName: sortedSuspects && getSelectedObjectID(sortedSuspects, suspect).subjectName,\n                    subjectSpecialty: sortedSuspects && getObjectFromID(suspect),\n                    candExamSecretCode: candExamSecretCode && candExamSecretCode\n                  })\n                });\n\n              case 3:\n                res = _context3.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"Note enregistrée  avec success\",\n                    type: \"success\"\n                  });\n                  resetForm(true);\n                  setSubmitting(false);\n                }, 400);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, function (_ref5) {\n    var submitForm = _ref5.submitForm,\n        setFieldValue = _ref5.setFieldValue,\n        isSubmitting = _ref5.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }), __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }, \"Notes des Candidats\"))), __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, __jsx(Field, {\n      component: TextField,\n      fullWidth: true,\n      variant: \"outlined\",\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      value: candExamSecretCode || \"\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"candExamSecretCode\");\n      },\n      label: \"Anonymat du candidat\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"candExamSecretCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: Select,\n      variant: \"outlined\",\n      name: \"suspect\",\n      placeholder: \"mati\\xE8re\",\n      label: \"Mati\\xE8res\",\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"suspect\");\n      },\n      options: getSubjectsOptions,\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"suspect\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      component: TextField,\n      fullWidth: true,\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"subjectAve\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 37\n        }\n      }),\n      name: \"subjectAve\",\n      type: \"number\",\n      step: \"0.001\",\n      label: \"Note en la mati\\xE8re\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting || loading,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 55\n      }\n    }), isSubmitting ? \"Enregistrement en cours\" : \"Enregistrer Note\")))))));\n  });\n};\n\n_s(EnterNewMarks, \"DRoM7cWgC6DeK45QKxz6rh3Gez8=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useMutation];\n});\n\n_c = EnterNewMarks;\nexport default EnterNewMarks; // <SygefexMuiSelect\n// name=\"region\"\n// margin=\"normal\"\n// onChange={(value) =>\n//   setFieldValue(\"region\", value.target)\n// }\n// placeholder=\"la Région\"\n// disabled={isSubmitting}\n// >\n//   {regions &&\n//     regions.map((item) => (\n//       <MenuItem key={item.id} value={item.id}>\n//         {item.regName}\n//       </MenuItem>\n//     ))}\n// </Field>\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterNewMarks\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/score/EnterNewMarks.jsx"],"names":["React","useState","useEffect","Error","Yup","TextField","Select","ErrorMessage","Formik","Form","Field","useForm","Notification","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","useMutation","useApolloClient","makeStyles","enterMarksMutation","getObjectFromID","compareValues","getSelectedObject","registrationIDFromSecretCodeQuery","getAllSubjectSpecialtiesOfASpecialtyQuery","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","listStyled","listStyleType","margin","paddingTop","titleStyled","allControls","border","borderRadius","centerAll","validationSchema","object","shape","subjectSpecialty","string","required","subjectAve","number","min","max","EnterNewMarks","classes","client","specialty","suspect","candExamSecretCode","state","setState","handleSelectChange","isOpen","message","type","notify","setNotify","initialValues","loadSpecialtyData","query","skip","variables","error","data","loading","registrationID","getRegistration","console","log","prev","loadSubjectSpecialtyData","id","dataSubjSpecialty","getSubjSpecialty","suspects","map","item","suspectID","subject","sortedSuspects","sort","getSelectedObjectID","subjectName","getSubjectsOptions","value","label","enterMarks","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","submitForm","setFieldValue","isSubmitting","event"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport useForm from \"../utils/useForm\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {  useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { enterMarksMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getObjectFromID,compareValues,getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\r\n\r\nimport {\r\n  registrationIDFromSecretCodeQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30%\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // candExamSecretCode: Yup.string().required(\"Code Secret candidat Obligatoire\"),\r\n\r\n  subjectSpecialty: Yup.string().required(\"Choix de la matière Obligatoire\"),\r\n  subjectAve: Yup.number()\r\n    .required(\"Note du candidat Obligatoire\")\r\n    .min(0, \"Pas de note négative\")\r\n    .max(20, \"Pas de note supérieure a 20\"),\r\n});\r\n\r\nconst EnterNewMarks = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [state, setState, handleSelectChange] = useForm({\r\n    specialty: {},\r\n    suspect: {},\r\n    subjectSpecialty: [],\r\n    candExamSecretCode: \"\",\r\n  });\r\n\r\n  \r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const initialValues = {\r\n    subjectAve: \"\",\r\n    subjectSpecialty: \"\",\r\n    candExamSecretCode: \"\",\r\n  };\r\n  const { specialty,suspect, subjectSpecialty, candExamSecretCode } = state;\r\n\r\n  const loadSpecialtyData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      skip: !candExamSecretCode,\r\n      query: registrationIDFromSecretCodeQuery,\r\n      variables: {\r\n        candExamSecretCode: candExamSecretCode && candExamSecretCode,\r\n      },\r\n    });\r\n    const registrationID = data && data.getRegistration;\r\n    const { specialty } = { ...registrationID };\r\n    console.log(specialty);\r\n    setState((prev) => ({ ...prev, specialty }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    loadSpecialtyData();\r\n  }, [candExamSecretCode]);\r\n\r\n  console.log(subjectSpecialty);\r\n\r\n  const loadSubjectSpecialtyData = async () => {\r\n    const { error, data: dataSubjSpecialty, loading } = await client.query({\r\n      skip: !specialty,\r\n      query: getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n      variables: {\r\n        id: specialty && specialty.id,\r\n      },\r\n    });\r\n\r\n    // console.log(dataSubjSpecialty);\r\n    const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n    const { subjectSpecialty } = {\r\n      ...getSubjSpecialty,\r\n    };\r\n    \r\n  const suspects= subjectSpecialty.map((item)=>({\r\n     suspectID:item.id,\r\n     ...item.subject,\r\n\r\n  }))\r\n\r\n    // console.log(subjectSpecialty);\r\n    setState((prev) => ({ ...prev, subjectSpecialty:suspects }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubjectSpecialtyData();\r\n  }, [specialty]);\r\n\r\n const sortedSuspects=subjectSpecialty.sort(compareValues(\"subjectName\"))\r\n//  const sortedSuspects=subjectSpecialties.sort(compareValues(\"subjectName\",order: \"desc\"))\r\n              console.log(getSelectedObjectID(sortedSuspects,suspect)).subjectName,\r\n\r\nconsole.log({suspect})\r\n  const getSubjectsOptions =\r\n    sortedSuspects &&\r\n    sortedSuspects.map((item) => ({\r\n      value: item.suspectID,\r\n      label: item.subjectName,\r\n    }));\r\n\r\n  const [enterMarks, { loading, error }] = useMutation(enterMarksMutation);\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await enterMarks({\r\n          variables: {\r\n            ...values,\r\n            subjectName:\r\n              sortedSuspects && (getSelectedObjectID(sortedSuspects,suspect)).subjectName,\r\n            subjectSpecialty:\r\n              sortedSuspects && getObjectFromID(suspect),\r\n            candExamSecretCode: candExamSecretCode && candExamSecretCode,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Note enregistrée  avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={20}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Notes des Candidats\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        component={TextField}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        name=\"candExamSecretCode\"\r\n                        type=\"text\"\r\n                        value={candExamSecretCode || \"\"}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"candExamSecretCode\");\r\n                        }}\r\n                        label=\"Anonymat du candidat\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"candExamSecretCode\" />}\r\n                      />\r\n                      <Field\r\n                        component={Select}\r\n                        variant=\"outlined\"\r\n                        name=\"suspect\"\r\n                        placeholder=\"matière\"\r\n                        label=\"Matières\"\r\n                         onChange={(event) => {\r\n                          handleSelectChange(event, \"suspect\");\r\n                        }}\r\n                        options={getSubjectsOptions}\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"suspect\" />}\r\n                      />\r\n                      <Field\r\n                        component={TextField}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"subjectAve\" />}\r\n                        name=\"subjectAve\"\r\n                        type=\"number\"\r\n                        step=\"0.001\"\r\n                        label=\"Note en la matière\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button\r\n                        disabled={isSubmitting || loading}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        {isSubmitting\r\n                          ? \"Enregistrement en cours\"\r\n                          : \"Enregistrer Note\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default EnterNewMarks;\r\n\r\n// <SygefexMuiSelect\r\n// name=\"region\"\r\n// margin=\"normal\"\r\n// onChange={(value) =>\r\n//   setFieldValue(\"region\", value.target)\r\n// }\r\n// placeholder=\"la Région\"\r\n// disabled={isSubmitting}\r\n// >\r\n//   {regions &&\r\n//     regions.map((item) => (\r\n//       <MenuItem key={item.id} value={item.id}>\r\n//         {item.regName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </Field>\r\n"]},"metadata":{},"sourceType":"module"}