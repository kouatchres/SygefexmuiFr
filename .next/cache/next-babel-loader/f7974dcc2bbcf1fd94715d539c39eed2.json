{"ast":null,"code":"import _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\report\\\\CreateReport.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { Grid, Typography, Paper, Button, LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\nimport Notification from \"../utils/Notification\";\nimport * as Yup from \"yup\";\nimport useForm from \"../utils/useForm\";\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getSelectedObject, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getSingleCenterQuery, getCESExaminerQuery } from \"../queries&Mutations&Functions/Queries\";\nvar useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\" // fontSize: 100,\n\n  },\n  divStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    top: \"2rem\",\n    height: \"90vh\"\n  },\n  pageStyled: {\n    display: \"grid\",\n    placeItems: \"center\",\n    marginTop: \"2rem\",\n    padding: \"1rem\",\n    minWidth: \"80%\"\n  },\n  titleStyled: {\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  picStyled: {\n    paddingLeft: \"1rem\",\n    height: \"15rem\",\n    width: \"12rem\",\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  centerAll: {\n    display: \"grid\",\n    placeItems: \"center\",\n    minWidth: \"30vw\"\n  }\n});\nvar validationSchema = Yup.object().shape({\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\")\n});\n\nvar CreateReport = function CreateReport() {\n  _s();\n\n  var classes = useStyles();\n  var client = useApolloClient();\n  var initialValues = {\n    reportName: \"\",\n    reportImage: \"\",\n    centerNumber: \"\",\n    examinerCode: \"\"\n  };\n\n  var _useState = useState({\n    isOpen: false,\n    message: \"\",\n    type: \"\"\n  }),\n      notify = _useState[0],\n      setNotify = _useState[1];\n\n  var _useForm = useForm({\n    reportImage: \"\",\n    centerNumber: \"\",\n    examID: \"\",\n    sessionID: \"\",\n    exams: [],\n    sessions: [],\n    centerByNumber: \"\",\n    examSessions: \"\",\n    centerExamSessions: \"\",\n    examinerCode: \"\",\n    CESExaminer: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 4),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleSelectChange = _useForm2[2],\n      handleInputChange = _useForm2[3];\n\n  var CESExaminer = state.CESExaminer,\n      reportImage = state.reportImage,\n      centerNumber = state.centerNumber,\n      examID = state.examID,\n      sessionID = state.sessionID,\n      exams = state.exams,\n      sessions = state.sessions,\n      centerByNumber = state.centerByNumber,\n      examSessions = state.examSessions,\n      centerExamSessions = state.centerExamSessions,\n      examinerCode = state.examinerCode;\n\n  var makeExaminerObject = function makeExaminerObject(profCodeValue) {\n    var storedProf = {\n      examinerCode: \"\".concat(profCodeValue)\n    };\n    return storedProf;\n  };\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    var val = type === \"number\" ? parseInt(value) : value;\n    setState(_defineProperty({}, name, val));\n  };\n\n  var uploadFile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var files, data, res, file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = e.target.files;\n              data = new FormData();\n              data.append(\"file\", files[0]);\n              data.append(\"upload_preset\", \"ineximages\");\n              _context.next = 6;\n              return fetch(\"https://api.cloudinary.com/v1_1/inex/image/upload\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return res.json();\n\n            case 9:\n              file = _context.sent;\n              console.log(file);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                reportImage: file.secure_url\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadFile(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var uploadFiles = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var formData, file, xhr, cloudName;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formData = new FormData(), file = document.getElementById(\"file\").files[0], xhr = new XMLHttpRequest(), cloudName = \"your Cloudinary cloud's name\";\n              formData.append(\"file\", file);\n              formData.append(\"upload_preset\", \"ineximages\"); // REQUIRED\n\n              xhr.open(\"POST\", \"https://api.cloudinary.com/v1_1/inex/image/upload\");\n\n              xhr.onload = function () {\n                if (xhr.status === 200) {\n                  // Success! You probably want to save the URL somewhere\n                  var response = JSON.parse(xhr.response);\n                  setState(_objectSpread(_objectSpread({}, state), {}, {\n                    reportImage: response.secure_url\n                  })); // response.secure_url // https address of uploaded file\n                } else {\n                  alert(\"Upload failed. Please try agian.\");\n                }\n              };\n\n              xhr.send(formData);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function uploadFiles() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var loadExamData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$client$query, data, getExams, refinedExams;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.query({\n                query: getAllExamsQuery\n              });\n\n            case 2:\n              _yield$client$query = _context3.sent;\n              data = _yield$client$query.data;\n              getExams = data && data.exams;\n              console.log(getExams);\n              refinedExams = getExams && removeTypename(getExams);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  exams: refinedExams\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadExamData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeExamName = exams && exams.map(function (_ref4) {\n    var examName = _ref4.examName,\n        others = _objectWithoutProperties(_ref4, [\"examName\"]);\n\n    return others;\n  });\n\n  var getExamName = exams && _objectSpread({}, getSelectedObject(removeExamName, examID));\n\n  var getExamsOptions = exams && exams.map(function (item) {\n    return {\n      value: item.id,\n      label: item.examName\n    };\n  });\n\n  var loadSessionData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$client$query2, data, getSessions, refinedSessions;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.query({\n                query: getAllSessionsQuery\n              });\n\n            case 2:\n              _yield$client$query2 = _context4.sent;\n              data = _yield$client$query2.data;\n              getSessions = data && data.sessions;\n              refinedSessions = getSessions && removeTypename(getSessions);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sessions: refinedSessions\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadSessionData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n\n  var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n  var getSessionsOptions = sessions && sessions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.sessionName\n    };\n  });\n  useEffect(function () {\n    loadExamData();\n    loadSessionData();\n  }, []);\n  console.dir(getSessionName);\n\n  var loadExamSessionData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _yield$client$query3, data, loading, getExamSessions, refinedES, reducedES;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.dir(\"running exam session query\");\n              _context5.next = 3;\n              return client.query({\n                skip: !examID || !sessionID,\n                query: getExamSessionQuery,\n                variables: {\n                  exam: examID && getExamName,\n                  session: sessionID && getSessionName\n                }\n              });\n\n            case 3:\n              _yield$client$query3 = _context5.sent;\n              data = _yield$client$query3.data;\n              loading = _yield$client$query3.loading;\n              console.log(data);\n              getExamSessions = data && data.examSessions;\n              refinedES = getExamSessions && removeTypename(getExamSessions);\n              reducedES = refinedES && refinedES[0];\n              console.log(reducedES);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  examSessions: reducedES\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loadExamSessionData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  console.dir(state);\n  useEffect(function () {\n    loadExamSessionData();\n  }, [examID, sessionID]);\n\n  var loadCenterData = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _yield$client$query4, data, _data, centerByNumber, newCenterByNumber;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.query({\n                skip: !centerNumber,\n                query: getSingleCenterQuery,\n                variables: {\n                  centerNumber: centerNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query4 = _context6.sent;\n              data = _yield$client$query4.data;\n              _data = _objectSpread({}, data), centerByNumber = _data.centerByNumber;\n              newCenterByNumber = removeTypename(centerByNumber);\n              console.log(newCenterByNumber);\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  centerByNumber: newCenterByNumber\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function loadCenterData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCenterData();\n  }, [centerNumber]);\n\n  var loadCESData = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _yield$client$query5, error, data, getCenterExamSessionsByCode, refinedCenterExamSessions;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return client.query({\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: examSessions && examSessions,\n                  center: centerByNumber && centerByNumber\n                }\n              });\n\n            case 2:\n              _yield$client$query5 = _context7.sent;\n              error = _yield$client$query5.error;\n              data = _yield$client$query5.data;\n              console.log(data);\n              getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\n              console.log(getCenterExamSessionsByCode);\n              refinedCenterExamSessions = getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  centerExamSessions: refinedCenterExamSessions\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function loadCESData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadCESData();\n  }, [centerNumber, examSessions]); // transform the array into a single object\n\n  var getCESID = centerExamSessions && centerExamSessions[0];\n  console.log(getCESID);\n  console.log(centerByNumber); // const getCenterExamSessionsByCode =\n  //   dataCES && dataCES.centerExamSessionsByCode;\n  // console.log(getCenterExamSessionsByCode);\n  // // remove typename from the object\n  // const refinedCenterExamSessionsByCode =\n  //   getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\n  // // transform the array into a single object\n  // const getCES =\n  //   refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\n  // console.log(getCES);\n\n  var loadExaminerData = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var _yield$client$query6, error, data, getCESExaminers, refinedCESExaminer, reducedCESExaminer;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return client.query({\n                skip: !getCESID || !examinerCode,\n                query: getCESExaminerQuery,\n                variables: {\n                  centerExamSession: getCESID && getCESID,\n                  examiner: examinerCode && makeExaminerObject(examinerCode)\n                }\n              });\n\n            case 2:\n              _yield$client$query6 = _context8.sent;\n              error = _yield$client$query6.error;\n              data = _yield$client$query6.data;\n              getCESExaminers = data && data.getCenterExamSessionExaminers;\n              refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\n              reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\n              console.log(reducedCESExaminer);\n              setState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  CESExaminer: reducedCESExaminer\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function loadExaminerData() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadExaminerData();\n  }, [getCESID, examinerCode]);\n\n  var _useMutation = useMutation(createNewReportMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createReport = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(values, _ref10) {\n        var setSubmitting, resetForm, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                setSubmitting = _ref10.setSubmitting, resetForm = _ref10.resetForm;\n                _context9.next = 3;\n                return createReport({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    reportImage: reportImage,\n                    centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer\n                  })\n                });\n\n              case 3:\n                res = _context9.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  setNotify({\n                    isOpen: true,\n                    message: \"Rapport créé avec success\",\n                    type: \"success\"\n                  });\n                  resetForm({\n                    values: \"\"\n                  });\n                  setSubmitting(false);\n                }, 200);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  }, function (_ref12) {\n    var submitForm = _ref12.submitForm,\n        isSubmitting = _ref12.isSubmitting;\n    return __jsx(\"div\", {\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }\n    }, __jsx(Paper, {\n      className: classes.pageStyled,\n      elevation: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, (isSubmitting || loading) && __jsx(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 47\n      }\n    }), __jsx(Grid, {\n      className: classes.centerAll,\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: classes.centerAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.titleStyled,\n      color: \"primary\",\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 23\n      }\n    }, \"Rapport de fin de session\"))), __jsx(Grid, {\n      container: true,\n      spacing: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }, __jsx(Field, {\n      component: TextField,\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"file\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      }),\n      label: \"Choisir le rapport\",\n      name: \"file\",\n      type: \"file\",\n      onChange: uploadFile,\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerName\",\n      type: \"text\",\n      component: TextField,\n      label: \"Nom du centre\",\n      fullWidth: true,\n      value: centerByNumber && centerByNumber.centerCode || \"\",\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      name: \"centerNumber\",\n      type: \"number\",\n      component: TextField,\n      label: \"Num\\xE9ro du centre\",\n      fullWidth: true,\n      value: centerNumber && centerNumber || 0,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      disabled: isSubmitting,\n      helpertext: __jsx(ErrorMessage, {\n        name: \"centerNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"sessionID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getSessionsOptions,\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"sessionID\");\n      },\n      name: \"sessionID\",\n      placeholder: \"La session\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examID\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 37\n        }\n      }),\n      component: Select,\n      options: getExamsOptions,\n      onChange: function onChange(event) {\n        handleSelectChange(event, \"examID\");\n      },\n      name: \"examID\",\n      placeholder: \"L'Examen\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 23\n      }\n    }), __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"reportName\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 35\n        }\n      }),\n      component: TextField,\n      name: \"reportName\",\n      type: \"text\",\n      label: \"Titre du Rapport\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 23\n      }\n    })), __jsx(Grid, {\n      item: true,\n      className: classes.centerAll,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      variant: \"outlined\",\n      helpertext: __jsx(ErrorMessage, {\n        name: \"examinerCode\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 37\n        }\n      }),\n      component: TextField,\n      onChange: handleChange,\n      value: state.examinerCode,\n      name: \"examinerCode\",\n      type: \"text\",\n      label: \"Code Secret de l'examinateur\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 23\n      }\n    }), __jsx(\"div\", {\n      className: classes.picStyled,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 23\n      }\n    }, !reportImage ? __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }\n    }) : __jsx(\"img\", {\n      style: {\n        height: \"15rem\",\n        width: \"15rem\",\n        display: \"grid\",\n        backgroundSize: \"contain\",\n        backgroundPosition: \"center\",\n        placeItems: \"center\",\n        borderRadius: \"0.5rem\"\n      },\n      src: reportImage,\n      alt: \"Upload image\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 27\n      }\n    })), __jsx(Notification, {\n      notify: notify,\n      setNotify: setNotify,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 23\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      onClick: submitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 23\n      }\n    }, (isSubmitting || loading) && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 55\n      }\n    }), isSubmitting ? \"Nouveau rapport en création\" : \"Créer Rapport\")))))));\n  });\n};\n\n_s(CreateReport, \"g5MipwcbAamaCn4MsBPAond5hok=\", false, function () {\n  return [useStyles, useApolloClient, useForm, useMutation];\n});\n\n_c = CreateReport;\nexport default CreateReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReport\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/report/CreateReport.jsx"],"names":["React","useState","useEffect","TextField","Select","ErrorMessage","Formik","Form","Field","Grid","Typography","Paper","Button","LinearProgress","CircularProgress","makeStyles","useMutation","useApolloClient","useQuery","Notification","Yup","useForm","createNewReportMutation","getSelectedObject","removeTypename","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getSingleCenterQuery","getCESExaminerQuery","useStyles","root","display","flexDirection","divStyled","placeItems","top","height","pageStyled","marginTop","padding","minWidth","titleStyled","picStyled","paddingLeft","width","centerAll","validationSchema","object","shape","reportName","string","required","examID","sessionID","examinerCode","CreateReport","classes","client","initialValues","reportImage","centerNumber","isOpen","message","type","notify","setNotify","exams","sessions","centerByNumber","examSessions","centerExamSessions","CESExaminer","state","setState","handleSelectChange","handleInputChange","makeExaminerObject","profCodeValue","storedProf","handleChange","e","target","name","value","val","parseInt","uploadFile","files","data","FormData","append","fetch","method","body","res","json","file","console","log","secure_url","uploadFiles","formData","document","getElementById","xhr","XMLHttpRequest","cloudName","open","onload","status","response","JSON","parse","alert","send","loadExamData","query","getExams","refinedExams","prev","removeExamName","map","examName","others","getExamName","getExamsOptions","item","id","label","loadSessionData","getSessions","refinedSessions","dir","getSessionName","getSessionsOptions","sessionName","loadExamSessionData","skip","variables","exam","session","loading","getExamSessions","refinedES","reducedES","loadCenterData","newCenterByNumber","loadCESData","examSession","center","error","getCenterExamSessionsByCode","centerExamSessionsByCode","refinedCenterExamSessions","getCESID","loadExaminerData","centerExamSession","examiner","getCESExaminers","getCenterExamSessionExaminers","refinedCESExaminer","reducedCESExaminer","createReport","values","setSubmitting","resetForm","centerExamSessionExaminer","setTimeout","stringify","submitForm","isSubmitting","centerCode","event","backgroundSize","backgroundPosition","borderRadius"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,QAAvC,QAAuD,qBAAvD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,uBAAT,QAAwC,0CAAxC;AACA,SACEC,iBADF,EAEEC,cAFF,QAGO,0CAHP;AAIA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,+BAJF,EAKEC,oBALF,EAMEC,mBANF,QAOO,wCAPP;AASA,IAAMC,SAAS,GAAGhB,UAAU,CAAC;AAC3BiB,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX,CAGJ;;AAHI,GADqB;AAM3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,MAAM,EAAE;AAJC,GANgB;AAY3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,OAAO,EAAE,MADC;AAEVG,IAAAA,UAAU,EAAE,QAFF;AAGVI,IAAAA,SAAS,EAAE,MAHD;AAIVC,IAAAA,OAAO,EAAE,MAJC;AAKVC,IAAAA,QAAQ,EAAE;AALA,GAZe;AAoB3BC,EAAAA,WAAW,EAAE;AACXV,IAAAA,OAAO,EAAE,MADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GApBc;AAyB3BQ,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,MADJ;AAETP,IAAAA,MAAM,EAAE,OAFC;AAGTQ,IAAAA,KAAK,EAAE,OAHE;AAITb,IAAAA,OAAO,EAAE,MAJA;AAKTG,IAAAA,UAAU,EAAE;AALH,GAzBgB;AAiC3BW,EAAAA,SAAS,EAAE;AACTd,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,UAAU,EAAE,QAFH;AAGTM,IAAAA,QAAQ,EAAE;AAHD;AAjCgB,CAAD,CAA5B;AAwCA,IAAMM,gBAAgB,GAAG5B,GAAG,CAAC6B,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,UAAU,EAAE/B,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAD8B;AAE1CC,EAAAA,MAAM,EAAElC,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB,CAFkC;AAG1CE,EAAAA,SAAS,EAAEnC,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CAH+B;AAI1CG,EAAAA,YAAY,EAAEpC,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,qCAAtB;AAJ4B,CAAnB,CAAzB;;AAQA,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,MAAM4B,MAAM,GAAE1C,eAAe,EAA7B;AACA,MAAM2C,aAAa,GAAG;AACpBT,IAAAA,UAAU,EAAE,EADQ;AAEpBU,IAAAA,WAAW,EAAE,EAFO;AAGpBC,IAAAA,YAAY,EAAE,EAHM;AAIpBN,IAAAA,YAAY,EAAE;AAJM,GAAtB;;AAHyB,kBAUGvD,QAAQ,CAAC;AACnC8D,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE,EAF0B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CAVX;AAAA,MAUlBC,MAVkB;AAAA,MAUVC,SAVU;;AAAA,iBAewC9C,OAAO,CAAC;AACvEwC,IAAAA,WAAW,EAAE,EAD0D;AAEvEC,IAAAA,YAAY,EAAE,EAFyD;AAGvER,IAAAA,MAAM,EAAE,EAH+D;AAIvEC,IAAAA,SAAS,EAAE,EAJ4D;AAKvEa,IAAAA,KAAK,EAAE,EALgE;AAMvEC,IAAAA,QAAQ,EAAE,EAN6D;AAOvEC,IAAAA,cAAc,EAAE,EAPuD;AAQvEC,IAAAA,YAAY,EAAE,EARyD;AASvEC,IAAAA,kBAAkB,EAAE,EATmD;AAUvEhB,IAAAA,YAAY,EAAE,EAVyD;AAWvEiB,IAAAA,WAAW,EAAE;AAX0D,GAAD,CAf/C;AAAA;AAAA,MAelBC,KAfkB;AAAA,MAeXC,QAfW;AAAA,MAeDC,kBAfC;AAAA,MAemBC,iBAfnB;;AAAA,MA8BvBJ,WA9BuB,GAyCrBC,KAzCqB,CA8BvBD,WA9BuB;AAAA,MA+BvBZ,WA/BuB,GAyCrBa,KAzCqB,CA+BvBb,WA/BuB;AAAA,MAgCvBC,YAhCuB,GAyCrBY,KAzCqB,CAgCvBZ,YAhCuB;AAAA,MAiCvBR,MAjCuB,GAyCrBoB,KAzCqB,CAiCvBpB,MAjCuB;AAAA,MAkCvBC,SAlCuB,GAyCrBmB,KAzCqB,CAkCvBnB,SAlCuB;AAAA,MAmCvBa,KAnCuB,GAyCrBM,KAzCqB,CAmCvBN,KAnCuB;AAAA,MAoCvBC,QApCuB,GAyCrBK,KAzCqB,CAoCvBL,QApCuB;AAAA,MAqCvBC,cArCuB,GAyCrBI,KAzCqB,CAqCvBJ,cArCuB;AAAA,MAsCvBC,YAtCuB,GAyCrBG,KAzCqB,CAsCvBH,YAtCuB;AAAA,MAuCvBC,kBAvCuB,GAyCrBE,KAzCqB,CAuCvBF,kBAvCuB;AAAA,MAwCvBhB,YAxCuB,GAyCrBkB,KAzCqB,CAwCvBlB,YAxCuB;;AA2CzB,MAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,aAAD,EAAmB;AAC5C,QAAMC,UAAU,GAAG;AACjBxB,MAAAA,YAAY,YAAKuB,aAAL;AADK,KAAnB;AAGA,WAAOC,UAAP;AACD,GALD;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACIA,CAAC,CAACC,MADN;AAAA,QAClBC,IADkB,aAClBA,IADkB;AAAA,QACZC,KADY,aACZA,KADY;AAAA,QACLpB,IADK,aACLA,IADK;AAE1B,QAAMqB,GAAG,GAAGrB,IAAI,KAAK,QAAT,GAAoBsB,QAAQ,CAACF,KAAD,CAA5B,GAAsCA,KAAlD;AACAV,IAAAA,QAAQ,qBAAIS,IAAJ,EAAWE,GAAX,EAAR;AACD,GAJD;;AAMA,MAAME,UAAU;AAAA,wEAAG,iBAAON,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXO,cAAAA,KADW,GACHP,CAAC,CAACC,MAAF,CAASM,KADN;AAEXC,cAAAA,IAFW,GAEJ,IAAIC,QAAJ,EAFI;AAGjBD,cAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,KAAK,CAAC,CAAD,CAAzB;AACAC,cAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,YAA7B;AAJiB;AAAA,qBAKCC,KAAK,CACrB,mDADqB,EAErB;AACEC,gBAAAA,MAAM,EAAE,MADV;AAEEC,gBAAAA,IAAI,EAAEL;AAFR,eAFqB,CALN;;AAAA;AAKXM,cAAAA,GALW;AAAA;AAAA,qBAYEA,GAAG,CAACC,IAAJ,EAZF;;AAAA;AAYXC,cAAAA,IAZW;AAajBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAvB,cAAAA,QAAQ,iCAAMD,KAAN;AAAab,gBAAAA,WAAW,EAAEqC,IAAI,CAACG;AAA/B,iBAAR;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVb,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAkBF,MAAOc,WAAW;AAAA,yEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,QADW,GACA,IAAIZ,QAAJ,EADA,EAEfO,IAFe,GAERM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgChB,KAAhC,CAAsC,CAAtC,CAFQ,EAGfiB,GAHe,GAGT,IAAIC,cAAJ,EAHS,EAIfC,SAJe,GAIH,8BAJG;AAMjBL,cAAAA,QAAQ,CAACX,MAAT,CAAgB,MAAhB,EAAwBM,IAAxB;AACAK,cAAAA,QAAQ,CAACX,MAAT,CAAgB,eAAhB,EAAiC,YAAjC,EAPiB,CAO+B;;AAChDc,cAAAA,GAAG,CAACG,IAAJ,CAAS,MAAT,EAAiB,mDAAjB;;AAEAH,cAAAA,GAAG,CAACI,MAAJ,GAAa,YAAM;AACjB,oBAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,sBAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACM,QAAf,CAAjB;AACFrC,kBAAAA,QAAQ,iCAAMD,KAAN;AAAab,oBAAAA,WAAW,EAAEmD,QAAQ,CAACX;AAAnC,qBAAR,CAHwB,CAKtB;AACD,iBAND,MAMO;AACLc,kBAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF,eAVD;;AAWAT,cAAAA,GAAG,CAACU,IAAJ,CAASb,QAAT;;AArBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAXD,WAAW;AAAA;AAAA;AAAA,KAAlB;;AA0BE,MAAMe,YAAY;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI1D,MAAM,CAAC2D,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAE5F;AAD2B,eAAb,CADJ;;AAAA;AAAA;AACXgE,cAAAA,IADW,uBACXA,IADW;AAKb6B,cAAAA,QALa,GAKF7B,IAAI,IAAIA,IAAI,CAACtB,KALX;AAMnB+B,cAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACMC,cAAAA,YAPa,GAOED,QAAQ,IAAI/F,cAAc,CAAC+F,QAAD,CAP5B;AAQnB5C,cAAAA,QAAQ,CAAC,UAAC8C,IAAD;AAAA,uDACJA,IADI;AAEPrD,kBAAAA,KAAK,EAAEoD;AAFA;AAAA,eAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaA,MAAMK,cAAc,GAClBtD,KAAK,IAAIA,KAAK,CAACuD,GAAN,CAAU;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAgBC,MAAhB;;AAAA,WAA6BA,MAA7B;AAAA,GAAV,CADX;;AAGA,MAAMC,WAAW,GAAG1D,KAAK,sBACpB7C,iBAAiB,CAACmG,cAAD,EAAiBpE,MAAjB,CADG,CAAzB;;AAGA,MAAMyE,eAAe,GACnB3D,KAAK,IAAIA,KAAK,CAACuD,GAAN,CAAU,UAACK,IAAD;AAAA,WAAW;AAAE3C,MAAAA,KAAK,EAAE2C,IAAI,CAACC,EAAd;AAAkBC,MAAAA,KAAK,EAAEF,IAAI,CAACJ;AAA9B,KAAX;AAAA,GAAV,CADX;;AAGA,MAAMO,eAAe;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCxE,MAAM,CAAC2D,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAE3F;AAD2B,eAAb,CADD;;AAAA;AAAA;AACd+D,cAAAA,IADc,wBACdA,IADc;AAKhB0C,cAAAA,WALgB,GAKF1C,IAAI,IAAIA,IAAI,CAACrB,QALX;AAMhBgE,cAAAA,eANgB,GAMED,WAAW,IAAI5G,cAAc,CAAC4G,WAAD,CAN/B;AAOtBzD,cAAAA,QAAQ,CAAC,UAAC8C,IAAD;AAAA,uDACJA,IADI;AAEPpD,kBAAAA,QAAQ,EAAEgE;AAFH;AAAA,eAAD,CAAR;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfF,eAAe;AAAA;AAAA;AAAA,KAArB;;AAYAhC,EAAAA,OAAO,CAACmC,GAAR,CAAY5D,KAAZ;;AAEA,MAAM6D,cAAc,GAAGlE,QAAQ,sBAC1B9C,iBAAiB,CAAC8C,QAAD,EAAWd,SAAX,CADS,CAA/B;;AAIA,MAAMiF,kBAAkB,GACtBnE,QAAQ,IACRA,QAAQ,CAACsD,GAAT,CAAa,UAACK,IAAD;AAAA,WAAW;AAAE3C,MAAAA,KAAK,EAAE2C,IAAI,CAACC,EAAd;AAAkBC,MAAAA,KAAK,EAAEF,IAAI,CAACS;AAA9B,KAAX;AAAA,GAAb,CAFF;AAIAvI,EAAAA,SAAS,CAAC,YAAM;AACdmH,IAAAA,YAAY;AACZc,IAAAA,eAAe;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKAhC,EAAAA,OAAO,CAACmC,GAAR,CAAYC,cAAZ;;AAEA,MAAMG,mBAAmB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BvC,cAAAA,OAAO,CAACmC,GAAR,CAAY,4BAAZ;AAD0B;AAAA,qBAEM3E,MAAM,CAAC2D,KAAP,CAAa;AAC3CqB,gBAAAA,IAAI,EAAE,CAACrF,MAAD,IAAW,CAACC,SADyB;AAE3C+D,gBAAAA,KAAK,EAAE7F,mBAFoC;AAG3CmH,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,IAAI,EAAEvF,MAAM,IAAIwE,WADP;AAETgB,kBAAAA,OAAO,EAAEvF,SAAS,IAAIgF;AAFb;AAHgC,eAAb,CAFN;;AAAA;AAAA;AAElB7C,cAAAA,IAFkB,wBAElBA,IAFkB;AAEZqD,cAAAA,OAFY,wBAEZA,OAFY;AAW1B5C,cAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACMsD,cAAAA,eAZoB,GAYFtD,IAAI,IAAIA,IAAI,CAACnB,YAZX;AAapB0E,cAAAA,SAboB,GAaRD,eAAe,IAAIxH,cAAc,CAACwH,eAAD,CAbzB;AAcpBE,cAAAA,SAdoB,GAcRD,SAAS,IAAIA,SAAS,CAAC,CAAD,CAdd;AAe1B9C,cAAAA,OAAO,CAACC,GAAR,CAAY8C,SAAZ;AAEAvE,cAAAA,QAAQ,CAAC,UAAC8C,IAAD;AAAA,uDACJA,IADI;AAEPlD,kBAAAA,YAAY,EAAE2E;AAFP;AAAA,eAAD,CAAR;;AAjB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBR,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAsBAvC,EAAAA,OAAO,CAACmC,GAAR,CAAY5D,KAAZ;AAEAxE,EAAAA,SAAS,CAAC,YAAM;AACdwI,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACpF,MAAD,EAASC,SAAT,CAFM,CAAT;;AAIA,MAAM4F,cAAc;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACExF,MAAM,CAAC2D,KAAP,CAAa;AAClCqB,gBAAAA,IAAI,EAAE,CAAC7E,YAD2B;AAElCwD,gBAAAA,KAAK,EAAEzF,oBAF2B;AAGlC+G,gBAAAA,SAAS,EAAE;AAAE9E,kBAAAA,YAAY,EAAEA;AAAhB;AAHuB,eAAb,CADF;;AAAA;AAAA;AACb4B,cAAAA,IADa,wBACbA,IADa;AAAA,wCAOWA,IAPX,GAObpB,cAPa,SAObA,cAPa;AAQf8E,cAAAA,iBARe,GAQK5H,cAAc,CAAC8C,cAAD,CARnB;AASrB6B,cAAAA,OAAO,CAACC,GAAR,CAAYgD,iBAAZ;AACAzE,cAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,uDAAiBA,KAAjB;AAAwBJ,kBAAAA,cAAc,EAAE8E;AAAxC;AAAA,eAAD,CAAR;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdD,cAAc;AAAA;AAAA;AAAA,KAApB;;AAaAjJ,EAAAA,SAAS,CAAC,YAAM;AACdiJ,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACrF,YAAD,CAFM,CAAT;;AAIA,MAAMuF,WAAW;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY1F,MAAM,CAAC2D,KAAP,CAAa;AACzCA,gBAAAA,KAAK,EAAE1F,+BADkC;AAEzCgH,gBAAAA,SAAS,EAAE;AACTU,kBAAAA,WAAW,EAAE/E,YAAY,IAAIA,YADpB;AAETgF,kBAAAA,MAAM,EAAEjF,cAAc,IAAIA;AAFjB;AAF8B,eAAb,CADZ;;AAAA;AAAA;AACVkF,cAAAA,KADU,wBACVA,KADU;AACH9D,cAAAA,IADG,wBACHA,IADG;AASlBS,cAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACM+D,cAAAA,2BAVY,GAUkB/D,IAAI,IAAIA,IAAI,CAACgE,wBAV/B;AAWlBvD,cAAAA,OAAO,CAACC,GAAR,CAAYqD,2BAAZ;AACME,cAAAA,yBAZY,GAahBF,2BAA2B,IAC3BjI,cAAc,CAACiI,2BAAD,CAdE;AAelB9E,cAAAA,QAAQ,CAAC,UAAC8C,IAAD;AAAA,uDACJA,IADI;AAEPjD,kBAAAA,kBAAkB,EAAEmF;AAFb;AAAA,eAAD,CAAR;;AAfkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXN,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAqBAnJ,EAAAA,SAAS,CAAC,YAAM;AACdmJ,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACvF,YAAD,EAAeS,YAAf,CAFM,CAAT,CAzNyB,CA6NzB;;AACA,MAAMqF,QAAQ,GAAGpF,kBAAkB,IAAIA,kBAAkB,CAAC,CAAD,CAAzD;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAYwD,QAAZ;AAEAzD,EAAAA,OAAO,CAACC,GAAR,CAAY9B,cAAZ,EAjOyB,CAmOzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMuF,gBAAgB;AAAA,yEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOlG,MAAM,CAAC2D,KAAP,CAAa;AACvCqB,gBAAAA,IAAI,EAAE,CAACiB,QAAD,IAAa,CAACpG,YADmB;AAEvC8D,gBAAAA,KAAK,EAACxF,mBAFiC;AAGzC8G,gBAAAA,SAAS,EAAE;AACTkB,kBAAAA,iBAAiB,EAAEF,QAAQ,IAAIA,QADtB;AAETG,kBAAAA,QAAQ,EAAEvG,YAAY,IAAIsB,kBAAkB,CAACtB,YAAD;AAFnC;AAH8B,eAAb,CADP;;AAAA;AAAA;AACdgG,cAAAA,KADc,wBACdA,KADc;AACP9D,cAAAA,IADO,wBACPA,IADO;AAUjBsE,cAAAA,eAViB,GAWrBtE,IAAI,IAAIA,IAAI,CAACuE,6BAXQ;AAYjBC,cAAAA,kBAZiB,GAYIF,eAAe,IAAIxI,cAAc,CAACwI,eAAD,CAZrC;AAajBG,cAAAA,kBAbiB,GAaID,kBAAkB,IAAIA,kBAAkB,CAAC,CAAD,CAb5C;AAcvB/D,cAAAA,OAAO,CAACC,GAAR,CAAY+D,kBAAZ;AACDxF,cAAAA,QAAQ,CAAC,UAAC8C,IAAD;AAAA,uDACDA,IADC;AAEJhD,kBAAAA,WAAW,EAAE0F;AAFT;AAAA,eAAD,CAAR;;AAfwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAhBN,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAqBD3J,EAAAA,SAAS,CAAC,YAAI;AACf2J,IAAAA,gBAAgB;AAEd,GAHQ,EAGP,CAACD,QAAD,EAAWpG,YAAX,CAHO,CAAT;;AApQ0B,qBAyQkBxC,WAAW,CACpDM,uBADoD,CAzQ7B;AAAA;AAAA,MAyQlB8I,YAzQkB;AAAA;AAAA,MAyQFrB,OAzQE,kBAyQFA,OAzQE;AAAA,MAyQOS,KAzQP,kBAyQOA,KAzQP;;AA4QzB,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE5F,aADjB;AAEE,IAAA,gBAAgB,EAAEZ,gBAFpB;AAGE,IAAA,QAAQ;AAAA,4EAAE,kBAAOqH,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,aAAjB,UAAiBA,aAAjB,EAAgCC,SAAhC,UAAgCA,SAAhC;AAAA;AAAA,uBACUH,YAAY,CAAC;AAC7BxB,kBAAAA,SAAS,kCACJyB,MADI;AAEPxG,oBAAAA,WAAW,EAAEA,WAFN;AAGP2G,oBAAAA,yBAAyB,EAAEL,kBAAkB,IAAIA;AAH1C;AADoB,iBAAD,CADtB;;AAAA;AACFnE,gBAAAA,GADE;AAQRyE,gBAAAA,UAAU,CAAC,YAAM;AACftE,kBAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACyD,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAlE,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA7B,kBAAAA,SAAS,CAAC;AACRJ,oBAAAA,MAAM,EAAE,IADA;AAERC,oBAAAA,OAAO,EAAE,2BAFD;AAGRC,oBAAAA,IAAI,EAAE;AAHE,mBAAD,CAAT;AAKAsG,kBAAAA,SAAS,CAAC;AAAEF,oBAAAA,MAAM,EAAE;AAAV,mBAAD,CAAT;AACAC,kBAAAA,aAAa,CAAC,KAAD,CAAb;AACD,iBAVS,EAUP,GAVO,CAAV;;AARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBG,kBAAkC;AAAA,QAA/BK,UAA+B,UAA/BA,UAA+B;AAAA,QAAnBC,YAAmB,UAAnBA,YAAmB;AACjC,WACE;AAAK,MAAA,SAAS,EAAElH,OAAO,CAACX,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEW,OAAO,CAACnB,UAA1B;AAAsC,MAAA,SAAS,EAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,mBAAWqI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,YAAY,IAAI7B,OAAjB,KAA6B,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,EAEE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAErF,OAAO,CAACX,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEW,OAAO,CAACX,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAEW,OAAO,CAACf,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,OAAO,EAAC,IAJV;AAKE,MAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,CADF,EAcA,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAiB,MAAA,OAAO,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAEe,OAAO,CAACX,SAA9B;AAAyC,MAAA,EAAE,EAAE,EAA7C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AACE,MAAA,SAAS,EAAE5C,SADb;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHd;AAIE,MAAA,KAAK,EAAC,oBAJR;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,IAAI,EAAC,MANP;AAOE,MAAA,QAAQ,EAAEqF,UAPZ;AAQE,MAAA,QAAQ,EAAEoF,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAWI,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAEzK,SAHb;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EACFmE,cAAc,IAAIA,cAAc,CAACuG,UAAlC,IAAiD,EAPrD;AASE,MAAA,OAAO,EAAC,UATV;AAUE,MAAA,QAAQ,EAAED,YAVZ;AAWE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAwBI,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAEzK,SAHb;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,KAAK,EAAG2D,YAAY,IAAIA,YAAjB,IAAkC,CAN3C;AAOE,MAAA,QAAQ,EAAEe,iBAPZ;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,QAAQ,EAAE+F,YATZ;AAUE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EAsCI,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAGE,MAAA,SAAS,EAAExK,MAHb;AAIE,MAAA,OAAO,EAAEoI,kBAJX;AAKE,MAAA,QAAQ,EAAE,kBAACsC,KAAD,EAAW;AACnBlG,QAAAA,kBAAkB,CAACkG,KAAD,EAAQ,WAAR,CAAlB;AACD,OAPH;AAQE,MAAA,IAAI,EAAC,WARP;AASE,MAAA,WAAW,EAAC,YATd;AAUE,MAAA,QAAQ,EAAEF,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ,EAkDI,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAGE,MAAA,SAAS,EAAExK,MAHb;AAIE,MAAA,OAAO,EAAE2H,eAJX;AAKE,MAAA,QAAQ,EAAE,kBAAC+C,KAAD,EAAW;AACnBlG,QAAAA,kBAAkB,CAACkG,KAAD,EAAQ,QAAR,CAAlB;AACD,OAPH;AAQE,MAAA,IAAI,EAAC,QARP;AASE,MAAA,WAAW,EAAC,UATd;AAUE,MAAA,QAAQ,EAAEF,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDJ,EA8DI,MAAC,KAAD;AACA,MAAA,OAAO,EAAC,UADR;AAEA,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFZ;AAGA,MAAA,SAAS,EAAEzK,SAHX;AAIA,MAAA,IAAI,EAAC,YAJL;AAKA,MAAA,IAAI,EAAC,MALL;AAMA,MAAA,KAAK,EAAC,kBANN;AAOA,MAAA,QAAQ,EAAEyK,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DJ,CADF,EAyEM,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAElH,OAAO,CAACX,SAA9B;AAA0C,MAAA,EAAE,EAAE,EAA9C;AAAkD,MAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,KAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,UAAU,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAGE,MAAA,SAAS,EAAE5C,SAHb;AAIE,MAAA,QAAQ,EAAE8E,YAJZ;AAKE,MAAA,KAAK,EAAEP,KAAK,CAAClB,YALf;AAME,MAAA,IAAI,EAAC,cANP;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,KAAK,EAAC,8BARR;AASE,MAAA,QAAQ,EAAEoH,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAaA;AAAK,MAAA,SAAS,EAAElH,OAAO,CAACd,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACiB,WAAD,GACC,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AACE,MAAA,KAAK,EAAE;AACLvB,QAAAA,MAAM,EAAE,OADH;AAELQ,QAAAA,KAAK,EAAE,OAFF;AAGLb,QAAAA,OAAO,EAAE,MAHJ;AAIL8I,QAAAA,cAAc,EAAE,SAJX;AAKLC,QAAAA,kBAAkB,EAAE,QALf;AAML5I,QAAAA,UAAU,EAAE,QANP;AAOL6I,QAAAA,YAAY,EAAE;AAPT,OADT;AAUE,MAAA,GAAG,EAAEpH,WAVP;AAWE,MAAA,GAAG,EAAC,cAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAbA,EAgCA,MAAC,YAAD;AAAc,MAAA,MAAM,EAAEK,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCA,EAkCA,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEyG,YAAlB;AAAgC,MAAA,OAAO,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,YAAY,IAAI7B,OAAjB,KAA6B,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,EAEG6B,YAAY,GACT,6BADS,GAET,eAJN,CAlCA,CAzEN,CAdA,CAFF,CADF,CADF,CADF;AA2ID,GApKH,CADF;AAwKD,CApbD;;GAAMnH,Y;UACY1B,S,EACFd,e,EAamDI,O,EA0PtBL,W;;;KAzQvCyC,Y;AAqbN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\r\nimport Notification from \"../utils/Notification\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { createNewReportMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getSingleCenterQuery,\r\n  getCESExaminerQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"80%\",\r\n  },\r\n\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  picStyled: {\r\n    paddingLeft: \"1rem\",\r\n    height: \"15rem\",\r\n    width: \"12rem\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  reportName: Yup.string().required(\"Titre du rapport obligatoire\"),\r\n  examID: Yup.string().required(\"Choix De l'examen Obligatoire\"),\r\n  sessionID: Yup.string().required(\"Choix de la session Obligatoire\"),\r\n  examinerCode: Yup.string().required(\"Code secret examinateur Obligatoire\"),\r\n  \r\n});\r\n\r\nconst CreateReport = () => {\r\n  const classes = useStyles();\r\n  const client =useApolloClient()\r\n  const initialValues = {\r\n    reportName: \"\",\r\n    reportImage: \"\",\r\n    centerNumber: \"\",\r\n    examinerCode: \"\",\r\n  };\r\n\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  const [state, setState, handleSelectChange, handleInputChange] = useForm({\r\n    reportImage: \"\",\r\n    centerNumber: \"\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    exams: [],\r\n    sessions: [],\r\n    centerByNumber: \"\",\r\n    examSessions: \"\",\r\n    centerExamSessions: \"\",\r\n    examinerCode: \"\",\r\n    CESExaminer: \"\",\r\n  });\r\n\r\n  const {\r\n    CESExaminer,\r\n    reportImage,\r\n    centerNumber,\r\n    examID,\r\n    sessionID,\r\n    exams,\r\n    sessions,\r\n    centerByNumber,\r\n    examSessions,\r\n    centerExamSessions,\r\n    examinerCode,\r\n  } = state;\r\n\r\n  const makeExaminerObject = (profCodeValue) => {\r\n    const storedProf = {\r\n      examinerCode: `${profCodeValue}`,\r\n    };\r\n    return storedProf;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"ineximages\");\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/inex/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const file = await res.json();\r\n    console.log(file);\r\n    setState({ ...state, reportImage: file.secure_url });\r\n  };\r\n\r\n\r\nconst  uploadFiles=async ()=> {\r\n  const formData = new FormData(),\r\n    file = document.getElementById(\"file\").files[0],\r\n    xhr = new XMLHttpRequest(),\r\n    cloudName = \"your Cloudinary cloud's name\";\r\n\r\n  formData.append(\"file\", file);\r\n  formData.append(\"upload_preset\", \"ineximages\"); // REQUIRED\r\n  xhr.open(\"POST\", \"https://api.cloudinary.com/v1_1/inex/image/upload\");\r\n\r\n  xhr.onload = () => {\r\n    if (xhr.status === 200) {\r\n      // Success! You probably want to save the URL somewhere\r\n      const response = JSON.parse(xhr.response);\r\n    setState({ ...state, reportImage: response.secure_url });\r\n\r\n      // response.secure_url // https address of uploaded file\r\n    } else {\r\n      alert(\"Upload failed. Please try agian.\");\r\n    }\r\n  }\r\n  xhr.send(formData);\r\n}\r\n\r\n\r\n\r\n  const loadExamData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllExamsQuery,\r\n    });\r\n\r\n    const getExams = data && data.exams;\r\n    console.log(getExams);\r\n    const refinedExams = getExams && removeTypename(getExams);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      exams: refinedExams,\r\n    }));\r\n  };\r\n  const removeExamName =\r\n    exams && exams.map(({ examName, ...others }) => others);\r\n\r\n  const getExamName = exams && {\r\n    ...getSelectedObject(removeExamName, examID),\r\n  };\r\n  const getExamsOptions =\r\n    exams && exams.map((item) => ({ value: item.id, label: item.examName }));\r\n\r\n  const loadSessionData = async () => {\r\n    const { data } = await client.query({\r\n      query: getAllSessionsQuery,\r\n    });\r\n\r\n    const getSessions = data && data.sessions;\r\n    const refinedSessions = getSessions && removeTypename(getSessions);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      sessions: refinedSessions,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  const getSessionName = sessions && {\r\n    ...getSelectedObject(sessions, sessionID),\r\n  };\r\n\r\n  const getSessionsOptions =\r\n    sessions &&\r\n    sessions.map((item) => ({ value: item.id, label: item.sessionName }));\r\n\r\n  useEffect(() => {\r\n    loadExamData();\r\n    loadSessionData();\r\n  }, []);\r\n\r\n  console.dir(getSessionName);\r\n\r\n  const loadExamSessionData = async () => {\r\n    console.dir(\"running exam session query\");\r\n    const { data, loading } = await client.query({\r\n      skip: !examID || !sessionID,\r\n      query: getExamSessionQuery,\r\n      variables: {\r\n        exam: examID && getExamName,\r\n        session: sessionID && getSessionName,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getExamSessions = data && data.examSessions;\r\n    const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n    const reducedES = refinedES && refinedES[0];\r\n    console.log(reducedES);\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      examSessions: reducedES,\r\n    }));\r\n  };\r\n  console.dir(state);\r\n\r\n  useEffect(() => {\r\n    loadExamSessionData();\r\n  }, [examID, sessionID]);\r\n\r\n  const loadCenterData = async () => {\r\n    const { data } = await client.query({\r\n      skip: !centerNumber,\r\n      query: getSingleCenterQuery,\r\n      variables: { centerNumber: centerNumber },\r\n    });\r\n\r\n    const { centerByNumber } = { ...data };\r\n    const newCenterByNumber = removeTypename(centerByNumber);\r\n    console.log(newCenterByNumber);\r\n    setState((state) => ({ ...state, centerByNumber: newCenterByNumber }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCenterData();\r\n  }, [centerNumber]);\r\n\r\n  const loadCESData = async () => {\r\n    const { error, data } = await client.query({\r\n      query: getSingleCenterExamSessionQuery,\r\n      variables: {\r\n        examSession: examSessions && examSessions,\r\n        center: centerByNumber && centerByNumber,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    const getCenterExamSessionsByCode = data && data.centerExamSessionsByCode;\r\n    console.log(getCenterExamSessionsByCode);\r\n    const refinedCenterExamSessions =\r\n      getCenterExamSessionsByCode &&\r\n      removeTypename(getCenterExamSessionsByCode);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      centerExamSessions: refinedCenterExamSessions,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCESData();\r\n  }, [centerNumber, examSessions]);\r\n\r\n  // transform the array into a single object\r\n  const getCESID = centerExamSessions && centerExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  console.log(centerByNumber);\r\n\r\n  // const getCenterExamSessionsByCode =\r\n  //   dataCES && dataCES.centerExamSessionsByCode;\r\n  // console.log(getCenterExamSessionsByCode);\r\n  // // remove typename from the object\r\n  // const refinedCenterExamSessionsByCode =\r\n  //   getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // // transform the array into a single object\r\n  // const getCES =\r\n  //   refinedCenterExamSessionsByCode && refinedCenterExamSessionsByCode[0];\r\n  // console.log(getCES);\r\n\r\n\r\n  const loadExaminerData=async ()=>{\r\n    const {error, data}=  await client.query({\r\n      skip: !getCESID || !examinerCode,\r\n      query:getCESExaminerQuery,\r\n    variables: {\r\n      centerExamSession: getCESID && getCESID,\r\n      examiner: examinerCode && makeExaminerObject(examinerCode),\r\n    },\r\n\r\n  });\r\n  const getCESExaminers =\r\n    data && data.getCenterExamSessionExaminers\r\n  const refinedCESExaminer = getCESExaminers && removeTypename(getCESExaminers);\r\n  const reducedCESExaminer = refinedCESExaminer && refinedCESExaminer[0];\r\n  console.log(reducedCESExaminer);\r\n setState((prev) => ({\r\n      ...prev,\r\n      CESExaminer: reducedCESExaminer,\r\n    }));\r\n  }\r\n\r\n useEffect(()=>{\r\nloadExaminerData()\r\n\r\n },[getCESID ,examinerCode])\r\n\r\n  const [createReport, { loading, error }] = useMutation(\r\n    createNewReportMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createReport({\r\n          variables: {\r\n            ...values,\r\n            reportImage: reportImage,\r\n            centerExamSessionExaminer: reducedCESExaminer && reducedCESExaminer,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          setNotify({\r\n            isOpen: true,\r\n            message: \"Rapport créé avec success\",\r\n            type: \"success\",\r\n          });\r\n          resetForm({ values: \"\" });\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        color=\"primary\"\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h6\"\r\n                      >\r\n                        Rapport de fin de session\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                <Grid container  spacing={10}>\r\n                  <Grid item className={classes.centerAll} xs={12} sm={6}>\r\n                      <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"file\" />}\r\n                        label=\"Choisir le rapport\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={uploadFile}\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        name=\"centerName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom du centre\"\r\n                        fullWidth\r\n                        value={\r\n                          (centerByNumber && centerByNumber.centerCode) || \"\"\r\n                        }\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"centerNumber\"\r\n                        type=\"number\"\r\n                        component={TextField}\r\n                        label=\"Numéro du centre\"\r\n                        fullWidth\r\n                        value={(centerNumber && centerNumber) || 0}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        disabled={isSubmitting}\r\n                        helpertext={<ErrorMessage name=\"centerNumber\" />}\r\n                      />\r\n\r\n\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"sessionID\" />}\r\n                        component={Select}\r\n                        options={getSessionsOptions}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"sessionID\");\r\n                        }}\r\n                        name=\"sessionID\"\r\n                        placeholder=\"La session\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examID\" />}\r\n                        component={Select}\r\n                        options={getExamsOptions}\r\n                        onChange={(event) => {\r\n                          handleSelectChange(event, \"examID\");\r\n                        }}\r\n                        name=\"examID\"\r\n                        placeholder=\"L'Examen\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <Field\r\n                      variant=\"outlined\"\r\n                      helpertext={<ErrorMessage name=\"reportName\" />}\r\n                      component={TextField}\r\n                      name=\"reportName\"\r\n                      type=\"text\"\r\n                      label=\"Titre du Rapport\"\r\n                      disabled={isSubmitting}\r\n                      />\r\n                      </Grid>\r\n                      <Grid item className={classes.centerAll}  xs={12} sm={6}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        helpertext={<ErrorMessage name=\"examinerCode\" />}\r\n                        component={TextField}\r\n                        onChange={handleChange}\r\n                        value={state.examinerCode}\r\n                        name=\"examinerCode\"\r\n                        type=\"text\"\r\n                        label=\"Code Secret de l'examinateur\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n\r\n                      <div className={classes.picStyled}>\r\n                        {!reportImage ? (\r\n                          <CircularProgress />\r\n                        ) : (\r\n                          <img\r\n                            style={{\r\n                              height: \"15rem\",\r\n                              width: \"15rem\",\r\n                              display: \"grid\",\r\n                              backgroundSize: \"contain\",\r\n                              backgroundPosition: \"center\",\r\n                              placeItems: \"center\",\r\n                              borderRadius: \"0.5rem\",\r\n                            }}\r\n                            src={reportImage}\r\n                            alt=\"Upload image\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <Notification notify={notify} setNotify={setNotify} />\r\n\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        {(isSubmitting || loading) && <CircularProgress />}\r\n                        {isSubmitting\r\n                          ? \"Nouveau rapport en création\"\r\n                          : \"Créer Rapport\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}