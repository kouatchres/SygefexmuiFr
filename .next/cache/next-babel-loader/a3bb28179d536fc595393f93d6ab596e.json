{"ast":null,"code":"var _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\subDivision\\\\UpdateSubDivision.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Error from \"../ErrorMessage.js\";\nimport useForm from \"../utils/useForm\";\nimport { Formik, Form } from \"formik\";\nimport { StyledPage } from \"../styles/StyledPage\";\nimport { singleSubDivisionQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { updateSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport * as Yup from \"yup\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { StyledButton, ButtonStyled, StyledForm, SygexInput } from \"../utils/FormInputs\";\nconst validationSchema = Yup.object().shape({\n  subDivName: Yup.string().required(\"Nom du arrondissement Obligatoire\"),\n  subDivCode: Yup.string().required(\"Code du arrondissement Obligatoire\")\n});\n\nconst UpdateSubDivision = props => {\n  const [state, setState] = useForm({\n    subDivName: \"\",\n    subDivCode: \"\"\n  });\n  const client = useApolloClient();\n\n  const loadSubDivData = async () => {\n    const {\n      data,\n      error\n    } = await client.query({\n      query: singleSubDivisionQuery,\n      variables: {\n        id: props.id\n      }\n    });\n    const getSubDivData = data.subDivision;\n    const {\n      subDivName,\n      subDivCode\n    } = getSubDivData;\n    setState({\n      subDivName: subDivName,\n      subDivCode: subDivCode\n    });\n    return getSubDivData;\n  };\n\n  useEffect(() => {\n    loadSubDivData();\n  }, []);\n  console.log(state);\n  const [updateSubDivision] = useMutation(updateSubDivisionMutation, {\n    variables: {\n      id: props.id\n    }\n  });\n  return __jsx(Formik, {\n    initialValues: state || initialValues,\n    validationSchema: validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      const res = await updateSubDivision({\n        variables: _objectSpread({}, values)\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm(true);\n        setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    isSubmitting\n  }) => __jsx(StyledPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Modification d'Info Arrondissement\"), __jsx(StyledForm, {\n    disabled: isSubmitting,\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(SygexInput, {\n    type: \"text\",\n    id: \"subDivName\",\n    name: \"subDivName\",\n    label: \"Nom Arrondissement\",\n    required: true,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), __jsx(SygexInput, {\n    type: \"text\",\n    id: \"subDivCode\",\n    name: \"subDivCode\",\n    label: \"Code Arrondissement\",\n    required: true,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), __jsx(ButtonStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Valid\", isSubmitting ? \"ation en cours\" : \"er\"))))));\n};\n\nexport default UpdateSubDivision;","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/subDivision/UpdateSubDivision.jsx"],"names":["React","useEffect","Error","useForm","Formik","Form","StyledPage","singleSubDivisionQuery","updateSubDivisionMutation","Yup","useMutation","useApolloClient","StyledButton","ButtonStyled","StyledForm","SygexInput","validationSchema","object","shape","subDivName","string","required","subDivCode","UpdateSubDivision","props","state","setState","client","loadSubDivData","data","error","query","variables","id","getSubDivData","subDivision","console","log","updateSubDivision","initialValues","values","setSubmitting","resetForm","res","setTimeout","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport useForm from \"../utils/useForm\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { StyledPage } from \"../styles/StyledPage\";\r\nimport { singleSubDivisionQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport { updateSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport {\r\n  StyledButton,\r\n  ButtonStyled,\r\n  StyledForm,\r\n  SygexInput,\r\n} from \"../utils/FormInputs\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  subDivName: Yup.string().required(\"Nom du arrondissement Obligatoire\"),\r\n  subDivCode: Yup.string().required(\"Code du arrondissement Obligatoire\"),\r\n});\r\n\r\nconst UpdateSubDivision = (props) => {\r\n  const [state, setState] = useForm({ subDivName: \"\", subDivCode: \"\" });\r\n  const client = useApolloClient();\r\n\r\n  const loadSubDivData = async () => {\r\n    const { data, error } = await client.query({\r\n      query: singleSubDivisionQuery,\r\n      variables: { id: props.id },\r\n    });\r\n\r\n    const getSubDivData = data.subDivision;\r\n    const { subDivName, subDivCode } = getSubDivData;\r\n    setState({ subDivName: subDivName, subDivCode: subDivCode });\r\n    return getSubDivData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubDivData();\r\n  }, []);\r\n  console.log(state);\r\n  const [updateSubDivision] = useMutation(updateSubDivisionMutation, {\r\n    variables: { id: props.id },\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={state || initialValues}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await updateSubDivision({\r\n          variables: { ...values },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ values, isSubmitting }) => (\r\n        <StyledPage>\r\n          <h4>Modification d'Info Arrondissement</h4>\r\n          <StyledForm disabled={isSubmitting} aria-busy={isSubmitting}>\r\n            <Form>\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"subDivName\"\r\n                name=\"subDivName\"\r\n                label=\"Nom Arrondissement\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n              <SygexInput\r\n                type=\"text\"\r\n                id=\"subDivCode\"\r\n                name=\"subDivCode\"\r\n                label=\"Code Arrondissement\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n              <ButtonStyled>\r\n                <StyledButton type=\"submit\">\r\n                  Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                </StyledButton>\r\n              </ButtonStyled>\r\n            </Form>\r\n          </StyledForm>\r\n        </StyledPage>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSubDivision;\r\n"]},"metadata":{},"sourceType":"module"}