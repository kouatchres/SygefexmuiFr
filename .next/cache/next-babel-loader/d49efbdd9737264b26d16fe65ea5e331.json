{"ast":null,"code":"import _classCallCheck from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\candidate\\\\DeleteCandidate.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteCandidateMutation($id: ID!) {\\n    deleteCandidate(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { getAllCandidatesQuery } from \"../queries&Mutations&Functions/Queries\";\nvar deleteCandidateMutation = gql(_templateObject());\nvar DelBtn = styled.button.withConfig({\n  displayName: \"DeleteCandidate__DelBtn\",\n  componentId: \"rkcxlh-0\"\n})([\"color:white;font-weight:bold;background-color:#375;border-radius:10px;font-size:1.1rem;height:30px;\"]);\n_c = DelBtn;\n\nvar DeleteCandidate = /*#__PURE__*/function (_Component) {\n  _inherits(DeleteCandidate, _Component);\n\n  var _super = _createSuper(DeleteCandidate);\n\n  function DeleteCandidate() {\n    var _this;\n\n    _classCallCheck(this, DeleteCandidate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateCache\", function (cache, payload) {\n      // manually update the cache so that the data are all the same\n      // 1. read the cache for the data we want\n      var data = cache.readQuery({\n        query: getAllCandidatesQuery\n      }); // filter out the deleted candidate from the data in the cache\n\n      data.candidates = data.candidates.filter(function (candidate) {\n        return candidate.id !== payload.data.deleteCandidate.id;\n      }); //  3. write the new data back to the cache\n\n      console.log(\"getting payload\");\n      console.log(payload);\n      cache.writeQuery({\n        query: getAllCandidatesQuery,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteCandidate, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, __jsx(Mutation, {\n        mutation: deleteCandidateMutation,\n        variables: {\n          id: this.props.id\n        },\n        update: this.updateCache,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, function (deleteCandidate, _ref) {\n        var error = _ref.error;\n        return __jsx(DelBtn, {\n          onClick: function onClick() {\n            if (confirm(\"Sure to delete this candidate ?\")) {\n              deleteCandidate();\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, _this2.props.children);\n      }));\n    }\n  }]);\n\n  return DeleteCandidate;\n}(Component);\n\nexport default DeleteCandidate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DelBtn\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/candidate/DeleteCandidate.jsx"],"names":["React","Component","Mutation","gql","styled","getAllCandidatesQuery","deleteCandidateMutation","DelBtn","button","DeleteCandidate","cache","payload","data","readQuery","query","candidates","filter","candidate","id","deleteCandidate","console","log","writeQuery","props","updateCache","error","confirm","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AAEA,IAAMC,uBAAuB,GAAGH,GAAH,mBAA7B;AAQA,IAAMI,MAAM,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,2GAAZ;KAAMD,M;;IASAE,e;;;;;;;;;;;;;;;;kEACU,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAChC;AACA;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAET;AAAT,OAAhB,CAAb,CAHgC,CAIhC;;AACAO,MAAAA,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAACG,UAAL,CAAgBC,MAAhB,CAAuB,UAAAC,SAAS;AAAA,eAAIA,SAAS,CAACC,EAAV,KAAiBP,OAAO,CAACC,IAAR,CAAaO,eAAb,CAA6BD,EAAlD;AAAA,OAAhC,CAAlB,CALgC,CAMhC;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAD,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAET,qBAAT;AAAgCO,QAAAA,IAAI,EAAJA;AAAhC,OAAjB;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEN,uBAApB;AAA6C,QAAA,SAAS,EAAE;AAAEY,UAAAA,EAAE,EAAE,KAAKK,KAAL,CAAWL;AAAjB,SAAxD;AAA+E,QAAA,MAAM,EAAE,KAAKM,WAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACL,eAAD;AAAA,YAAoBM,KAApB,QAAoBA,KAApB;AAAA,eACC,MAAC,MAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAIC,OAAO,CAAC,iCAAD,CAAX,EAAgD;AAC9CP,cAAAA,eAAe;AAChB;AACF,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG,MAAI,CAACI,KAAL,CAAWI,QAPd,CADD;AAAA,OADH,CADF,CADF;AAiBD;;;;EA/B2B1B,S;;AAkC9B,eAAeQ,eAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport { getAllCandidatesQuery } from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst deleteCandidateMutation = gql`\r\n  mutation deleteCandidateMutation($id: ID!) {\r\n    deleteCandidate(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst DelBtn = styled.button`\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: #375;\r\n  border-radius: 10px;\r\n  font-size: 1.1rem;\r\n  height: 30px;\r\n`;\r\n\r\nclass DeleteCandidate extends Component {\r\n  updateCache = (cache, payload) => {\r\n    // manually update the cache so that the data are all the same\r\n    // 1. read the cache for the data we want\r\n    const data = cache.readQuery({ query: getAllCandidatesQuery });\r\n    // filter out the deleted candidate from the data in the cache\r\n    data.candidates = data.candidates.filter(candidate => candidate.id !== payload.data.deleteCandidate.id);\r\n    //  3. write the new data back to the cache\r\n    console.log(\"getting payload\");\r\n    console.log(payload);\r\n    cache.writeQuery({ query: getAllCandidatesQuery, data });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Mutation mutation={deleteCandidateMutation} variables={{ id: this.props.id }} update={this.updateCache}>\r\n          {(deleteCandidate, { error }) => (\r\n            <DelBtn\r\n              onClick={() => {\r\n                if (confirm(\"Sure to delete this candidate ?\")) {\r\n                  deleteCandidate();\r\n                }\r\n              }}\r\n            >\r\n              {this.props.children}\r\n            </DelBtn>\r\n          )}\r\n        </Mutation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteCandidate;\r\n"]},"metadata":{},"sourceType":"module"}