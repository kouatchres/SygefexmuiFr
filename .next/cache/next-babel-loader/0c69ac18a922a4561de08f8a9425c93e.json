{"ast":null,"code":"import _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\region\\\\RegionToModifyHook.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Link from \"next/link\";\nimport { Formik, Form } from 'formik';\nimport styled from \"styled-components\";\nimport DeleteRegion from './DeleteRegion';\nimport Error from \"../ErrorMessage\";\nimport useForm from '../utils/useForm';\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\nimport { MinimStyledPage } from \"../styles/StyledPage\";\nimport { removeTypename } from '../queries&Mutations&Functions/Functions';\nimport { deleteRegionMutation } from '../queries&Mutations&Functions/Mutations';\nimport { StyledForm, SygefexSelect, ButtonStyled, StyledButton } from '../utils/FormInputs';\nvar InputGroup = styled.div.withConfig({\n  displayName: \"RegionToModifyHook__InputGroup\",\n  componentId: \"sc-45hgvv-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;min-width:12rem;\"]);\n_c = InputGroup;\nvar TwoGroups = styled.div.withConfig({\n  displayName: \"RegionToModifyHook__TwoGroups\",\n  componentId: \"sc-45hgvv-1\"\n})([\"display:flex;flex-direction:column;\"]);\n_c2 = TwoGroups;\nvar AllControls = styled.div.withConfig({\n  displayName: \"RegionToModifyHook__AllControls\",\n  componentId: \"sc-45hgvv-2\"\n})([\"display:flex;flex-direction:column;min-width:15rem;\"]);\n_c3 = AllControls;\nvar Buttons = styled.div.withConfig({\n  displayName: \"RegionToModifyHook__Buttons\",\n  componentId: \"sc-45hgvv-3\"\n})([\"a{text-decoration:none;}display:grid;grid-template-columns:1fr 1fr;grid-gap:1rem;margin:0 auto;padding-left:1rem;align-items:center;justify-content:center;\"]);\n_c4 = Buttons;\n\nvar RegionToModifyHook = function RegionToModifyHook() {\n  _s();\n\n  var _useForm = useForm({\n    regionID: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 3),\n      state = _useForm2[0],\n      setState = _useForm2[1],\n      handleReactSelectChange = _useForm2[2];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        type = _e$target.type;\n    var val = type === \"number\" ? parseInt(value) : value;\n    setState(_defineProperty({}, name, val));\n  };\n\n  var _useQuery = useQuery(getAllRegionsQuery),\n      dataRegions = _useQuery.data,\n      loading = _useQuery.loading,\n      errorReg = _useQuery.error;\n\n  var getRegions = dataRegions && dataRegions.regions;\n\n  var _getRegions = _objectSpread({}, getRegions),\n      region = _getRegions.region;\n\n  console.log(getRegions);\n  var getRegionsOptions = getRegions && getRegions.map(function (item) {\n    return {\n      value: item.id,\n      label: item.regName\n    };\n  });\n  state.regionID && console.log(state.regionID);\n\n  var _useMutation = useMutation(deleteRegionMutation, {\n    variables: {\n      id: state.regionID\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteRegion = _useMutation2[0];\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        isSubmitting = _ref.isSubmitting;\n    return __jsx(MinimStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Correction Info Region\"), __jsx(Error, {\n      error: errorReg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting || loading,\n      \"aria-busy\": isSubmitting || loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(AllControls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, __jsx(TwoGroups, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, __jsx(SygefexSelect, {\n      name: \"regionID\",\n      onChange: handleReactSelectChange,\n      options: getRegionsOptions,\n      placeholder: \"La rÃ©gion\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), __jsx(Buttons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, __jsx(DeleteRegion, {\n      id: state.regionID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, \"Supprimer\")), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: \"../updates/updateRegion\",\n        query: state.regionID && {\n          id: state.regionID\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }\n    }, \"Modifier\"))))))))));\n  });\n};\n\n_s(RegionToModifyHook, \"dbeM76Wi4j08PZPvs98KVfSXXaw=\", false, function () {\n  return [useForm, useQuery, useMutation];\n});\n\n_c5 = RegionToModifyHook;\nexport default RegionToModifyHook;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InputGroup\");\n$RefreshReg$(_c2, \"TwoGroups\");\n$RefreshReg$(_c3, \"AllControls\");\n$RefreshReg$(_c4, \"Buttons\");\n$RefreshReg$(_c5, \"RegionToModifyHook\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/region/RegionToModifyHook.jsx"],"names":["React","useQuery","useMutation","Link","Formik","Form","styled","DeleteRegion","Error","useForm","getAllRegionsQuery","MinimStyledPage","removeTypename","deleteRegionMutation","StyledForm","SygefexSelect","ButtonStyled","StyledButton","InputGroup","div","TwoGroups","AllControls","Buttons","RegionToModifyHook","regionID","state","setState","handleReactSelectChange","handleChange","e","target","name","value","type","val","parseInt","dataRegions","data","loading","errorReg","error","getRegions","regions","region","console","log","getRegionsOptions","map","item","id","label","regName","variables","deleteRegion","values","isSubmitting","pathname","query"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport Link from \"next/link\";\r\nimport { Formik, Form } from 'formik';\r\nimport styled from \"styled-components\";\r\nimport DeleteRegion from './DeleteRegion'\r\nimport Error from \"../ErrorMessage\";\r\nimport useForm from '../utils/useForm'\r\nimport { getAllRegionsQuery } from \"../queries&Mutations&Functions/Queries\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport { removeTypename } from '../queries&Mutations&Functions/Functions'\r\nimport { deleteRegionMutation } from '../queries&Mutations&Functions/Mutations'\r\nimport { StyledForm, SygefexSelect, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\n\r\n\r\n\r\nconst InputGroup = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n    min-width:12rem;\r\n   \r\n`;\r\n\r\nconst TwoGroups = styled.div`\r\n    \r\n    display: flex;\r\n   flex-direction:column;\r\n  \r\n`;\r\n\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\nmin-width:15rem;\r\n\r\n`;\r\n\r\n\r\nconst Buttons = styled.div`\r\na{text-decoration:none;}\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr;\r\ngrid-gap:1rem;\r\nmargin:0 auto;\r\npadding-left:1rem;\r\nalign-items:center;\r\njustify-content:center;\r\n\r\n`;\r\n\r\nconst RegionToModifyHook = () => {\r\n  const [state, setState, handleReactSelectChange] = useForm({ regionID: \"\" });\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n\r\n  const { data: dataRegions, loading, error: errorReg } = useQuery(getAllRegionsQuery)\r\n  \r\n  const getRegions = dataRegions && dataRegions.regions\r\n  const { region } = { ...getRegions }\r\n  console.log(getRegions);\r\n  const getRegionsOptions = getRegions && getRegions.map((item) => ({\r\n    value: item.id, label: item.regName\r\n  }))\r\n  state.regionID && console.log(state.regionID);\r\n\r\n  const [deleteRegion] = useMutation(deleteRegionMutation, {\r\n    variables: { id: state.regionID },\r\n  })\r\n\r\n  return (\r\n    <Formik method=\"POST\">\r\n      {({ values, isSubmitting }) => (\r\n        <MinimStyledPage>\r\n          <h4>Correction Info Region</h4>\r\n          <Error error={errorReg} />\r\n          <StyledForm disabled={isSubmitting  || loading} aria-busy={isSubmitting  || loading} >\r\n            <Form>\r\n              <AllControls>\r\n                <TwoGroups>\r\n\r\n                  <InputGroup>\r\n                    <SygefexSelect name=\"regionID\" onChange={handleReactSelectChange} options={getRegionsOptions} placeholder={\"La rÃ©gion\"} />\r\n                  </InputGroup>\r\n                  <Buttons>\r\n                    <ButtonStyled>\r\n                      <DeleteRegion id={state.regionID}>Supprimer</DeleteRegion>\r\n                    </ButtonStyled>\r\n                    <ButtonStyled>\r\n                      <StyledButton type=\"submit\">\r\n                        <Link href={{\r\n                          pathname: \"../updates/updateRegion\",\r\n                          query: state.regionID && { id: state.regionID },\r\n\r\n                        }}>\r\n                          <a target=\"_blank\">Modifier</a>\r\n                        </Link>\r\n                      </StyledButton>\r\n                    </ButtonStyled>\r\n                  </Buttons>\r\n                </TwoGroups>\r\n              </AllControls>\r\n            </Form>\r\n          </StyledForm>\r\n        </MinimStyledPage >\r\n      )\r\n      }\r\n    </Formik>\r\n\r\n  );\r\n};\r\n\r\nexport default RegionToModifyHook;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}