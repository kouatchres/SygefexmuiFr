{"ast":null,"code":"import _regeneratorRuntime from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"E:/sygefexMui/sygefexMui-frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\sygefexMui\\\\sygefexMui-frontend\\\\src\\\\components\\\\results\\\\center\\\\CenterResultsPerSeries.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport Form from '../../styles/Form';\nimport { MiniStyledPage } from '../../styles/StyledPage';\nimport Error from '../../ErrorMessage';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport { getSelectedObject } from '../../queries&Mutations&Functions/Functions';\nimport { getExamSessionQuery, getAllExamsQuery, getAllSessionsQuery, getSingleCenterExamSessionQuery, getAllSeriesOfACenterExamSessionQuery, getCenterExamSessionSeriesQuery, getSingleCenterQuery } from '../../queries&Mutations&Functions/Queries';\nvar StyledDivision = styled.div.withConfig({\n  displayName: \"CenterResultsPerSeries__StyledDivision\",\n  componentId: \"sc-1bsgxra-0\"\n})([\"display:grid;grid-template-columns:1fr;text-align:center;margin:0 auto;.submitButton{paddding-top:2rem;}\"]);\n_c = StyledDivision;\nvar OtherSelect = styled.div.withConfig({\n  displayName: \"CenterResultsPerSeries__OtherSelect\",\n  componentId: \"sc-1bsgxra-1\"\n})([\"display:block;text-align:center;margin:0 auto;\"]);\n_c2 = OtherSelect;\n\nvar CenterResultsPerSeries = /*#__PURE__*/function (_Component) {\n  _inherits(CenterResultsPerSeries, _Component);\n\n  var _super = _createSuper(CenterResultsPerSeries);\n\n  function CenterResultsPerSeries() {\n    var _this;\n\n    _classCallCheck(this, CenterResultsPerSeries);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      examID: \"\",\n      sessionID: \"\",\n      centerNumber: \"\",\n      candCode: \"\",\n      seriesID: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value,\n          type = _e$target.type;\n      var val = type === 'number' ? parseInt(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetForm\", function () {\n      _this.setState({\n        candCode: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"makeCenterVariableObject\", function (centerCodeValue) {\n      var storedCenter = {\n        centerNumber: \"\".concat(centerCodeValue)\n      };\n      return storedCenter;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"candRegistrationNumber\", function (centerCode, exam, session) {\n      return \"\".concat(centerCode + exam + session);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"makeCandVariableObject\", function (candCodeValue) {\n      var storedCandidate = {\n        candCode: \"\".concat(candCodeValue)\n      };\n      return storedCandidate;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"makeCESSObject\", function (candCodeValue) {\n      var objCESS = {\n        id: \"\".concat(candCodeValue)\n      };\n      return objCESS;\n    });\n\n    return _this;\n  }\n\n  _createClass(CenterResultsPerSeries, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          candCode = _this$state.candCode,\n          seriesID = _this$state.seriesID,\n          examID = _this$state.examID,\n          sessionID = _this$state.sessionID,\n          centerNumber = _this$state.centerNumber;\n      return __jsx(Query, {\n        query: getAllExamsQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        {\n          loading && __jsx(\"p\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 36\n            }\n          }, \"loading...\");\n        }\n        {\n          error && __jsx(Error, {\n            error: error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 34\n            }\n          });\n        }\n        var exams = data.exams;\n        console.log(exams);\n\n        var getExamName = exams && _objectSpread({}, getSelectedObject(exams, examID));\n\n        var refinedExams = exams && exams.map(function (_ref2) {\n          var __typename = _ref2.__typename,\n              examName = _ref2.examName,\n              others = _objectWithoutProperties(_ref2, [\"__typename\", \"examName\"]);\n\n          return others;\n        });\n        return __jsx(Query, {\n          query: getAllSessionsQuery,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        }, function (_ref3) {\n          var data = _ref3.data,\n              loading = _ref3.loading,\n              error = _ref3.error;\n          {\n            loading && __jsx(\"p\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }\n            }, \"loading...\");\n          }\n          {\n            error && __jsx(Error, {\n              error: error,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 47\n              }\n            });\n          }\n          var sessions = data.sessions;\n          console.log(sessions);\n\n          var getSessionName = sessions && _objectSpread({}, getSelectedObject(sessions, sessionID));\n\n          var refinedSessions = sessions && sessions.map(function (_ref4) {\n            var __typename = _ref4.__typename,\n                sessionName = _ref4.sessionName,\n                others = _objectWithoutProperties(_ref4, [\"__typename\", \"sessionName\"]);\n\n            return others;\n          });\n          return __jsx(Query, {\n            query: getExamSessionQuery,\n            variables: {\n              exam: refinedExams && getSelectedObject(refinedExams, examID),\n              session: refinedSessions && getSelectedObject(refinedSessions, sessionID)\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }\n          }, function (_ref5) {\n            var data = _ref5.data,\n                error = _ref5.error,\n                loading = _ref5.loading;\n            console.log(data);\n\n            var _data = _objectSpread({}, data),\n                examSessions = _data.examSessions;\n\n            var refinedES = examSessions && examSessions.map(function (_ref6) {\n              var __typename = _ref6.__typename,\n                  others = _objectWithoutProperties(_ref6, [\"__typename\"]);\n\n              return others;\n            });\n            var reducedES = refinedES && refinedES.reduce(function (item) {\n              return item;\n            });\n            console.log(reducedES);\n            return __jsx(Query, {\n              query: getSingleCenterQuery,\n              variables: {\n                centerNumber: centerNumber\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 49\n              }\n            }, function (_ref7) {\n              var data = _ref7.data,\n                  error = _ref7.error,\n                  loading = _ref7.loading;\n              {\n                loading && __jsx(\"p\", {\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 70\n                  }\n                }, \"...Loading\");\n              }\n              {\n                error && __jsx(Error, {\n                  error: error,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 68\n                  }\n                });\n              }\n\n              var _data2 = _objectSpread({}, data),\n                  centerByNumber = _data2.centerByNumber;\n\n              centerByNumber && delete centerByNumber.__typename;\n              console.log(centerByNumber);\n              return __jsx(Query, {\n                query: getSingleCenterExamSessionQuery,\n                variables: {\n                  examSession: reducedES && reducedES,\n                  center: centerByNumber && centerByNumber\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 61\n                }\n              }, function (_ref8) {\n                var data = _ref8.data,\n                    error = _ref8.error,\n                    loading = _ref8.loading;\n                {\n                  loading && __jsx(\"p\", {\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 82\n                    }\n                  }, \"...Loading\");\n                }\n                {\n                  error && __jsx(Error, {\n                    error: error,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 80\n                    }\n                  });\n                }\n\n                var _data3 = _objectSpread({}, data),\n                    centerExamSessionsByCode = _data3.centerExamSessionsByCode;\n\n                console.log(data);\n                console.log(centerExamSessionsByCode);\n                var reducesCES = centerExamSessionsByCode && centerExamSessionsByCode.reduce(function (item) {\n                  return item;\n                });\n                console.log(reducesCES); // remove typename from the object\n\n                var refinedCenterExamSessions = centerExamSessionsByCode && centerExamSessionsByCode.map(function (_ref9) {\n                  var __typename = _ref9.__typename,\n                      others = _objectWithoutProperties(_ref9, [\"__typename\"]);\n\n                  return others;\n                }); // transform the array into a single object\n\n                var getObj = refinedCenterExamSessions && refinedCenterExamSessions.reduce(function (item) {\n                  return item;\n                });\n                console.log(getObj);\n                return __jsx(Query, {\n                  query: getAllSeriesOfACenterExamSessionQuery,\n                  variables: {\n                    id: getObj && getObj.id\n                  },\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 73\n                  }\n                }, function (_ref10) {\n                  var data = _ref10.data,\n                      loading = _ref10.loading,\n                      error = _ref10.error;\n                  {\n                    loading && __jsx(\"p\", {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 94\n                      }\n                    }, \"...Loading\");\n                  }\n                  {\n                    error && __jsx(Error, {\n                      error: error,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 92\n                      }\n                    });\n                  }\n                  console.log(data);\n                  var centerExamSession = data.centerExamSession;\n\n                  var seriesCES = _objectSpread({}, centerExamSession);\n\n                  var centerExamSessionSeries = seriesCES.centerExamSessionSeries;\n                  console.log(centerExamSessionSeries); // get all the series out of this object\n\n                  var newSeries = centerExamSessionSeries && centerExamSessionSeries.map(function (item) {\n                    return item.series;\n                  });\n                  var refinedSeries = newSeries && newSeries.map(function (_ref11) {\n                    var __typename = _ref11.__typename,\n                        seriesName = _ref11.seriesName,\n                        others = _objectWithoutProperties(_ref11, [\"__typename\", \"seriesName\"]);\n\n                    return others;\n                  });\n                  var seriesOptions = newSeries && newSeries.map(function (item) {\n                    return __jsx(\"option\", {\n                      key: item.id,\n                      value: item.id,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 85\n                      }\n                    }, item.seriesName);\n                  });\n                  return __jsx(Query, {\n                    query: getCenterExamSessionSeriesQuery,\n                    variables: {\n                      centerExamSession: getObj && getObj,\n                      series: refinedSeries && getSelectedObject(refinedSeries, seriesID)\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 85\n                    }\n                  }, function (_ref12) {\n                    var data = _ref12.data,\n                        error = _ref12.error,\n                        loading = _ref12.loading;\n                    {\n                      loading && __jsx(\"p\", {\n                        __self: _this2,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 106\n                        }\n                      }, \"...Loading\");\n                    }\n                    {\n                      error && __jsx(Error, {\n                        error: error,\n                        __self: _this2,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 104\n                        }\n                      });\n                    }\n\n                    var _data4 = _objectSpread({}, data),\n                        centerExamSessionSerieses = _data4.centerExamSessionSerieses;\n\n                    var getCESS = centerExamSessionSerieses && centerExamSessionSerieses.reduce(function (item) {\n                      return item;\n                    });\n                    console.log(getCESS);\n                    console.log(refinedSeries);\n\n                    var _getCESS = _objectSpread({}, getCESS),\n                        idObj = _getCESS.id;\n\n                    var refinedCESS = idObj && _this2.makeCESSObject(idObj);\n\n                    console.log(refinedCESS);\n                    refinedCESS && Router.push({\n                      pathname: '/show/results/centerResults/centerResultsForSeries',\n                      query: {\n                        id: refinedCESS.id\n                      }\n                    });\n                    return __jsx(MiniStyledPage, {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 97\n                      }\n                    }, __jsx(Form, {\n                      method: \"POST\",\n                      onSubmit: /*#__PURE__*/function () {\n                        var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  e.preventDefault();\n\n                                  _this2.resetForm();\n\n                                case 2:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        return function (_x) {\n                          return _ref13.apply(this, arguments);\n                        };\n                      }(),\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 101\n                      }\n                    }, __jsx(\"h4\", {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 105\n                      }\n                    }, \"Resultats pr S\\xE9rie\"), __jsx(Error, {\n                      error: error,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 105\n                      }\n                    }), __jsx(\"fieldset\", {\n                      disabled: loading,\n                      \"aria-busy\": loading,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 105\n                      }\n                    }, __jsx(StyledDivision, {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 109\n                      }\n                    }, __jsx(OtherSelect, {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 113\n                      }\n                    }, __jsx(\"input\", {\n                      type: \"textarea\",\n                      id: \"centerName\",\n                      name: \"centerName\",\n                      placeholder: \"Nom du centre\",\n                      value: centerByNumber && centerByNumber.centerCode,\n                      rows: \"2\",\n                      wrap: \"soft\",\n                      readOnly: true,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 117\n                      }\n                    }), __jsx(\"input\", {\n                      type: \"number\",\n                      id: \"centerNumber\",\n                      name: \"centerNumber\",\n                      placeholder: \"Num\\xE9ro du centre\",\n                      value: centerNumber,\n                      onChange: _this2.handleChange,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 117\n                      }\n                    }), __jsx(\"select\", {\n                      type: \"select\",\n                      id: \"sessionID\",\n                      name: \"sessionID\",\n                      value: sessionID,\n                      onChange: _this2.handleChange,\n                      required: true,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 117\n                      }\n                    }, __jsx(\"option\", {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 121\n                      }\n                    }, \"La Session\"), sessions && sessions.map(function (item) {\n                      return __jsx(\"option\", {\n                        key: item.id,\n                        value: item.id,\n                        __self: _this2,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 266,\n                          columnNumber: 125\n                        }\n                      }, item.sessionName);\n                    })), __jsx(\"select\", {\n                      type: \"select\",\n                      id: \"examID\",\n                      name: \"examID\",\n                      value: examID,\n                      onChange: _this2.handleChange,\n                      required: true,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 117\n                      }\n                    }, __jsx(\"option\", {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 121\n                      }\n                    }, \"L'Examen\"), exams && exams.map(function (item) {\n                      return __jsx(\"option\", {\n                        key: item.id,\n                        value: item.id,\n                        __self: _this2,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 125\n                        }\n                      }, item.examName);\n                    })), __jsx(\"select\", {\n                      type: \"select\",\n                      id: \"seriesID\",\n                      name: \"seriesID\",\n                      value: seriesID,\n                      onChange: _this2.handleChange,\n                      required: true,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 117\n                      }\n                    }, __jsx(\"option\", {\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 121\n                      }\n                    }, \"La S\\xE9rie\"), seriesOptions && seriesOptions))))));\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return CenterResultsPerSeries;\n}(Component);\n\nexport default CenterResultsPerSeries;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledDivision\");\n$RefreshReg$(_c2, \"OtherSelect\");","map":{"version":3,"sources":["E:/sygefexMui/sygefexMui-frontend/src/components/results/center/CenterResultsPerSeries.jsx"],"names":["React","Component","Mutation","Query","Form","MiniStyledPage","Error","styled","Router","getSelectedObject","getExamSessionQuery","getAllExamsQuery","getAllSessionsQuery","getSingleCenterExamSessionQuery","getAllSeriesOfACenterExamSessionQuery","getCenterExamSessionSeriesQuery","getSingleCenterQuery","StyledDivision","div","OtherSelect","CenterResultsPerSeries","examID","sessionID","centerNumber","candCode","seriesID","e","target","name","value","type","val","parseInt","setState","centerCodeValue","storedCenter","centerCode","exam","session","candCodeValue","storedCandidate","objCESS","id","state","data","loading","error","exams","console","log","getExamName","refinedExams","map","__typename","examName","others","sessions","getSessionName","refinedSessions","sessionName","examSessions","refinedES","reducedES","reduce","item","centerByNumber","examSession","center","centerExamSessionsByCode","reducesCES","refinedCenterExamSessions","getObj","centerExamSession","seriesCES","centerExamSessionSeries","newSeries","series","refinedSeries","seriesName","seriesOptions","centerExamSessionSerieses","getCESS","idObj","refinedCESS","makeCESSObject","push","pathname","query","preventDefault","resetForm","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Mutation, Query } from 'react-apollo';\r\nimport Form from '../../styles/Form';\r\nimport { MiniStyledPage } from '../../styles/StyledPage';\r\nimport Error from '../../ErrorMessage';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router'\r\nimport { getSelectedObject } from '../../queries&Mutations&Functions/Functions';\r\nimport {\r\n    getExamSessionQuery,\r\n    getAllExamsQuery,\r\n    getAllSessionsQuery,\r\n    getSingleCenterExamSessionQuery,\r\n    getAllSeriesOfACenterExamSessionQuery,\r\n    getCenterExamSessionSeriesQuery,\r\n    getSingleCenterQuery\r\n} from '../../queries&Mutations&Functions/Queries';\r\n\r\nconst StyledDivision = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n    .submitButton{\r\npaddding-top:2rem;\r\n    }\r\n`;\r\n\r\n\r\nconst OtherSelect = styled.div`\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nclass CenterResultsPerSeries extends Component {\r\n    state = {\r\n        examID: \"\",\r\n        sessionID: \"\",\r\n        centerNumber: \"\",\r\n        candCode: \"\",\r\n        seriesID: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        const val = type === 'number' ? parseInt(value) : value;\r\n        this.setState({ [name]: val });\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState({ candCode: '' });\r\n    };\r\n\r\n    makeCenterVariableObject = (centerCodeValue) => {\r\n        const storedCenter = {\r\n            centerNumber: `${centerCodeValue}`\r\n        };\r\n        return storedCenter;\r\n    };\r\n\r\n    candRegistrationNumber = (centerCode, exam, session) => {\r\n\r\n        return `${centerCode + exam + session}`\r\n\r\n    };\r\n    makeCandVariableObject = (candCodeValue) => {\r\n        const storedCandidate = {\r\n            candCode: `${candCodeValue}`\r\n        };\r\n        return storedCandidate;\r\n    };\r\n    makeCESSObject = (candCodeValue) => {\r\n        const objCESS = {\r\n            id: `${candCodeValue}`\r\n        };\r\n        return objCESS;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            candCode,\r\n            seriesID,\r\n            examID,\r\n            sessionID,\r\n            centerNumber\r\n        } = this.state;\r\n        return (\r\n            <Query query={getAllExamsQuery}>\r\n                {({ data, loading, error }) => {\r\n                    {\r\n                        loading && <p>loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error} />;\r\n                    }\r\n\r\n                    const { exams } = data;\r\n                    console.log(exams);\r\n                    const getExamName = exams && { ...getSelectedObject(exams, examID) }\r\n                    const refinedExams =\r\n                        exams && exams.map(({ __typename, examName, ...others }) => others);\r\n\r\n                    return (\r\n                        <Query query={getAllSessionsQuery}>\r\n                            {({ data, loading, error }) => {\r\n                                {\r\n                                    loading && (\r\n                                        <p >\r\n                                            loading...\r\n                                        </p>\r\n                                    );\r\n                                }\r\n                                {\r\n                                    error && (<Error error={error} />);\r\n                                }\r\n\r\n                                const { sessions } = data;\r\n                                console.log(sessions);\r\n                                const getSessionName = sessions && { ...getSelectedObject(sessions, sessionID) }\r\n                                const refinedSessions = sessions && sessions.map(({ __typename, sessionName, ...others }) => others);\r\n\r\n                                return (\r\n\r\n                                    <Query query={getExamSessionQuery}\r\n                                        variables={{\r\n\r\n                                            exam: refinedExams && getSelectedObject(refinedExams, examID),\r\n                                            session: refinedSessions && getSelectedObject(refinedSessions, sessionID)\r\n                                        }}  >\r\n                                        {({ data, error, loading }) => {\r\n                                            console.log(data)\r\n                                            const { examSessions } = { ...data }\r\n                                            const refinedES = examSessions && examSessions.map(({ __typename, ...others }) => others)\r\n                                            const reducedES = refinedES && refinedES.reduce((item) => item)\r\n                                            console.log(reducedES)\r\n\r\n                                            return (\r\n                                                <Query query={getSingleCenterQuery}\r\n                                                    variables={{ centerNumber: centerNumber, }}  >\r\n                                                    {({ data, error, loading }) => {\r\n                                                        { loading && <p>...Loading</p> }\r\n                                                        { error && <Error error={error} /> }\r\n                                                        const { centerByNumber } = { ...data }\r\n                                                        centerByNumber && delete centerByNumber.__typename\r\n                                                        console.log(centerByNumber)\r\n                                                        return (\r\n                                                            <Query\r\n                                                                query={getSingleCenterExamSessionQuery}\r\n                                                                variables={{\r\n                                                                    examSession: reducedES && reducedES,\r\n                                                                    center: centerByNumber && centerByNumber\r\n                                                                }}>\r\n                                                                {({ data, error, loading }) => {\r\n                                                                    { loading && <p>...Loading</p> }\r\n                                                                    { error && <Error error={error} /> }\r\n                                                                    const { centerExamSessionsByCode } = { ...data }\r\n                                                                    console.log(data);\r\n                                                                    console.log(centerExamSessionsByCode);\r\n                                                                    const reducesCES = centerExamSessionsByCode && centerExamSessionsByCode.reduce((item) => item)\r\n                                                                    console.log(reducesCES);\r\n                                                                    // remove typename from the object\r\n                                                                    const refinedCenterExamSessions =\r\n                                                                        centerExamSessionsByCode && centerExamSessionsByCode.map(({ __typename, ...others }) => others);\r\n                                                                    // transform the array into a single object\r\n                                                                    const getObj = refinedCenterExamSessions && refinedCenterExamSessions.reduce((item) => item);\r\n                                                                    console.log(getObj);\r\n\r\n\r\n                                                                    return (\r\n                                                                        <Query\r\n                                                                            query={getAllSeriesOfACenterExamSessionQuery}\r\n                                                                            variables={{ id: getObj && getObj.id }}>\r\n                                                                            {({ data, loading, error }) => {\r\n                                                                                { loading && <p>...Loading</p> }\r\n                                                                                { error && <Error error={error} /> }\r\n                                                                                console.log(data);\r\n\r\n                                                                                const { centerExamSession } = data;\r\n\r\n                                                                                const seriesCES = {\r\n                                                                                    ...centerExamSession\r\n                                                                                };\r\n                                                                                const { centerExamSessionSeries } = seriesCES;\r\n                                                                                console.log(centerExamSessionSeries);\r\n                                                                                // get all the series out of this object\r\n\r\n                                                                                const newSeries = centerExamSessionSeries && centerExamSessionSeries.map((item) => (item.series))\r\n                                                                                const refinedSeries =\r\n                                                                                    newSeries && newSeries.map(({ __typename, seriesName, ...others }) => others);\r\n\r\n\r\n                                                                                const seriesOptions = newSeries && newSeries.map((item) => (\r\n                                                                                    <option key={item.id} value={item.id}>\r\n                                                                                        {item.seriesName}\r\n                                                                                    </option>\r\n                                                                                ));\r\n\r\n                                                                                return (\r\n\r\n                                                                                    <Query query={getCenterExamSessionSeriesQuery} variables={{\r\n                                                                                        centerExamSession: getObj && getObj,\r\n                                                                                        series: refinedSeries && getSelectedObject(refinedSeries, seriesID)\r\n                                                                                    }}   >\r\n                                                                                        {({ data, error, loading }) => {\r\n                                                                                            { loading && <p>...Loading</p> }\r\n                                                                                            { error && <Error error={error} /> }\r\n                                                                                            const { centerExamSessionSerieses } = { ...data }\r\n                                                                                            const getCESS = centerExamSessionSerieses && centerExamSessionSerieses.reduce((item) => item)\r\n                                                                                            console.log(getCESS)\r\n                                                                                            console.log(refinedSeries)\r\n                                                                                            const { id: idObj } = { ...getCESS }\r\n                                                                                            const refinedCESS = idObj && this.makeCESSObject(idObj)\r\n                                                                                            console.log(refinedCESS)\r\n                                                                                            refinedCESS && Router.push({\r\n                                                                                                pathname: '/show/results/centerResults/centerResultsForSeries',\r\n                                                                                                query: { id: refinedCESS.id }\r\n                                                                                            });\r\n                                                                                            return (\r\n                                                                                                <MiniStyledPage >\r\n                                                                                                    <Form\r\n                                                                                                        method=\"POST\"\r\n                                                                                                        onSubmit={async (e) => {\r\n                                                                                                            e.preventDefault();\r\n                                                                                                            this.resetForm();\r\n\r\n                                                                                                        }}>\r\n                                                                                                        <h4>\r\n                                                                                                            Resultats pr Série\r\n                                                                                                    </h4>\r\n                                                                                                        <Error error={error} />\r\n                                                                                                        <fieldset disabled={loading} aria-busy={loading}>\r\n                                                                                                            <StyledDivision >\r\n\r\n                                                                                                                <OtherSelect >\r\n                                                                                                                    <input\r\n                                                                                                                        type=\"textarea\"\r\n                                                                                                                        id=\"centerName\"\r\n                                                                                                                        name=\"centerName\"\r\n                                                                                                                        placeholder=\"Nom du centre\"\r\n                                                                                                                        value={centerByNumber && centerByNumber.centerCode}\r\n                                                                                                                        rows=\"2\"\r\n                                                                                                                        wrap=\"soft\"\r\n                                                                                                                        readOnly\r\n                                                                                                                    />\r\n                                                                                                                    <input\r\n                                                                                                                        type=\"number\"\r\n                                                                                                                        id=\"centerNumber\"\r\n                                                                                                                        name=\"centerNumber\"\r\n                                                                                                                        placeholder=\"Numéro du centre\"\r\n                                                                                                                        value={centerNumber}\r\n                                                                                                                        onChange={this.handleChange}\r\n                                                                                                                    />\r\n\r\n                                                                                                                    <select\r\n                                                                                                                        type=\"select\"\r\n                                                                                                                        id=\"sessionID\"\r\n                                                                                                                        name=\"sessionID\"\r\n                                                                                                                        value={sessionID}\r\n                                                                                                                        onChange={this.handleChange}\r\n                                                                                                                        required>\r\n                                                                                                                        <option >\r\n                                                                                                                            La Session\r\n                                                                                                                                                                    </option>\r\n                                                                                                                        {sessions && sessions.map((item) => (\r\n                                                                                                                            <option key={item.id} value={item.id}>\r\n                                                                                                                                {item.sessionName}\r\n                                                                                                                            </option>\r\n                                                                                                                        ))}\r\n                                                                                                                    </select>\r\n\r\n                                                                                                                    <select\r\n                                                                                                                        type=\"select\"\r\n                                                                                                                        id=\"examID\"\r\n                                                                                                                        name=\"examID\"\r\n                                                                                                                        value={examID}\r\n                                                                                                                        onChange={this.handleChange}\r\n                                                                                                                        required>\r\n                                                                                                                        <option >\r\n                                                                                                                            L'Examen\r\n                                                                                                                                                                    </option>\r\n                                                                                                                        {exams && exams.map((item) => (\r\n                                                                                                                            <option key={item.id} value={item.id}>\r\n                                                                                                                                {item.examName}\r\n                                                                                                                            </option>\r\n                                                                                                                        ))}\r\n                                                                                                                    </select>\r\n                                                                                                                    <select\r\n                                                                                                                        type=\"select\"\r\n                                                                                                                        id=\"seriesID\"\r\n                                                                                                                        name=\"seriesID\"\r\n                                                                                                                        value={seriesID}\r\n                                                                                                                        onChange={this.handleChange}\r\n                                                                                                                        required>\r\n                                                                                                                        <option >\r\n                                                                                                                            La Série\r\n                                                                                                                                                                    </option>\r\n                                                                                                                        {seriesOptions && seriesOptions}\r\n                                                                                                                    </select>\r\n\r\n\r\n                                                                                                                    {/* <div className=\"submitButton\">\r\n                                                                                                                    <button type=\"submit\">\r\n                                                                                                                        Valid{loading\r\n                                                                                                                            ? 'ation en cours'\r\n                                                                                                                            : 'er'}\r\n                                                                                                                    </button>\r\n                                                                                                                </div> */}\r\n                                                                                                                </OtherSelect>\r\n                                                                                                            </StyledDivision>\r\n                                                                                                        </fieldset>\r\n                                                                                                    </Form>\r\n                                                                                                </MiniStyledPage>\r\n\r\n\r\n                                                                                            )\r\n                                                                                        }}\r\n                                                                                    </Query>\r\n                                                                                )\r\n                                                                            }}\r\n                                                                        </Query>\r\n                                                                    );\r\n                                                                }\r\n                                                                }\r\n                                                            </Query>\r\n                                                        );\r\n                                                    }\r\n                                                    }\r\n                                                </Query>\r\n                                            );\r\n                                        }\r\n                                        }\r\n                                    </Query>\r\n                                );\r\n                            }\r\n                            }\r\n                        </Query>\r\n                    );\r\n                }\r\n                }\r\n            </Query>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CenterResultsPerSeries;\r\n"]},"metadata":{},"sourceType":"module"}