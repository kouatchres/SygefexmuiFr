{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newAttendance.js.d5cda7a60ea0d8f0fd22.hot-update.js","sources":["webpack:///./src/components/attendance/CreateAttendance.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport styled from \"styled-components\";\r\nimport useForm from \"../utils/useForm\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport {\r\n  SygefexSelect,\r\n  SygexInput,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport {\r\n  getObjectFromID,\r\n  getSelectedObject,\r\n  removeTypename,\r\n} from \"../queries&Mutations&Functions/Functions\";\r\nimport { createAttendanceMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  getExamSessionQuery,\r\n  getAllExamsQuery,\r\n  getAllEducationTypesQuery,\r\n  getAllSessionsQuery,\r\n  getSingleCenterExamSessionQuery,\r\n  getAllSpecialtiesOfACenterExamSessionQuery,\r\n  getAllSubjectSpecialtiesOfASpecialtyQuery,\r\n  getRegisteredCandidatesPerSpecialty,\r\n  getSingleCenterQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { FormikRadio } from \"@dccs/react-formik-mui\";\r\nimport { FormLabel, RadioGroup } from \"@material-ui/core\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* min-width: 13rem; */\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst WholeControls = styled.div`\r\n  display: flex;\r\n  flex-direction: Column;\r\n`;\r\n\r\nconst RadioControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* min-width: 17rem; */\r\n`;\r\n\r\nconst RadioButtons = styled.div`\r\nmargin-top: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 1rem;\r\n  label {\r\n    font-size: 1.3rem;\r\n  }\r\n \r\n  align-items: center;\r\n  /* background: ${(props) => props.theme.blues[3]}; */\r\n  .RadioSet {\r\n    FormikRadio{\r\n        font-size:1.5rem\r\n    }\r\n    padding: 0 1rem;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    label {\r\n    font-size: 1.3rem;\r\n  }\r\n  }\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  collected: Yup.string().required(\r\n    \"Le(a) candidat(e) a-t-il(elle) pris le materiel de composition Obligatoire\"\r\n  ),\r\n  handin: Yup.string().required(\r\n    \"Le(s) candidat(e) a-t-il(elle) remis sa feuille de comosition Obligatoire\"\r\n  ),\r\n});\r\n\r\nconst CreateAttendance = () => {\r\n  const [state, setState, handleReactSelectChange] = useForm({\r\n    centerExamSessionSpecialtyID: \"\",\r\n    centerNumber: \"100000\",\r\n    examID: \"\",\r\n    sessionID: \"\",\r\n    educTypeID: \"\",\r\n    specialtyID: \"\",\r\n    subjectSpecialty: \"\",\r\n  });\r\n\r\n  const initialValues = {\r\n    centerNumber: \"100000\",\r\n    collected: \"\",\r\n    handin: \"\",\r\n    subjectSpecialty: \"\",\r\n    candExamSecretCode: \"\",\r\n  };\r\n\r\n  // const getObjectFromID = (suppliedID) => {\r\n  //   const theObject = {\r\n  //     id: `${suppliedID}`,\r\n  //   };\r\n  //   return theObject;\r\n  // };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState({ [name]: val });\r\n  };\r\n\r\n  const {\r\n    data: dataEducType,\r\n    loading: loadingEducType,\r\n    error: errEducType,\r\n  } = useQuery(getAllEducationTypesQuery);\r\n\r\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n  const refinedEducTypes =\r\n    getEducationTypes && removeTypename(getEducationTypes);\r\n  const getEducTypeOptions =\r\n    refinedEducTypes &&\r\n    refinedEducTypes.map((item) => ({\r\n      value: item.id,\r\n      label: item.educationTypeName,\r\n    }));\r\n\r\n  const { data: dataExams, loading: loadingExams, error: errExams } = useQuery(\r\n    getAllExamsQuery\r\n  );\r\n\r\n  const getExams = dataExams && dataExams.exams;\r\n  const removeExamName =\r\n    getExams && getExams.map(({ examName, ...others }) => others);\r\n  const refinedExams = getExams && removeTypename(removeExamName);\r\n\r\n  const getExamName = refinedExams && {\r\n    ...getSelectedObject(refinedExams, state.examID),\r\n  };\r\n  const getExamsOptions =\r\n    getExams &&\r\n    getExams.map((item) => ({ value: item.id, label: item.examName }));\r\n  console.log(getExamName);\r\n\r\n  const {\r\n    data: dataSession,\r\n    loading: loadingSession,\r\n    error: errSession,\r\n  } = useQuery(getAllSessionsQuery);\r\n\r\n  const getSessions = dataSession && dataSession.sessions;\r\n\r\n  const refinedSessions = getSessions && removeTypename(getSessions);\r\n\r\n  const getSessionName = refinedSessions && {\r\n    ...getSelectedObject(refinedSessions, state.sessionID),\r\n  };\r\n  const getSessionsOptions =\r\n    refinedSessions &&\r\n    refinedSessions.map((item) => ({\r\n      value: item.id,\r\n      label: item.sessionName,\r\n    }));\r\n\r\n  const {\r\n    data: dataExamSessions,\r\n    error: errExamSessions,\r\n    loading: loadingExamSession,\r\n  } = useQuery(getExamSessionQuery, {\r\n    skip: !state.examID || !state.sessionID,\r\n    variables: {\r\n      exam: getExamName,\r\n      session: getSessionName,\r\n    },\r\n  });\r\n\r\n  console.log(dataExamSessions);\r\n  const getExamSessions = dataExamSessions && dataExamSessions.examSessions;\r\n  const refinedES = getExamSessions && removeTypename(getExamSessions);\r\n  const reducedES = refinedES && refinedES[0];\r\n  console.log(reducedES);\r\n\r\n  const {\r\n    data: dataCenter,\r\n    error: errCenter,\r\n    loading: loadingCenter,\r\n  } = useQuery(getSingleCenterQuery, {\r\n    variables: { centerNumber: state.centerNumber },\r\n  });\r\n\r\n  const { centerByNumber } = { ...dataCenter };\r\n  const newCenterByNumber = removeTypename(centerByNumber);\r\n  console.log(newCenterByNumber);\r\n\r\n  const { data: dataCES, error: errCES, loading: loadingCES } = useQuery(\r\n    getSingleCenterExamSessionQuery,\r\n    {\r\n      skip: !reducedES || !newCenterByNumber,\r\n      variables: {\r\n        examSession: reducedES && reducedES,\r\n        center: newCenterByNumber && newCenterByNumber,\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(dataCES);\r\n  const getCenterExamSessionsByCode =\r\n    dataCES && dataCES.centerExamSessionsByCode;\r\n  console.log(getCenterExamSessionsByCode);\r\n  const refinedCenterExamSessions =\r\n    getCenterExamSessionsByCode && removeTypename(getCenterExamSessionsByCode);\r\n  // transform the array into a single object\r\n  const getCESID = refinedCenterExamSessions && refinedCenterExamSessions[0];\r\n  console.log(getCESID);\r\n\r\n  const {\r\n    data: dataSpecialtyCES,\r\n    loading: loadingSpecialtyCES,\r\n    error: errSpecialtyCES,\r\n  } = useQuery(getAllSpecialtiesOfACenterExamSessionQuery, {\r\n    variables: getCESID,\r\n  });\r\n\r\n  console.log(dataSpecialtyCES);\r\n  const getCenterExamSession =\r\n    dataSpecialtyCES && dataSpecialtyCES.centerExamSession;\r\n  const { centerExamSessionSpecialty } = { ...getCenterExamSession };\r\n  console.log({ centerExamSessionSpecialty });\r\n\r\n  const newSpecialty =\r\n    centerExamSessionSpecialty &&\r\n    centerExamSessionSpecialty.map((item) => item);\r\n  const refinedCESS = newSpecialty && removeTypename(newSpecialty);\r\n  console.log({ refinedCESS });\r\n  const getCESSOptions =\r\n    refinedCESS &&\r\n    refinedCESS.map((item) => ({\r\n      value: item.id.concat(\"/\", item.specialty.id),\r\n      label: item.specialty.specialtyName,\r\n    }));\r\n  console.log({ state });\r\n  console.log({ getCESID });\r\n  console.log(state.centerExamSessionSpecialtyID);\r\n\r\n  const getCESSSubjIDs = state.centerExamSessionSpecialtyID.split(\"/\");\r\n  console.log(getCESSSubjIDs);\r\n\r\n  const {\r\n    data: dataRegistration,\r\n    loading: loadingReg,\r\n    error: errReg,\r\n  } = useQuery(getRegisteredCandidatesPerSpecialty, {\r\n    skip: !getCESSSubjIDs[0],\r\n    variables: { id: getCESSSubjIDs[0] },\r\n  });\r\n\r\n  console.log({ dataRegistration });\r\n  const { centerExamSessionSpecialty: CESS } = { ...dataRegistration };\r\n  const { registration } = { ...CESS };\r\n  const getCandOptions =\r\n    registration &&\r\n    registration.map((item) => ({\r\n      value: item.candExamSecretCode,\r\n      label: item.candidate.cand1stName.concat(\r\n        \"\",\r\n        item.candidate.cand2ndName,\r\n        \"\",\r\n        item.candRegistrationNumber\r\n      ),\r\n    }));\r\n  console.log({ registration });\r\n  console.log({ getCandOptions });\r\n\r\n  const {\r\n    data: dataSubjSpecialty,\r\n    loading: loadingSubjSpecialty,\r\n    error: errSubjSpecialty,\r\n  } = useQuery(getAllSubjectSpecialtiesOfASpecialtyQuery, {\r\n    skip: !getCESSSubjIDs[1],\r\n    variables: { id: getCESSSubjIDs[1] },\r\n  });\r\n\r\n  console.log(dataSubjSpecialty);\r\n  const getSubjSpecialty = dataSubjSpecialty && dataSubjSpecialty.specialty;\r\n  const { subjectSpecialty } = { ...getSubjSpecialty };\r\n  console.log(subjectSpecialty);\r\n\r\n  const refinedSubjectSpecialty =\r\n    subjectSpecialty && removeTypename(subjectSpecialty);\r\n  const getSubjectSpecialtyOptions =\r\n    refinedSubjectSpecialty &&\r\n    refinedSubjectSpecialty.map((item) => ({\r\n      id: item.id,\r\n      value: item.id,\r\n      label: item.subject.subjectName,\r\n    }));\r\n\r\n  const [createAttendance, { loading, error }] = useMutation(\r\n    createAttendanceMutation\r\n  );\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createAttendance({\r\n          variables: {\r\n            ...values,\r\n            candExamSecretCode: values.candExamSecretCode.value,\r\n            subjectSpecialty: values.subjectSpecialty.value,\r\n          },\r\n        });\r\n\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ setFieldValue, isSubmitting, isValid, dirty }) => {\r\n        return (\r\n          <MinimStyledPage>\r\n            <h4>Présence des candidats a l'Ecrit</h4>\r\n            <Error\r\n              error={\r\n                error ||\r\n                errCenter ||\r\n                errExams ||\r\n                errSession ||\r\n                errExamSessions ||\r\n                errSpecialtyCES ||\r\n                errEducType ||\r\n                errSubjSpecialty ||\r\n                errReg\r\n              }\r\n            />\r\n\r\n            <StyledForm\r\n              disabled={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loading ||\r\n                loadingSpecialtyCES ||\r\n                loadingEducType ||\r\n                loadingSubjSpecialty ||\r\n                loadingCenter ||\r\n                loadingReg\r\n              }\r\n              aria-busy={\r\n                isSubmitting ||\r\n                loadingExams ||\r\n                loadingSession ||\r\n                loadingCES ||\r\n                loadingExamSession ||\r\n                loading ||\r\n                loadingSpecialtyCES ||\r\n                loadingEducType ||\r\n                loadingSubjSpecialty ||\r\n                loadingCenter ||\r\n                loadingReg\r\n              }\r\n            >\r\n              <Form>\r\n                <WholeControls>\r\n                  <InputGroup>\r\n                    <SygexInput\r\n                      value={centerByNumber && centerByNumber.centerCode}\r\n                      name=\"centerName\"\r\n                      type=\"text\"\r\n                      label=\" Nom du centre\"\r\n                    />\r\n                    <SygexInput\r\n                      onChange={handleChange}\r\n                      name=\"centerNumber\"\r\n                      value={state.centerNumber || \"\"}\r\n                      type=\"number\"\r\n                      label=\"Numéro du centre\"\r\n                      disabled={isSubmitting}\r\n                    />\r\n\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"educTypeID\"\r\n                      options={getEducTypeOptions}\r\n                      placeholder={\"Type d'enseignement\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"sessionID\"\r\n                      options={getSessionsOptions}\r\n                      placeholder={\"La Session\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"examID\"\r\n                      options={getExamsOptions}\r\n                      placeholder={\"L'Examen\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={handleReactSelectChange}\r\n                      name=\"centerExamSessionSpecialtyID\"\r\n                      options={getCESSOptions}\r\n                      placeholder={\"Les Spécialités\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) =>\r\n                        setFieldValue(\"subjectSpecialty\", value)\r\n                      }\r\n                      name=\"subjectSpecialty\"\r\n                      placeholder={\"les Matières\"}\r\n                      options={getSubjectSpecialtyOptions}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                    <SygefexSelect\r\n                      onChange={(value) =>\r\n                        setFieldValue(\"candExamSecretCode\", value)\r\n                      }\r\n                      name=\"candExamSecretCode\"\r\n                      options={getCandOptions}\r\n                      placeholder={\"Les candidats par Spécialité\"}\r\n                      disabled={isSubmitting}\r\n                    />\r\n\r\n                    <RadioControls>\r\n                      <RadioButtons>\r\n                        <FormLabel>Collecte Des Materiels</FormLabel>\r\n                        <RadioGroup name=\"collected\" className=\"RadioSet\">\r\n                          <FormikRadio\r\n                            label=\"Oui\"\r\n                            name=\"collected\"\r\n                            value=\"Oui\"\r\n                          />\r\n                          <FormikRadio\r\n                            label=\"Non\"\r\n                            name=\"collected\"\r\n                            value=\"Non\"\r\n                          />\r\n                        </RadioGroup>\r\n                      </RadioButtons>\r\n                      <RadioButtons>\r\n                        <FormLabel>Remise Des Copies</FormLabel>\r\n                        <RadioGroup name=\"handin\" className=\"RadioSet\">\r\n                          <FormikRadio label=\"Oui\" name=\"handin\" value=\"Oui\" />\r\n                          <FormikRadio label=\"Non\" name=\"handin\" value=\"Non\" />\r\n                        </RadioGroup>\r\n                      </RadioButtons>\r\n                    </RadioControls>\r\n                  </InputGroup>\r\n\r\n                  <div>\r\n                    <ButtonStyled>\r\n                      <StyledButton\r\n                        type=\"submit\"\r\n                        disabled={!(dirty && isValid) || isSubmitting}\r\n                      >\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </StyledButton>\r\n                    </ButtonStyled>\r\n                  </div>\r\n                </WholeControls>\r\n              </Form>\r\n            </StyledForm>\r\n          </MinimStyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateAttendance;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAKA;AACA;AAWA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAyBA;AACA;AAGA;AAJA;AACA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AACA;AAqCA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AACA;AA5CA;AAAA;AAAA;AAAA;AACA;AAmDA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhEA;AAAA;AAAA;AAAA;AACA;AAsEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AACA;AAjFA;AA0FA;AACA;AACA;AACA;AAFA;AAFA;AAzFA;AAAA;AAAA;AACA;AAgGA;AACA;AACA;AACA;AACA;AACA;AAtGA;AA4GA;AAAA;AAAA;AADA;AA3GA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AA+GA;AACA;AACA;AAlHA;AAsHA;AACA;AACA;AACA;AAFA;AAFA;AArHA;AAAA;AAAA;AACA;AA6HA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAvIA;AA6IA;AADA;AA5IA;AAAA;AAAA;AACA;AA+IA;AACA;AACA;AAlJA;AAAA;AACA;AAmJA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAvKA;AA6KA;AACA;AAAA;AAAA;AAFA;AA5KA;AAAA;AAAA;AACA;AAgLA;AAAA;AAAA;AACA;AAlLA;AAAA;AACA;AADA;AAAA;AACA;AAmLA;AAEA;AACA;AACA;AAFA;AAAA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAjMA;AAuMA;AACA;AAAA;AAAA;AAFA;AAtMA;AAAA;AAAA;AACA;AA0MA;AACA;AACA;AA7MA;AAAA;AACA;AA6MA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AACA;AArNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4NA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AADA;AACA;AAFA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAaA;AAdaA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}