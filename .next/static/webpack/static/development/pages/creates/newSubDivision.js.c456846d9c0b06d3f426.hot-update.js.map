{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newSubDivision.js.c456846d9c0b06d3f426.hot-update.js","sources":["webpack:///./pages/creates/newSubDivision.jsx","webpack:///./src/components/muiComponents/controls/SygefexMuiSelect.jsx","webpack:///./src/components/queries&Mutations&Functions/Functions.jsx","webpack:///./src/components/subDivision/NewSubDivision.jsx","webpack:///./src/components/utils/useForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport NewSubDivision from \"../../src/components/subDivision/NewSubDivision\";\r\nimport GatedSignin from \"../../src/components/user/GatedSignin\";\r\n\r\nconst newSubDivision = () => {\r\n  return (\r\n    <GatedSignin>\r\n      <NewSubDivision />\r\n    </GatedSignin>\r\n  );\r\n};\r\nexport default newSubDivision;\r\n","import React from \"react\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport { Field } from \"formik\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nconst SygefexMuiSelect = (props) => {\r\n  const classes = useStyles();\r\n  const { name, label, options, variant = \"outlined\", helperText } = props;\r\n\r\n  return (\r\n    <Field\r\n      variant={variant}\r\n      component={TextField}\r\n      fullWidth\r\n      name={name}\r\n      label={label}\r\n      select\r\n      className={classes.root}\r\n      helperText={helperText}\r\n    >\r\n      {options &&\r\n        options.map((item) => (\r\n          <MenuItem value={item.value} key={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n    </Field>\r\n  );\r\n};\r\n\r\nexport default SygefexMuiSelect;\r\n","import React from 'react'\r\nimport { concat } from 'apollo-link'\r\n\r\n\r\nconst uniqueCodeGen = keyLength => {\r\n  var i,\r\n    key = '',\r\n    //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    characters =\r\n      'abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789'\r\n\r\n  var charactersLength = characters.length\r\n\r\n  for (i = 0; i < keyLength; i++) {\r\n    key += characters.substr(\r\n      Math.floor(Math.random() * charactersLength + 1),\r\n      1,\r\n    )\r\n  }\r\n\r\n  return key\r\n}\r\n\r\nconst objectFromCode = codeValue => {\r\n  const storedObject = {\r\n    candCode: `${codeValue}`,\r\n  }\r\n  return storedObject\r\n}\r\n\r\nconst getObjectFromID = suppliedID => {\r\n  const theObject = {\r\n    id: `${suppliedID}`,\r\n  }\r\n  return theObject\r\n}\r\n\r\nconst centerExamSessionObjectFromCode = codeValue => {\r\n  const storedObject = {\r\n    centerExamSession: `${codeValue}`,\r\n  }\r\n  return storedObject\r\n}\r\n\r\nconst candExamSessionCode = (candID, examID, sessionID) => {\r\n  return `${candID + examID + sessionID}`\r\n}\r\n\r\nconst getSelectedObject = (dataSource, objectID) => {\r\n  // 1 copy the data source\r\n  if (dataSource.length > 0) {\r\n    const tempObjects = [...dataSource]\r\n    // get the object\r\n    const selectedObject = tempObjects.find(item => item.id === objectID)\r\n    return selectedObject\r\n  }\r\n}\r\n// function to model a number with leading zeroes\r\nNumber.prototype.pad = function (size) {\r\n  var s = String(this)\r\n  while (s.length < (size || 2)) {\r\n    s = '0' + s\r\n  }\r\n  return s\r\n}\r\n\r\nconst calcCandAve = candScores => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0)\r\n  const coeffTotal = candScores.reduce(\r\n    (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n    0,\r\n  )\r\n  const candAve = aveTotal / coeffTotal\r\n  return candAve\r\n}\r\nconst calcCandTotalScore = candScores => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0)\r\n  return aveTotal\r\n}\r\nconst calcCandTotalCoeff = candScores => {\r\n  const coeffTotal =\r\n    candScores &&\r\n    candScores.reduce(\r\n      (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n      0,\r\n    )\r\n  return coeffTotal\r\n}\r\nconst roundFloatNumber = (value, decimals) => {\r\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals)\r\n}\r\nconst removeTypename = (value) => {\r\n  if (value === null || value === undefined) {\r\n    return value;\r\n  } else if (Array.isArray(value)) {\r\n    return value.map(v => removeTypename(v));\r\n  } else if (typeof value === 'object') {\r\n    const newObj = {};\r\n    Object.entries(value).forEach(([key, v]) => {\r\n      if (key !== '__typename') {\r\n        newObj[key] = removeTypename(v);\r\n      }\r\n    });\r\n    return newObj;\r\n  }\r\n  return value;\r\n};\r\n\r\nconst uploadFile = async (e) => {\r\n  const files = e.target.files;\r\n  const data = new FormData();\r\n  data.append('file', files[0]);\r\n  data.append('upload_preset', 'ineximages');\r\n  const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\r\n    method: 'POST',\r\n    body: data\r\n  });\r\n  const file = await res.json();\r\n  console.log(file);\r\n  // this.setState({ image: file.secure_url });\r\n  setState({ image: file.secure_url })\r\n}\r\n\r\n// const updateCacheForDelete = (cache, { data }, queryToUpdate) => {\r\n//   // manually update the cache so that the data are all the same\r\n//   // 1. read the cache for the data we want\r\n//   const { regions, deleteRegion } = data\r\n//   const data = cache.readQuery({ query: queryToUpdate });\r\n//   // selects all the other regions leaving out the deleted one\r\n//   regions = regions.filter(region => region.id !== deleteRegion.id);\r\n//   //  3. write the new data back to the cache\r\n//   console.log(\"getting payload\");\r\n//   console.log(payload);\r\n//   cache.writeQuery({ query: queryToUpdate, data });\r\n// };\r\n\r\nconst updateCache = (cache, payload) => {\r\n  // manually update the cache so that the data are all the same\r\n  // 1. read the cache for the data we want\r\n  const data = cache.readQuery({ query: getAllRegionsQuery });\r\n  // the deletedselect all the other regions except the deleted one from the cache\r\n  data.regions = data.regions.filter(region => region.id !== payload.data.deleteRegion.id);\r\n  //  3. write the new data back to the cache\r\n  console.log(\"getting payload\");\r\n  console.log(payload);\r\n  cache.writeQuery({ query: getAllRegionsQuery, data });\r\n};\r\nexport {\r\n  candExamSessionCode,\r\n  roundFloatNumber,\r\n  calcCandTotalScore,\r\n  calcCandTotalCoeff,\r\n  calcCandAve,\r\n  objectFromCode,\r\n  uniqueCodeGen,\r\n  getSelectedObject,\r\n  getObjectFromID,\r\n  removeTypename,\r\n  uploadFile,\r\n  centerExamSessionObjectFromCode,\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  MenuItem,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useForm from \"../utils/useForm\";\r\nimport SygefexMuiInput from \"../muiComponents/controls/SygefexMuiInput\";\r\nimport SygefexMuiSelect from \"../muiComponents/controls/SygefexMuiSelect\";\r\nimport { useMutation, useApolloClient, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  getDivisionsOfARegionQuery,\r\n  getAllRegionsQuery,\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { getObjectFromID } from \"../queries&Mutations&Functions/Functions\";\r\nimport { createSubDivisionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // fontSize: 100,\r\n  },\r\n  divStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    top: \"2rem\",\r\n    height: \"90vh\",\r\n  },\r\n  pageStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n    minWidth: \"30vw\",\r\n  },\r\n  listStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingTop: \"0.1rem\",\r\n  },\r\n  titleStyled: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n\r\n  allControls: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    paddingTop: \"0.2rem\",\r\n    border: \"0.05rem solid #1254ac\",\r\n    // width: \"20vw\",\r\n    borderRadius: \"0.5rem\",\r\n    // marginTop: \"2rem\",\r\n  },\r\n  centerAll: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    minWidth: \"30vw\",\r\n  },\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  regionID: Yup.object().required(\"Choissisez une région\"),\r\n  division: Yup.string().required(\"Choissisez un département\"),\r\n  subDivName: Yup.string().required(\"Nom arrondissement Obligatoire\"),\r\n  subDivCode: Yup.string().required(\"Code arrondissement Obligatoire\"),\r\n});\r\n\r\nconst NewSubDivision = () => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [regions, setRegions] = useState([]);\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [regionID, setRegionID] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    subDivName: \"\",\r\n    subDivCode: \"\",\r\n    division: \"\",\r\n    regionID: \"\",\r\n  };\r\n  const handleRegionIDChange = (e) => {\r\n    console.log(e.target);\r\n    setRegionID(e.target.value);\r\n  };\r\n  const loadRegionData = async () => {\r\n    const { error, data, loading } = await client.query({\r\n      query: getAllRegionsQuery,\r\n    });\r\n    console.log(data.regions);\r\n\r\n    setRegions(data.regions);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRegionData();\r\n  }, []);\r\n  console.log({ regionID });\r\n  // const refinedRegion = removeTypename(regions)\r\n  const getRegionsOptions =\r\n    regions && regions.map((item) => ({ value: item.id, label: item.regName }));\r\n\r\n    const loadDivisionData=async()=>{\r\n\r\n      const { error, data } = await client.query({\r\n        // skip: regionID && !regionID,\r\n       query: getDivisionsOfARegionQuery,\r\n          variables: { id: regionID },\r\n      }\r\n      );\r\n      setDivisions(data.region)\r\n    }\r\n\r\n  useEffect(() => {\r\n    loadDivisionData();\r\n  }, [regionID]);\r\n\r\n  console.log(dataRegion);\r\n  const getRegion = dataRegion && dataRegion.region;\r\n  const { division } = { ...getRegion };\r\n  console.log(division);\r\n  const getDivOptions =\r\n    division &&\r\n    division.map((item) => ({ value: item, label: item.subDivName }));\r\n\r\n  console.dir(dataRegion);\r\n  const [createSubDivision, { loading, error }] = useMutation(\r\n    createSubDivisionMutation,\r\n    {\r\n      refetchQueries: [\"getAllSubDivisionsQuery\"],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createSubDivision({\r\n          variables: {\r\n            ...values,\r\n            division: values.division && getObjectFromID(values.division.id),\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ submitForm, setFieldValue, isSubmitting }) => {\r\n        return (\r\n          <div className={classes.centerAll}>\r\n            <Paper className={classes.pageStyled} elevation={3}>\r\n              <Form aria-busy={isSubmitting}>\r\n                {(isSubmitting || loading) && <LinearProgress />}\r\n                <Grid className={classes.centerAll} container>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item>\r\n                      <Error error={error} />\r\n                      <Typography\r\n                        className={classes.titleStyled}\r\n                        variant=\"body1\"\r\n                      >\r\n                        Nouvel Arrondissement\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container className={classes.centerAll}>\r\n                    <Grid item className={classes.centerAll}>\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"regionID\"\r\n                        label=\"La Région\"\r\n                        onChange={handleRegionIDChange}\r\n                        component={Select}\r\n                        // placeholder=\"la Région\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"regionID\" />}\r\n                        options={getRegionsOptions}\r\n                        fullWidth\r\n                      />\r\n                      <Field\r\n                        variant=\"outlined\"\r\n                        name=\"division\"\r\n                        label=\"Le Département\"\r\n                        component={Select}\r\n                        placeholder=\"le Département\"\r\n                        disabled={isSubmitting}\r\n                        helperText={<ErrorMessage name=\"division\" />}\r\n                        options={getRegionsOptions}\r\n                        fullWidth\r\n                      />\r\n\r\n                      <Field\r\n                        name=\"subDivName\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Nom Arrondissement\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"subDivName\" />}\r\n                      />\r\n                      <Field\r\n                        name=\"subDivCode\"\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        label=\"Code Arrondissement\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={isSubmitting || loading}\r\n                        helperText={<ErrorMessage name=\"subDivCode\" />}\r\n                      />\r\n                      <Button disabled={isSubmitting} onClick={submitForm}>\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewSubDivision;\r\n//  <SygefexMuiSelect\r\n//    variant=\"standard\"\r\n//    name=\"division\"\r\n//    label=\"Le Département\"\r\n//    placeholder=\"Le Département\"\r\n//    disabled={isSubmitting}\r\n//    options={getDivOptions}\r\n//    helperText={<ErrorMessage name=\"division\" />}\r\n//  />;\r\n// //\r\n\r\n// <SygefexMuiSelect\r\n//   variant=\"standard\"\r\n//   name=\"division\"\r\n//   label=\"Le Département\"\r\n//   placeholder=\"Le Département\"\r\n//   disabled={isSubmitting}\r\n//   options={getDivOptions}\r\n//   helperText={<ErrorMessage name=\"division\" />}\r\n// />\r\n\r\n// <SygefexMuiSelect\r\n//   variant=\"standard\"\r\n//   name=\"division\"\r\n//   label=\"Le Département\"\r\n//   placeholder=\"Le Département\"\r\n//   disabled={isSubmitting}\r\n//   helperText={<ErrorMessage name=\"division\" />}\r\n// >\r\n//   {division &&\r\n//     division.map((item) => (\r\n//       <MenuItem value={item.id} key={item.id}>\r\n//         {item.divName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </SygefexMuiSelect>\r\n\r\n// <Field\r\n//   component={TextField}\r\n//   select\r\n//   name=\"regionD\"\r\n//   disabled={isSubmitting}\r\n//   helperText=\"region\"\r\n// >\r\n//   {regions &&\r\n//     regions.map((item) => (\r\n//       <MenuItem key={item.id} value={item.id}>\r\n//         {item.regName}\r\n//       </MenuItem>\r\n//     ))}\r\n// </Field>;\r\n\r\n// <Field\r\n//   variant=\"standard\"\r\n//   disabled={isSubmitting}\r\n//   fullWidth\r\n//   placeholder=\"Le Département\"\r\n//   name=\"division\"\r\n//   label=\"Département\"\r\n//   options={getDivOptions}\r\n//   component={Select}\r\n//   helperText={<ErrorMessage name=\"region\" />}\r\n// />\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = (initialValues) => {\r\n  const [state, setState] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    console.log({ name, value });\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    setState((state) => ({ ...state, [name]: val }));\r\n  };\r\n\r\n  const handleReactSelectChange = (value, action) => {\r\n    console.log(value.value);\r\n    console.log(action.name);\r\n\r\n    setState((state) => ({ ...state, [action.name]: value.value }));\r\n  };\r\n\r\n\r\n  return [\r\n    state,\r\n    setState,\r\n    handleReactSelectChange,\r\n    handleInputChange,\r\n  ];\r\n};\r\nexport default useForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAzCA;AAgDA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAHA;AACA;AAHA;AAAA;AAEA;AAAA;AAMA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;AACA;AAmDA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AA1DA;AA6DA;AADA;AA5DA;AAAA;AAAA;AAAA;AAAA;AACA;AAgEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAFA;AADA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpTA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}