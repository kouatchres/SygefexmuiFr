{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\login.js.78948c0ae615945f7cc0.hot-update.js","sources":["webpack:///./src/components/utils/FormInputs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useField, Field } from \"formik\";\r\n\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\nconst customStyle = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    fontFamily: \"Roboto Slab\",\r\n    border: \"0 solid black\",\r\n    borderBottom: \"0.9px solid #0780b7\",\r\n    fontSize: \"1.6rem\",\r\n    paddingTop: \"1rem\",\r\n    outline: \"none\",\r\n    backgroundColor: \"white\",\r\n    color: \"#000\",\r\n    borderRadius: \"0\",\r\n    boxShadow: \"none\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      borderBottom: \" 0.2rem solid #d4351c\",\r\n      borderRadius: \"0\",\r\n    }, // border style on hover\r\n    \"&:focus\": {\r\n      borderBottom: \" 0.2rem solid #d4351c\",\r\n      borderRadius: \"0\",\r\n    }, // border style on hover\r\n  }),\r\n  option: (provided) => ({\r\n    ...provided,\r\n    textAlign: \"left\",\r\n    fontSize: \"1.5rem\",\r\n  }),\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  padding-top: 1rem;\r\n  /* display:block; */\r\n  margin-top: 0.4rem;\r\n  font-size: 1.5rem;\r\n  border-style: none;\r\n  width: 100%;\r\n  outline: none;\r\n  border-bottom: 0.09rem solid black;\r\n  z-index: 10;\r\n  font-family: \"Roboto Slab\";\r\n\r\n  &:valid + label {\r\n    top: -0.25rem;\r\n    font-size: 1.1rem;\r\n    color: ${(props) => props.theme.britishBlue};\r\n  }\r\n  &:focus,\r\n  &active {\r\n    outline: none;\r\n    border-bottom: 0.2rem solid ${(props) => props.theme.britishRed};\r\n  }\r\n  &:focus + label {\r\n    top: -0.25rem;\r\n    font-size: 1.1rem;\r\n    color: #aaa;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst AllRadios = styled.div`\r\n  position: relative;\r\n  margin: 0.5rem;\r\n  label {\r\n    border: 0;\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-size: 1.5rem;\r\n  border-style: none;\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 1.5rem;\r\n  color: ${(props) => props.theme.greys[2]};\r\n  pointer-events: none;\r\n  transition: all 1s ease-out;\r\n  font-family: \"Roboto Slab\";\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n  margin-top: 1rem;\r\n  font-size: 1.2rem;\r\n  border-style: none;\r\n  border-bottom: 0.09rem solid black;\r\n  option {\r\n    background: white;\r\n    font-weight: 400;\r\n    display: flex;\r\n    white-space: pre;\r\n    min-height: 20px;\r\n    padding: 0px 2px 1px;\r\n    background: black;\r\n    border-radius: 0.5rem;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.britishRed};\r\n  }\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  padding-top: 0.2rem;\r\n  font-size: 1.2rem;\r\n  color: ${(props) => props.theme.britishRed};\r\n  /* padding-left: 0.5rem; */\r\n`;\r\n\r\nconst RadioStyled = styled.div`\r\n  display: inline-block;\r\n  input,\r\n  label :hover {\r\n    cursor: pointer;\r\n    background: black;\r\n  }\r\n\r\n  input[type=\"radio\"] {\r\n    margin-top: 0.5rem;\r\n    border: 0;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin: 0 0.7rem;\r\n\r\n    background: black;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  color: black;\r\n  border: 0;\r\n  border-radius: 0.5rem;\r\n  font-size: 2.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.5rem;\r\n  /* box-shadow: ${(props) => props.theme.bs2}; */\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonStyled = styled.div`\r\n  padding-bottom: 0.5rem;\r\n  padding-top: 1rem;\r\n  button {\r\n    border-radius: 0.6rem;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    border: 0.05rem solid black;\r\n    color: black;\r\n    background: ${(props) => props.theme.pureWhite};\r\n    cursor: pointer;\r\n    padding: 0.8rem;\r\n    outline: none;\r\n    &:hover {\r\n      color: black;\r\n      background-color: ${(props) => props.theme.pureWhite};\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.div`\r\n  margin: 0 3rem;\r\n  padding: 0.6rem;\r\n  font-size: 1.7rem;\r\n  border-radius: 0.9rem;\r\n  border: 0.001rem solid black;\r\n  border-top: 1rem solid black;\r\n  border-bottom: 1rem solid ${(props) => props.theme.tableRed};\r\n  box-shadow: ${(props) => props.theme.formBS};\r\n\r\n  min-width: 20rem;\r\n\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n  &::before {\r\n    height: 0.3rem;\r\n    content: \"\";\r\n    display: block;\r\n    background-image: linear-gradient(\r\n      to right,\r\n      #0780b7 0%,\r\n      #e2b04a 20%,\r\n      #0780b7 100%\r\n    );\r\n    /* background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%); */\r\n  }\r\n  &[aria-busy=\"true\"]::before {\r\n    background-size: 50% auto;\r\n    animation: ${loading} 0.5s linear infinite;\r\n  }\r\n`;\r\n\r\nconst SygexInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <InputGroup>\r\n      <StyledInput className=\"text-input\" {...field} {...props} required />\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nconst SygefexSelect = ({ theme, ...props }) => {\r\n  const customTheme = (theme) => ({\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      primary25: \"#0780b7\",\r\n      primary: \"#d17f05\",\r\n    },\r\n  });\r\n  return (\r\n    <Select theme={customTheme} styles={customStyle} {...props} isSearchable />\r\n  );\r\n};\r\n\r\nconst SygefexRadio = ({ label, options, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <AllRadios>\r\n      <label>{label}</label>\r\n      <Field label={label} {...field} {...props}>\r\n        {({ field }) => {\r\n          return options.map((item) => (\r\n            <RadioStyled>\r\n              <input\r\n                {...field}\r\n                type=\"radio\"\r\n                id={item.value}\r\n                value={item.value}\r\n                checked={field.value === item.value}\r\n              />\r\n              <label htmlFor={props.id || item.value}>{item.key}</label>\r\n            </RadioStyled>\r\n          ));\r\n        }}\r\n      </Field>\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </AllRadios>\r\n  );\r\n};\r\n\r\nexport {\r\n  SygefexSelect,\r\n  SygefexRadio,\r\n  StyledLabel,\r\n  StyledButton,\r\n  ButtonStyled,\r\n  SygexInput,\r\n  StyledForm,\r\n};\r\n\r\n// <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAYA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAlBA;AAAA;AAsBA;AAAA;AAEA;AACA;AAHA;AAAA;AAvBA;AA8BA;AAAA;AAAA;AAAA;AAeA;AAAA;AAKA;AAAA;AASA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AASA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAMA;AAAA;AASA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAwBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAFA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAYA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}