{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newRegion.js.45f9f3c1d4b5ab65aabd.hot-update.js","sources":["webpack:///./src/components/user/Login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport Link from \"next/link\";\r\nimport { SygexInput, StyledForm } from \"../utils/FormInputs\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { loginUserMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\n// const InputGroup = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   margin: 0 1rem;\r\n// `;\r\n// const AllControls = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n// const LoginStyled = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr;\r\n//   justify-items: left;\r\n//   a {\r\n//     display: block;\r\n//     cursor: pointer;\r\n//   }\r\n//   h9 {\r\n//     display: block;\r\n//     padding-left: 0;\r\n//     padding-right: 2rem;\r\n//   }\r\n// `;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .min(3, \"Email 3 characters au moins\")\r\n    .required(\"Email Obligatoire\")\r\n    .email(\"Email invalide\"),\r\n\r\n  password: Yup.string()\r\n    .required(\"Mot de passe Obligatoire\")\r\n    .min(3, \"Mot de passe 3 characters au moins\"),\r\n});\r\n\r\nconst Login = () => {\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [login, { loading, error }] = useMutation(loginUserMutation, {\r\n    refetchQueries: [\"currentUserQuery\"],\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await login({\r\n          variables: { ...values },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => {\r\n        return (\r\n          <div>\r\n            <h4>Acceder a son compte</h4>\r\n            <Error error={error} />\r\n            <StyledForm\r\n              disabled={isSubmitting || loading}\r\n              aria-busy={isSubmitting || loading}\r\n            >\r\n              <Form>\r\n                <SygexInput\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  disabled={isSubmitting || loading}\r\n                />\r\n                <SygexInput\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"Mot de passe\"\r\n                  disabled={isSubmitting || loading}\r\n                />\r\n                <ul>\r\n                  <h6>Pas encore de compte?</h6>\r\n                  <Link href=\"/creates/signup\">\r\n                    <a>Cr√©ez votre compte</a>\r\n                  </Link>\r\n                </ul>\r\n                <Button variant=\"contained\" onClick={submitForm}>\r\n                  Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                </Button>\r\n              </Form>\r\n            </StyledForm>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Login;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AANA;AACA;AAUA;AACA;AACA;AACA;AAFA;AACA;AAFA;AAOA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}