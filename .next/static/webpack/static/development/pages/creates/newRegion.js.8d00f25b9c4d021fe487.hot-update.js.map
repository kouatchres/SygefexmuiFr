{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newRegion.js.8d00f25b9c4d021fe487.hot-update.js","sources":["webpack:///./src/components/region/NewRegionHooks.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { StyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { createNewRegionMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport {\r\n  SygexInput,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport RegionsList from \"./RegionsList\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst AllControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AllControlsComplete = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  regName: Yup.string().required(\"Nom Région Obligatoire\"),\r\n  regCode: Yup.string().required(\"Code Région Obligatoire\"),\r\n});\r\n\r\nconst NewRegionHooks = () => {\r\n  const initialValues = {\r\n    regName: \"\",\r\n    regCode: \"\",\r\n  };\r\n\r\n  const [createRegion, { loading, error }] = useMutation(\r\n    createNewRegionMutation,\r\n    {\r\n      refetchQueries: [\"getAllRegionsQueries\"],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await createRegion({ variables: { ...values } });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => {\r\n        return (\r\n          <StyledPage>\r\n            <h4>Nouvelle Région</h4>\r\n            <Error error={error} />\r\n            <StyledForm\r\n              disabled={isSubmitting || loading}\r\n              aria-busy={isSubmitting || loading}\r\n            >\r\n              <Form>\r\n                <AllControlsComplete>\r\n                  <AllControls>\r\n                    <InputGroup>\r\n                      <SygexInput\r\n                        name=\"regName\"\r\n                        type=\"text\"\r\n                        label=\"Nom la Région\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                      <SygexInput\r\n                        name=\"regCode\"\r\n                        type=\"text\"\r\n                        label=\"Code la Région\"\r\n                        disabled={isSubmitting}\r\n                      />\r\n                    </InputGroup>\r\n                    <ButtonStyled>\r\n                      <StyledButton type=\"submit\" disabled={isSubmitting}>\r\n                        Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                      </StyledButton>\r\n                    </ButtonStyled>\r\n                  </AllControls>\r\n                  <RegionsList />\r\n                </AllControlsComplete>\r\n              </Form>\r\n            </StyledForm>\r\n          </StyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default NewRegionHooks;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AACA;AAFA;AASA;AADA;AARA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}