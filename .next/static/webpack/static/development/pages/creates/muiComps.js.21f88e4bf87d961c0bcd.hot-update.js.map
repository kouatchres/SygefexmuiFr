{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\muiComps.js.21f88e4bf87d961c0bcd.hot-update.js","sources":["webpack:///./node_modules/material-ui-formik-components/Autocomplete/Autocomplete.js","webpack:///./node_modules/material-ui-formik-components/Autocomplete/index.js","webpack:///./src/components/attendance/AllMuiFields.jsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _TextField = _interopRequireDefault(require(\"@material-ui/core/TextField\"));\n\nvar _Autocomplete = _interopRequireDefault(require(\"@material-ui/lab/Autocomplete\"));\n\nvar _formik = require(\"formik\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar FAutocomplete = function FAutocomplete(props) {\n  var field = props.field,\n      _props$form = props.form,\n      dirty = _props$form.dirty,\n      touched = _props$form.touched,\n      errors = _props$form.errors,\n      setFieldValue = _props$form.setFieldValue,\n      options = props.options,\n      getOptionLabel = props.getOptionLabel,\n      textFieldProps = props.textFieldProps,\n      autoCompleteProps = _objectWithoutProperties(props, [\"field\", \"form\", \"options\", \"getOptionLabel\", \"textFieldProps\"]); // Merge default textFieldProps with textFieldProps passed in the component\n\n\n  var mergedTextFieldProps = _objectSpread(_objectSpread({}, FAutocomplete.defaultProps.textFieldProps), textFieldProps);\n\n  var errorText = (0, _formik.getIn)(errors, field.name);\n  var touchedVal = (0, _formik.getIn)(touched, field.name);\n  var hasError = dirty && touchedVal && errorText !== undefined;\n  var isMultiple = autoCompleteProps.multiple;\n  var isMultipleWithValue = isMultiple && field.value;\n  var canBeRendered = !isMultiple || isMultipleWithValue;\n\n  if (isMultiple && field.value === null) {\n    // eslint-disable-next-line no-console\n    console.error(\"Initial value of autocomplete with name: \\\"\".concat(field.name, \"\\\" cannot be null. Use [] instead.\"));\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, canBeRendered && /*#__PURE__*/_react[\"default\"].createElement(_Autocomplete[\"default\"], _extends({\n    options: options,\n    getOptionLabel: getOptionLabel,\n    onChange: function onChange(_, value) {\n      return setFieldValue(field.name, value);\n    },\n    value: field.value,\n    getOptionSelected: function getOptionSelected(option, val) {\n      return option.value === val.value;\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_TextField[\"default\"], _extends({}, params, {\n        error: hasError,\n        helperText: hasError ? errorText : ''\n      }, mergedTextFieldProps));\n    }\n  }, autoCompleteProps)));\n};\n\nFAutocomplete.propTypes = {\n  form: _propTypes[\"default\"].shape({\n    dirty: _propTypes[\"default\"].bool,\n    errors: _propTypes[\"default\"].object,\n    setFieldValue: _propTypes[\"default\"].func\n  }).isRequired,\n  options: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    label: _propTypes[\"default\"].string,\n    value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])\n  })).isRequired,\n  getOptionLabel: _propTypes[\"default\"].func,\n  textFieldProps: _propTypes[\"default\"].shape({\n    label: _propTypes[\"default\"].string,\n    required: _propTypes[\"default\"].bool,\n    fullWidth: _propTypes[\"default\"].bool,\n    margin: _propTypes[\"default\"].oneOf(['none', 'dense', 'normal'])\n  })\n};\nFAutocomplete.defaultProps = {\n  getOptionLabel: function getOptionLabel(option) {\n    return option.label;\n  },\n  textFieldProps: {\n    required: false,\n    fullWidth: true,\n    margin: 'normal'\n  }\n};\nvar _default = FAutocomplete;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Autocomplete\", {\n  enumerable: true,\n  get: function get() {\n    return _Autocomplete[\"default\"];\n  }\n});\n\nvar _Autocomplete = _interopRequireDefault(require(\"./Autocomplete\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"material-ui-formik-components/TextField\";\r\nimport { Select } from \"material-ui-formik-components/Select\";\r\nimport { Autocomplete } from \"material-ui-formik-components/Autocomplete\";\r\nimport countries from \"./data/countries.json\";\r\n\r\nclass RegistrationForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <Formik\r\n          initialValues={{\r\n            username: \"\",\r\n            gender: \"Female\",\r\n            country: null,\r\n          }}\r\n          onSubmit={(values) => {\r\n            alert(\r\n              `Username: ${values.username}\\nGender: ${values.gender}\\nCountry: ${values.country.label}`\r\n            );\r\n          }}\r\n        >\r\n          <Form>\r\n            <Field name=\"username\" label=\"Username\" component={TextField} />\r\n            <Field\r\n              name=\"gender\"\r\n              label=\"Gender\"\r\n              options={[\r\n                { value: \"Male\", label: \"Male\" },\r\n                { value: \"Female\", label: \"Female\" },\r\n                { value: \"Other\", label: \"Other\" },\r\n              ]}\r\n              component={Select}\r\n            />\r\n            <Field\r\n              name=\"country\"\r\n              options={countries}\r\n              component={Autocomplete}\r\n              textFieldProps={{\r\n                label: \"Country\",\r\n              }}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAGA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1CA;AACA;AA4CA;;;;;;;A","sourceRoot":""}